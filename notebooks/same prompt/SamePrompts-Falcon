{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"WawoRB5jr_QT"},"outputs":[],"source":["%%capture\n","%pip install bertopic"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZMfvej8oscaj"},"outputs":[],"source":["import nltk\n","import gensim\n","import gensim.corpora as corpora\n","import pandas as pd\n","import numpy as np\n","from bertopic import BERTopic\n","from sentence_transformers import SentenceTransformer\n","from sklearn.decomposition import PCA\n","from hdbscan import HDBSCAN\n","from nltk.stem import WordNetLemmatizer\n","from nltk.tokenize import word_tokenize\n","from sklearn.feature_extraction.text import CountVectorizer\n","from bertopic.vectorizers import ClassTfidfTransformer\n","from gensim.models.coherencemodel import CoherenceModel"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ux3OTdSBscwq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706116404564,"user_tz":-330,"elapsed":82911,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e293650f-8657-4e97-d2e8-c16fe6cb1379"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"hU9nDvNKlxYq"},"source":["## Topic Model Creation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a6OzApz5s-47"},"outputs":[],"source":["import re\n","import pandas as pd\n","\n","dfs = []\n","TOPICS = ['Indian climate', 'Indian defence', 'Indian economy', 'Indian infrastructure']\n","for topic in TOPICS:\n","  df = pd.read_csv(f'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/data/falcon-7b-200-24012024-v3/{topic}/data.csv')\n","  dfs.append(df)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wInvDvU2m-qh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706116408937,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"6ff3e312-d7ec-44ad-ec4f-4b52a4ac213c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[           Category                                             Prompt  \\\n"," 0    Indian climate  Indian climate scientists have long complained...   \n"," 1    Indian climate  Indian climate is characterized by great varia...   \n"," 2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n"," 3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n"," 4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n"," ..              ...                                                ...   \n"," 495  Indian climate  Indian climate has been always unpredictable. ...   \n"," 496  Indian climate  Indian climate change activists on hunger stri...   \n"," 497  Indian climate  Indian climate is hot and humid. During summer...   \n"," 498  Indian climate  Indian climate is very variable and changes fr...   \n"," 499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n"," \n","      Generated Text    i  MAX_LEN  \n"," 0                 0  189      NaN  \n"," 1                 1  200      NaN  \n"," 2                 2  186      NaN  \n"," 3                 3  193      NaN  \n"," 4                 4  185      NaN  \n"," ..              ...  ...      ...  \n"," 495             495  183      NaN  \n"," 496             496  185      NaN  \n"," 497             497  200      NaN  \n"," 498             498  192      NaN  \n"," 499             499  200      NaN  \n"," \n"," [500 rows x 5 columns],\n","            Category                                             Prompt  \\\n"," 0    Indian defence  Indian defence minister AK Antony said on Thur...   \n"," 1    Indian defence  Indian defence minister to visit Pakistan for ...   \n"," 2    Indian defence  Indian defence minister Arun Jaitley said on T...   \n"," 3    Indian defence  Indian defence analyst Major General Gurmeet K...   \n"," 4    Indian defence  Indian defence minister Manohar Parrikar on Tu...   \n"," ..              ...                                                ...   \n"," 495  Indian defence  Indian defence minister Rajnath Singh, who arr...   \n"," 496  Indian defence  Indian defence ministry plans to induct a thir...   \n"," 497  Indian defence  Indian defence forces have always been at the ...   \n"," 498  Indian defence  Indian defence minister Rajnath Singh has anno...   \n"," 499  Indian defence  Indian defence budget for next year is set at ...   \n"," \n","      Generated Text    i  MAX_LEN  \n"," 0                 0  190      NaN  \n"," 1                 1  198      NaN  \n"," 2                 2  181      NaN  \n"," 3                 3  191      NaN  \n"," 4                 4  196      NaN  \n"," ..              ...  ...      ...  \n"," 495             495  196      NaN  \n"," 496             496  187      NaN  \n"," 497             497  195      NaN  \n"," 498             498  183      NaN  \n"," 499             499  193      NaN  \n"," \n"," [500 rows x 5 columns],\n","            Category                                             Prompt  \\\n"," 0    Indian economy  Indian economy is on a path of growth, but the...   \n"," 1    Indian economy  Indian economy will be 'world's third biggest ...   \n"," 2    Indian economy  Indian economy has been going through rough da...   \n"," 3    Indian economy  Indian economy has been witnessing a significa...   \n"," 4    Indian economy  Indian economy to shrink by 10% on account of ...   \n"," ..              ...                                                ...   \n"," 495  Indian economy  Indian economy will bounce back to 8.4 percent...   \n"," 496  Indian economy  Indian economy, which grew by 5.7 per cent in ...   \n"," 497  Indian economy  Indian economy has been in a slow down mode si...   \n"," 498  Indian economy  Indian economy has shown signs of slowdown wit...   \n"," 499  Indian economy  Indian economy is expected to rebound with hig...   \n"," \n","      Generated Text    i  MAX_LEN  \n"," 0                 0  184      NaN  \n"," 1                 1  193      NaN  \n"," 2                 2  193      NaN  \n"," 3                 3  197      NaN  \n"," 4                 4  187      NaN  \n"," ..              ...  ...      ...  \n"," 495             495  195      NaN  \n"," 496             496  200      NaN  \n"," 497             497  188      NaN  \n"," 498             498  190      NaN  \n"," 499             499  191      NaN  \n"," \n"," [500 rows x 5 columns],\n","                   Category                                             Prompt  \\\n"," 0    Indian infrastructure  Indian infrastructure giant Gammon India is pl...   \n"," 1    Indian infrastructure  Indian infrastructure is in a very poor state,...   \n"," 2    Indian infrastructure  Indian infrastructure sector, particularly the...   \n"," 3    Indian infrastructure  Indian infrastructure is in the news again, th...   \n"," 4    Indian infrastructure  Indian infrastructure sector is expected to wi...   \n"," ..                     ...                                                ...   \n"," 495  Indian infrastructure  Indian infrastructure company L&T is all set t...   \n"," 496  Indian infrastructure  Indian infrastructure is facing an unprecedent...   \n"," 497  Indian infrastructure  Indian infrastructure giant GVK Power and Infr...   \n"," 498  Indian infrastructure  Indian infrastructure company GMR Group has be...   \n"," 499  Indian infrastructure  Indian infrastructure is in poor shape, a fact...   \n"," \n","      Generated Text    i  MAX_LEN  \n"," 0                 0  182      NaN  \n"," 1                 1  181      NaN  \n"," 2                 2  188      NaN  \n"," 3                 3  181      NaN  \n"," 4                 4  198      NaN  \n"," ..              ...  ...      ...  \n"," 495             495  186      NaN  \n"," 496             496  200      NaN  \n"," 497             497  190      NaN  \n"," 498             498  184      NaN  \n"," 499             499  181      NaN  \n"," \n"," [500 rows x 5 columns]]"]},"metadata":{},"execution_count":6}],"source":["dfs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dUFpLZ9GtQw3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706116408937,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"df91e973-2823-4edb-cea2-bfe3b2e3bd9f"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]}],"source":["import nltk\n","from string import punctuation\n","from nltk.corpus import stopwords\n","\n","nltk.download('punkt')\n","nltk.download('stopwords')\n","# nltk.download('wordnet')\n","# nltk.download('omw-1.4')\n","\n","def ispunct(ch):\n","    return ch in punctuation\n","\n","# stopwords_english = stopwords.words('english')\n","# stopwords_english.extend(['said', 'also', 'india', 'indian']\n","stopwords_english = ['said', 'also', 'india', 'indian']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lJ2jTXsetZaC"},"outputs":[],"source":["for df in dfs:\n","  df['Processed Text'] = df['Prompt'].map(lambda x: x.lower()) # prompt is generated text\n","  df['Processed Text'] = df['Processed Text'].map(lambda s: ' '.join([i for i in nltk.word_tokenize(s)[2:] if (i.isalpha() or ispunct(i)) and len(i) >= 3 and i not in stopwords_english]))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jGK0OVamtwnV","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706116411431,"user_tz":-330,"elapsed":488,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0f7ba40e-834b-43c3-efe7-527a03c3bad2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6b68bf59-10b9-4f4b-bd6a-61d6bf4277e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b68bf59-10b9-4f4b-bd6a-61d6bf4277e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b68bf59-10b9-4f4b-bd6a-61d6bf4277e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b68bf59-10b9-4f4b-bd6a-61d6bf4277e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-511a9492-437d-4254-847e-6e46e22c11c9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-511a9492-437d-4254-847e-6e46e22c11c9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-511a9492-437d-4254-847e-6e46e22c11c9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}],"source":["dfs[0]"]},{"cell_type":"markdown","metadata":{"id":"Fc0kCDrhov4i"},"source":["CDEI"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2LEUzAAuEkcx","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706116411431,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f826d6d7-1a30-4366-d8bf-7879624397e7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-e5d3485f-d40a-475c-abbd-2bcb88aea1e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5d3485f-d40a-475c-abbd-2bcb88aea1e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5d3485f-d40a-475c-abbd-2bcb88aea1e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5d3485f-d40a-475c-abbd-2bcb88aea1e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad798b49-c6b4-4519-9096-e8d2c8594353\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad798b49-c6b4-4519-9096-e8d2c8594353')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad798b49-c6b4-4519-9096-e8d2c8594353 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_50f7cffd-12c0-40dc-aa59-7620c6c76cfe\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_combined')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_50f7cffd-12c0-40dc-aa59-7620c6c76cfe button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_combined');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["df_combined = pd.DataFrame()\n","\n","for df in dfs:\n","  df_combined = df_combined.append(df, ignore_index=True)\n","\n","df_combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e79aqXDVtxJi","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1706116426082,"user_tz":-330,"elapsed":5215,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7c0f7e7b-fa87-48d5-9207-1c090d6cc4b1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["from wordcloud import WordCloud\n","import matplotlib.pyplot as plt\n","\n","for df in dfs:\n","  string = ','.join(list(df['Processed Text'].values))\n","  wordcloud = WordCloud(background_color=\"white\", max_words=5000, contour_width=3, contour_color='steelblue')\n","  wordcloud.generate(string)\n","  # wordcloud.to_image()\n","  plt.figure(figsize = (5, 5), facecolor = None)\n","  plt.imshow(wordcloud)\n","  plt.axis(\"off\")\n","  plt.tight_layout(pad = 0)\n","  plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zgib4Tc-t2FT","colab":{"base_uri":"https://localhost:8080/","height":465,"referenced_widgets":["5d6d63b110234219828182ec7bb8bb3e","4f89a0ed8e1d40ecb1a8d2b7332ede83","263059aa1a254b4eb314d9ba2153f9d9","257546363b374a7f9179b1e18f9c1eda","7423c387e4724d2faaa03be1da131129","bbf4608f5f8e481b9f4bbf251c7c9642","f978e43cc2174e68a7bd6c3d66a92bfd","18ecb401dfb44fcf82cc6f1bb3d0f055","56a19e3b760549eb9f015383a00726cf","888ced8add9243748bb934c1661bf22a","460b2856ab8943cb97a72d3fa8d7fa81","da3e2d14963e4c389f08b6d107006484","28acb0639bc54d3f8808464519afdb09","dcb2260ae1e44c8e904abd914c0a0d8f","2dad5cf4ab7b4891a36f444a3055d6de","4909d05968dc48b2a13a0dcb969855f2","bbe4bad8802642d49aebc5949944f3fe","db3cf535c6274d8f8c00332a7bd14ec8","e859971d2cb6492e889b8c8812cc06fd","92ded5c4ae8e45dbbcb6c7237d307db3","1b41e8052d55471795a2a15f4f994964","81cc709eeda343509a197911c85ffda0","c00966af081f43d590ce20b5f5ec04cb","a1fdb6e44cb54349bd10d512c3c376de","d16ebc1991c441e993305637445953a9","7e1b4c435d264037bf5316a83bc2afb6","636ba990581149539b1994e95c008bfe","bf3192b0d8ab4953a83b799821fc1f4e","51e8a67a0d894dcf901feae12eb3596a","db5b664f91a64a97aa2af2698616297a","e2b3870e8adf4a41a92e972b7da2028f","5973d7f6894940a6bcfde216a58475f0","d278e761c0f74c21b5cd03f123c8e50a","b6e17b4fd85b4baaa92bf0d968b45466","2b7d44c9eead49128387a29381500258","a61ac9f629be430084a32956808fbf92","33da8b4ed4b14e8ba595bc27f1f5c6ee","06d8faea546640da876ef0c1a90acc19","7c549d2495874de6ba2ce9f380e84a57","549b33d1be5644ea8ebfe2a81ea277f8","91b35a8addda4b9786f6c70a0344d1b6","e01e3a184f264f4394bb9201d7d622e9","82b97f0ac2b144b992ec7fe01fdcea36","4fa6d9ccc4ad494da871a32ae7193046","d18e2d9f033c4f2f891d59b19d8cfc51","efea4c67d1324ac082fced4f6028b5ec","d558fcc018ae4c59936d67c14c1985ed","9ac7408e4299401ea453e335570e9f78","50072e20ac79420882f4fe02faa04c8d","bb71576205254abbaa03adb5cb47382f","d67ebee007db47748c66f59ba2f1d863","b0f33469447c44d999d856ce38532b84","aab15d61be254036a683c24bfe8e7f0a","6d134d4d420547d39744db475f296176","1df0546e590a4b019cc773151a19be5f","704e6b334a844923b95de7fd7637f3a6","eba2cc6fa5be4ae085756db385eea04b","3826a4efba2b496eb78a2f1f2486132a","f07749020d2647d2bc6cfefb77dbcda4","41f905239891413eb328e05c85be6a82","53299c2f3e314dcd9d26112ae36a5d74","f077e194427b416c9a788ec4d09743ac","6525b5c1de4e4146b29eaf631e4260a3","f539751227fc4544bf8f3a6f3e7ea6c4","ddd85888784a41ff9024da9a90ab2365","5df6170731834b98a1ea62f4db0b1a22","67d787fd997c4b3ea316bfc9644d73c0","217e7255363e44e1a77219cdd338554a","919cf895f10d40058ad1e85adb5bf446","a0a266fbd7e74abeaf708ed1339b9b22","f7d52530291841f483964603aa2de35c","a0487ad962a147ec9b32ab13b0b794e5","3d361ca2ea6f4c98be907de6e6c345db","62a10ad5b97c4a70ad285fe242371f4a","ccb9707ba14f4bb88e3f00f39e3f4878","95e99be11b304ef19d6f5f66238fb192","ae09ff2d8c374c85a2fa056cb8ea0c90","a2e9c3e6f50c4b60bcb5c17b3953fe53","beb991d9279b4fb1a273e0fda740ce43","2846ff30c4d54b9c8e15a64c757678b3","d627549bbdab41b497d65efa44ed7137","c2d2d1c4a7e94a99b594cd1fd3b2958d","5737eaeeede7458abc37759b38eb2350","2a610580ffb9492491054afe47221740","5be65f898cde4311b3d11a2b61013942","f6daab96aec94b1cbbcb746f24c14f14","2ab1927afb494f5c95da8564572ca760","d53011b0ae104f649e8c76130fd8b112","03c83cdffc0d45d4bd2ff4821e49400d","4419cec1b8f94a09b27b1a098f7da5db","db80d09907b0409ab979ed1ac2f201e8","3ccb46ade89d4ffea59bc0645add454f","90bf2a2769fe4afea55d557f92ecce57","57ca5e76a6ee4757b0bce8d84ba736dd","1e69f8f5285e4cc2bd5af077858552e9","4f297d94367348d9a9b8ee9a908b8727","a9c6f35f8c78413086746ff0c330555c","a000db651bce4db09ecb8182aba050c5","02903e2b43504241a1cca621303e5b4b","2f77f728657f41ff92bd1da03c7b9712","2f7ab23b01444448b492d6833e4633ba","bfcb92eee9194f47a1adaaa59a85c8e3","8eca5791ebce485996525ed4cc5b62e3","cf6597c88e50454c9e85f20112881379","82a7cececa524ac8aa315091123be52a","7b0c9299ec7344afb2d15265afe79fcb","662d1f0b1db742658d73a403fea3ded8","698b228d3a9d4b84884f34a648f716a7","ce21c65af34b4d3da44c6f1935318615","48d179baa4b7403782a171e357a7a524","0aa5aff75b594636b445fe03b36d0be7","9ef662f16d0c4e33af079d0bc4511d8c","c5a80b29cdd14f5a832eb3ec75648130","bd337534434f4f228f9b5378b733a43b","cadbd401576b4b6783d25b7658f99e6a","28585f9b36eb416aa62cb0a87c34b92e","1d1187a01246499c9a1d286c8267bf4a","159b7b7d907147ca9972acf2966b19bd","b21eb0f73da44e169ad09bbd3c05cbc0","8b190dee8fb0498789706f450f50fc7d","845ffaaf08e046c9bd462be8e3b8b145","bc7cefefc4de40b088cc694f76b1ea68","284ab2a6b636495f81a79c7e11400976","0967776e69e34cfbb6fea9fa5dd2bbf5","a8ae1ab3ab59407d89c987185b2f7be1","6dbd0fbf39154a71aa6fe6d9fefbaef9","ca173b97428a4f1eb9734d91624c3f84","93e913c463944627b8c8c90c0c77d1f4","7cc82c055ca340dfb00c52f959b6d7f7","c821c547d5214685a42194be3cf93bb7","5d9f14af2a6d4515ad50a20d6033039c","5c396d282fa84cad942e313f0afb4aa1","c25a658ab16340a7a047b3e0d36426ae","624aa8ad5cf44e1490790cd235728f1a","3f1bc9ed007940b6abc0186df987e145","8cf57e3e4d7f45cb9b22d12d8eac3bea","d4b9244f7a5146cca02940fd26b06b7f","5d42353ca07e4aba8f8055c975ac1763","f79f3fa1a4314f0886ed92dd2e5d4bc6","b77f26178fba42519a507ca6831314f2","89f993ea53c549669d6f02ffa1cc4d68","d703842497d5452d864e1bb922dc3ed5","771c5f08bacb40a994f7c01cf450de31","300fb7406bad40abab93282f4f4c2321","17bbd0f640b84a0cb9e7f38942e83146","f68fc11270c04005aab2fd99d78351b0","b9162371a1a247cf85a554d89cc5cce5","cb77e5c665af4e4c806bb57e97adf1e0","0322ce42f3be4f7f8dd7db25a5f5901c","15a369f6096c4f40a4f78df52eba6d02","db2833a220eb4b77aba2f5edede8f83a","422123452d56459e95aa980a5783ef08","50c717d0bc204704bf6bb80969668751","bbff7c0e328f4968998ee5ba317cf18b"]},"executionInfo":{"status":"ok","timestamp":1706116438810,"user_tz":-330,"elapsed":11993,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"604d70d4-b4eb-491e-aeb0-6dcc5a0b4bbe"},"outputs":[{"output_type":"display_data","data":{"text/plain":[".gitattributes:   0%|          | 0.00/1.18k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5d6d63b110234219828182ec7bb8bb3e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["1_Pooling/config.json:   0%|          | 0.00/190 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"da3e2d14963e4c389f08b6d107006484"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["README.md:   0%|          | 0.00/10.6k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c00966af081f43d590ce20b5f5ec04cb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/571 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b6e17b4fd85b4baaa92bf0d968b45466"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config_sentence_transformers.json:   0%|          | 0.00/116 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d18e2d9f033c4f2f891d59b19d8cfc51"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["data_config.json:   0%|          | 0.00/39.3k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"704e6b334a844923b95de7fd7637f3a6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/438M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"67d787fd997c4b3ea316bfc9644d73c0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["sentence_bert_config.json:   0%|          | 0.00/53.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a2e9c3e6f50c4b60bcb5c17b3953fe53"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/239 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"03c83cdffc0d45d4bd2ff4821e49400d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2f77f728657f41ff92bd1da03c7b9712"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/363 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0aa5aff75b594636b445fe03b36d0be7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["train_script.py:   0%|          | 0.00/13.1k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bc7cefefc4de40b088cc694f76b1ea68"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c25a658ab16340a7a047b3e0d36426ae"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["modules.json:   0%|          | 0.00/349 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"300fb7406bad40abab93282f4f4c2321"}},"metadata":{}}],"source":["from sentence_transformers import SentenceTransformer\n","\n","embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7HqkFJF5wlkt"},"outputs":[],"source":["from bertopic.representation import KeyBERTInspired, MaximalMarginalRelevance, TextGeneration\n","\n","# KeyBERT\n","keybert = KeyBERTInspired()\n","\n","# MMR\n","mmr = MaximalMarginalRelevance(diversity=0.3)\n","\n","# Text generation with Llama 2\n","# llama2 = TextGeneration(generator, prompt=prompt)\n","\n","# All representation models\n","representation_model = {\n","    \"KeyBERT\": keybert,\n","    # \"Llama2\": llama2,\n","    \"MMR\": mmr,\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hU98LlfjoUID"},"outputs":[],"source":["def get_topic_model(umap_model, hdbscan_model):\n","  if hdbscan_model is not None:\n","    topic_model = BERTopic(\n","      # Sub-models\n","      embedding_model=embedding_model,\n","      umap_model=umap_model,\n","      hdbscan_model=hdbscan_model,\n","      representation_model=representation_model,\n","      vectorizer_model=CountVectorizer(stop_words=\"english\"),\n","      calculate_probabilities=True,\n","      # Hyperparameters\n","      top_n_words=10,\n","      verbose=True\n","    )\n","  else:\n","    topic_model = BERTopic(\n","      # Sub-models\n","      embedding_model=embedding_model,\n","      umap_model=umap_model,\n","      representation_model=representation_model,\n","      vectorizer_model=CountVectorizer(stop_words=\"english\"),\n","      calculate_probabilities=True,\n","      # Hyperparameters\n","      top_n_words=10,\n","      verbose=True\n","    )\n","\n","  return topic_model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IJ0pEH4lBHZ9"},"outputs":[],"source":["def get_c_v(topic_model, df, topics):\n","  documents = pd.DataFrame({\"Document\": df['Processed Text'],\n","                            \"ID\": range(len(df['Processed Text'])),\n","                            \"Topic\": topics})\n","  documents_per_topic = documents.groupby(['Topic'], as_index=False).agg({'Document': ' '.join})\n","  cleaned_docs = topic_model._preprocess_text(documents_per_topic.Document.values)\n","\n","  # Extract vectorizer and analyzer from BERTopic\n","  vectorizer = topic_model.vectorizer_model\n","  analyzer = vectorizer.build_analyzer()\n","\n","  # Extract features for Topic Coherence evaluation\n","  words = vectorizer.get_feature_names_out()\n","  tokens = [analyzer(doc) for doc in cleaned_docs]\n","  dictionary = corpora.Dictionary(tokens)\n","  corpus = [dictionary.doc2bow(token) for token in tokens]\n","  topic_words = [[words for words, _ in topic_model.get_topic(topic)]\n","                for topic in range(len(set(topics))-1)]\n","\n","  # Evaluate\n","  coherence_model = CoherenceModel(topics=topic_words,\n","                                  texts=tokens,\n","                                  corpus=corpus,\n","                                  dictionary=dictionary,\n","                                  coherence='c_v')\n","  c_v = coherence_model.get_coherence()\n","  return c_v\n","\n","def get_c_umass(topic_model, df, topics):\n","  documents = pd.DataFrame({\"Document\": df['Processed Text'],\n","                          \"ID\": range(len(df['Processed Text'])),\n","                          \"Topic\": topics})\n","  documents_per_topic = documents.groupby(['Topic'], as_index=False).agg({'Document': ' '.join})\n","  cleaned_docs = topic_model._preprocess_text(documents_per_topic.Document.values)\n","\n","  # Extract vectorizer and analyzer from BERTopic\n","  vectorizer = topic_model.vectorizer_model\n","  analyzer = vectorizer.build_analyzer()\n","\n","  # Extract features for Topic Coherence evaluation\n","  words = vectorizer.get_feature_names_out()\n","  tokens = [analyzer(doc) for doc in cleaned_docs]\n","  dictionary = corpora.Dictionary(tokens)\n","  corpus = [dictionary.doc2bow(token) for token in tokens]\n","  topic_words = [[words for words, _ in topic_model.get_topic(topic)]\n","                for topic in range(len(set(topics))-1)]\n","\n","  # Evaluate\n","  coherence_model = CoherenceModel(topics=topic_words,\n","                                  texts=tokens,\n","                                  corpus=corpus,\n","                                  dictionary=dictionary,\n","                                  coherence='u_mass')\n","  u_mass = coherence_model.get_coherence()\n","  return u_mass\n","\n","def get_c_npmi(topic_model, df, topics):\n","  documents = pd.DataFrame({\"Document\": df['Processed Text'],\n","                            \"ID\": range(len(df['Processed Text'])),\n","                            \"Topic\": topics})\n","  documents_per_topic = documents.groupby(['Topic'], as_index=False).agg({'Document': ' '.join})\n","  cleaned_docs = topic_model._preprocess_text(documents_per_topic.Document.values)\n","\n","  # Extract vectorizer and analyzer from BERTopic\n","  vectorizer = topic_model.vectorizer_model\n","  analyzer = vectorizer.build_analyzer()\n","\n","  # Extract features for Topic Coherence evaluation\n","  words = vectorizer.get_feature_names_out()\n","  tokens = [analyzer(doc) for doc in cleaned_docs]\n","  dictionary = corpora.Dictionary(tokens)\n","  corpus = [dictionary.doc2bow(token) for token in tokens]\n","  topic_words = [[words for words, _ in topic_model.get_topic(topic)]\n","                for topic in range(len(set(topics))-1)]\n","\n","  # Evaluate\n","  coherence_model = CoherenceModel(topics=topic_words,\n","                                  texts=tokens,\n","                                  corpus=corpus,\n","                                  dictionary=dictionary,\n","                                  coherence='c_npmi')\n","  npmi = coherence_model.get_coherence()\n","  return npmi"]},{"cell_type":"markdown","metadata":{"id":"yfPfaBqS2-Jh"},"source":["## KMeans"]},{"cell_type":"markdown","metadata":{"id":"X1Bi6SjSoi1b"},"source":["### PCA-KMeans"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ytJewhhluHBR"},"outputs":[],"source":["from sklearn.cluster import KMeans\n","experiment='PCA/KMeans'\n","umap_model = PCA()\n","hdbscan_model = KMeans(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"PRbp0UxFonxa"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jOqchaTpxTse"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BT4OqNyOxTsf","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706116451542,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d8db03f9-8423-48a2-a0c0-e396febcece6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-16e63d04-a9d9-4f91-a09c-e2a60bd0888a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16e63d04-a9d9-4f91-a09c-e2a60bd0888a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16e63d04-a9d9-4f91-a09c-e2a60bd0888a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16e63d04-a9d9-4f91-a09c-e2a60bd0888a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91ebf362-ee57-4665-81ef-624bbc9cccca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91ebf362-ee57-4665-81ef-624bbc9cccca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91ebf362-ee57-4665-81ef-624bbc9cccca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_34a43bba-2949-41f5-8dec-de980779c713\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_34a43bba-2949-41f5-8dec-de980779c713 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2S5ERygwxTsf","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["6b7377a7cac74168844456aa84680799","50aee3610eec4fbf8035d9a534c7646b","d6894ce8c0304dd5b012643298f8ea08","8052fe53208842dd9ef3f94e06066579","aeb443bb1b204563a9e68fcd54d5d5a6","d2f756f22c4845dbb83ae96a4a9da9df","007b38848b75493da0f3e965e8eec7a8","fef16fa3fd824750ad74ba478e5f687d","0d39f69353924dcca4bee4c8bb535638","20ca3e98cdd2465693de1fc5362b8703","cd6bda40dea44bf88a10cbad3395ed97"]},"executionInfo":{"status":"ok","timestamp":1706116466456,"user_tz":-330,"elapsed":10985,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"dac6361c-2385-4996-dd99-ce3907a45c6f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6b7377a7cac74168844456aa84680799"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:14:21,598 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:14:21,966 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:14:21,973 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:14:23,147 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:14:23,179 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:14:25,060 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cU0cHRQoxTsf","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706116466457,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e29b6a89-288a-4934-d7a3-829a38c18347"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                              Name  \\\n","0      0    159    0_climate_change_policy_global   \n","1      1    134     1_climate_change_minister_new   \n","2      2    120  2_climate_tropical_season_summer   \n","3      3     87            3_heat_air_skin_people   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, global, emissions, n...   \n","1  [climate, change, minister, new, world, scient...   \n","2  [climate, tropical, season, summer, winter, te...   \n","3  [heat, air, skin, people, health, temperature,...   \n","\n","                                             KeyBERT  \\\n","0  [climate, agriculture, adaptation, greenhouse,...   \n","1  [ipcc, climate, intergovernmental, modi, emiss...   \n","2  [climates, subtropical, climate, kerala, monso...   \n","3  [weather, temperature, summers, summer, temper...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, global, emissions, n...   \n","1  [climate, change, minister, new, world, scient...   \n","2  [climate, tropical, season, summer, winter, te...   \n","3  [heat, air, skin, people, health, temperature,...   \n","\n","                                 Representative_Docs  \n","0  [and climate change this report published part...  \n","1  [scientist head ipcc the intergovernmental pan...  \n","2  [being country located south asia has very div...  \n","3  [quite different from the other countries the ...  "],"text/html":["\n","  <div id=\"df-26b55248-06d9-4d55-a31f-49985bd7177c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>159</td>\n","      <td>0_climate_change_policy_global</td>\n","      <td>[climate, change, policy, global, emissions, n...</td>\n","      <td>[climate, agriculture, adaptation, greenhouse,...</td>\n","      <td>[climate, change, policy, global, emissions, n...</td>\n","      <td>[and climate change this report published part...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>134</td>\n","      <td>1_climate_change_minister_new</td>\n","      <td>[climate, change, minister, new, world, scient...</td>\n","      <td>[ipcc, climate, intergovernmental, modi, emiss...</td>\n","      <td>[climate, change, minister, new, world, scient...</td>\n","      <td>[scientist head ipcc the intergovernmental pan...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>120</td>\n","      <td>2_climate_tropical_season_summer</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[climates, subtropical, climate, kerala, monso...</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>87</td>\n","      <td>3_heat_air_skin_people</td>\n","      <td>[heat, air, skin, people, health, temperature,...</td>\n","      <td>[weather, temperature, summers, summer, temper...</td>\n","      <td>[heat, air, skin, people, health, temperature,...</td>\n","      <td>[quite different from the other countries the ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26b55248-06d9-4d55-a31f-49985bd7177c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-26b55248-06d9-4d55-a31f-49985bd7177c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-26b55248-06d9-4d55-a31f-49985bd7177c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-460e4b05-d7f4-43dd-8fda-6b90d577c9eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-460e4b05-d7f4-43dd-8fda-6b90d577c9eb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-460e4b05-d7f4-43dd-8fda-6b90d577c9eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Aujc92HOxTsg"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"markdown","metadata":{"id":"Om2-8x32vLnO"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gb7z0-3jvPw2"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Sg2hc6y1vP-b"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J1XeS3eVvP-c","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["8804e5df8e8f436d8ef125541ca7103e","041c580c1c9d4c25a886e585ce485707","839dc728fa7d40ac8e227c4b482fb02d","e5b45d16d14c4b75beaa31e882f386cb","4573e1107e6b4d00b4d40bcfa5e91c6e","a11469e9f1f2489eb91a5e06a77ceff5","532f027a70b7440da77e95bbbbec98fb","296e707c4e97495ab64d0ba4b2f32b97","ca7c90bb0a7241ed879b614196600a14","abea3779e1614fbea31a43672a2642c1","e312dc7e92d24bcdb7785958f64c06a7"]},"executionInfo":{"status":"ok","timestamp":1706111501442,"user_tz":-330,"elapsed":5723,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"479e83b8-c096-4ea6-bab0-1a0b28df1a9f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8804e5df8e8f436d8ef125541ca7103e"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:51:40,117 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:51:40,223 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:51:40,230 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:51:40,943 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:51:40,951 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:51:41,519 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nb_uCpkrvP-c","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111501442,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"9f0ddb22-50d6-48ef-ad41-0385ed189b51"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    176  0_defence_ministry_government_aircraft   \n","1      1    114         1_minister_pakistan_china_singh   \n","2      2    109          2_army_forces_kashmir_soldiers   \n","3      3    101        3_minister_visit_defence_meeting   \n","\n","                                      Representation  \\\n","0  [defence, ministry, government, aircraft, new,...   \n","1  [minister, pakistan, china, singh, country, nu...   \n","2  [army, forces, kashmir, soldiers, terrorists, ...   \n","3  [minister, visit, defence, meeting, singh, tal...   \n","\n","                                             KeyBERT  \\\n","0  [procurement, crore, spending, delhi, military...   \n","1  [pakistan, pakistani, terrorism, afghanistan, ...   \n","2  [jammu, kashmir, pradesh, troops, pakistan, mi...   \n","3  [pakistan, islamabad, rajnath, modi, pakistani...   \n","\n","                                                 MMR  \\\n","0  [defence, ministry, government, aircraft, new,...   \n","1  [minister, pakistan, china, singh, country, nu...   \n","2  [army, forces, kashmir, soldiers, terrorists, ...   \n","3  [minister, visit, defence, meeting, singh, tal...   \n","\n","                                 Representative_Docs  \n","0  [budget here detailed list all the new weapon ...  \n","1  [minister rajnath singh tuesday that pakistan ...  \n","2  [forces have launched massive search operation...  \n","3  [minister rajnath singh will visiting china fr...  "],"text/html":["\n","  <div id=\"df-a52beedc-be54-45e1-b4df-4b86bd2fe2b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>176</td>\n","      <td>0_defence_ministry_government_aircraft</td>\n","      <td>[defence, ministry, government, aircraft, new,...</td>\n","      <td>[procurement, crore, spending, delhi, military...</td>\n","      <td>[defence, ministry, government, aircraft, new,...</td>\n","      <td>[budget here detailed list all the new weapon ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>114</td>\n","      <td>1_minister_pakistan_china_singh</td>\n","      <td>[minister, pakistan, china, singh, country, nu...</td>\n","      <td>[pakistan, pakistani, terrorism, afghanistan, ...</td>\n","      <td>[minister, pakistan, china, singh, country, nu...</td>\n","      <td>[minister rajnath singh tuesday that pakistan ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>109</td>\n","      <td>2_army_forces_kashmir_soldiers</td>\n","      <td>[army, forces, kashmir, soldiers, terrorists, ...</td>\n","      <td>[jammu, kashmir, pradesh, troops, pakistan, mi...</td>\n","      <td>[army, forces, kashmir, soldiers, terrorists, ...</td>\n","      <td>[forces have launched massive search operation...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>101</td>\n","      <td>3_minister_visit_defence_meeting</td>\n","      <td>[minister, visit, defence, meeting, singh, tal...</td>\n","      <td>[pakistan, islamabad, rajnath, modi, pakistani...</td>\n","      <td>[minister, visit, defence, meeting, singh, tal...</td>\n","      <td>[minister rajnath singh will visiting china fr...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a52beedc-be54-45e1-b4df-4b86bd2fe2b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a52beedc-be54-45e1-b4df-4b86bd2fe2b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a52beedc-be54-45e1-b4df-4b86bd2fe2b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c3fb1ed7-5eef-46e6-93da-f9b82b2229ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c3fb1ed7-5eef-46e6-93da-f9b82b2229ea')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c3fb1ed7-5eef-46e6-93da-f9b82b2229ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pxsEUrjLvP-c"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FgiL9lR9vP-d"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"R0BjqvvAvP-d"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h8tqsi7WvP-d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111504223,"user_tz":-330,"elapsed":995,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1cd56f60-c9ad-4a3e-e10a-d1ba94178369"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5448965899250813\n","c_umass 0.5448965899250813\n","c_npmi 0.07972359251049528\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"_dZLUJe_xcVh"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kovhtDghxbU1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CfWEic-6xgi6"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_njZQTQ1xgjM"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AaFSHJhDxgjN","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["4a9d01eb197245c4ba945b550d6a5215","baffd0c4287d4524928bf5ba3b8f2125","cac31a0a69584141982e3383de8c58da","3d0d7c3495764f9c81de2e92494014da","66b504d828cd44d7a63ef2878b3f912d","d9fcf5f43a684f4d921a219bf7b2497e","fd5ab3bd98384e7580d1eb254c9a9597","13988aa7c4b54cdbb00a1031a585743f","11d82efa63c741ae9c51fa0231307ca3","e8e1fa67e5ef4c3c806fa15b111329b6","6aab40b9158f4b87826313614f9ec6f8"]},"executionInfo":{"status":"ok","timestamp":1706111509845,"user_tz":-330,"elapsed":5624,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"54026b04-856b-4abe-e57e-98bbca94c154"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4a9d01eb197245c4ba945b550d6a5215"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:51:48,576 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:51:48,675 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:51:48,678 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:51:49,164 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:51:49,175 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:51:49,708 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ff-Xl23oxgjN","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111509845,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"48defc9e-1195-4d82-afe7-735bed6acbd4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    186          0_growth_percent_grow_fiscal   \n","1      1    131        1_economy_growth_world_growing   \n","2      2    100  2_economy_growth_government_economic   \n","3      3     83             3_growth_quarter_grew_gdp   \n","\n","                                      Representation  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, growth, government, economic, rbi, g...   \n","3  [growth, quarter, grew, gdp, economy, year, pe...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, growth, estimate, econo...   \n","1  [economy, gdp, economies, economic, asia, grow...   \n","2  [recession, economy, gdp, inflation, economic,...   \n","3  [gdp, economy, fiscal, growth, slowest, quarte...   \n","\n","                                                 MMR  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, growth, government, economic, rbi, g...   \n","3  [growth, quarter, grew, gdp, economy, year, pe...   \n","\n","                                 Representative_Docs  \n","0  [grow per cent economy forecast expand per per...  \n","1  [one the world fastest growing economies with ...  \n","2  [has been downward spiral for some time now th...  \n","3  [grew the rate percent the first quarter this ...  "],"text/html":["\n","  <div id=\"df-59fe904e-9665-4728-ae12-368ffddb7c09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>186</td>\n","      <td>0_growth_percent_grow_fiscal</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[gdp, economy, fiscal, growth, estimate, econo...</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[grow per cent economy forecast expand per per...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>131</td>\n","      <td>1_economy_growth_world_growing</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[economy, gdp, economies, economic, asia, grow...</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[one the world fastest growing economies with ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>100</td>\n","      <td>2_economy_growth_government_economic</td>\n","      <td>[economy, growth, government, economic, rbi, g...</td>\n","      <td>[recession, economy, gdp, inflation, economic,...</td>\n","      <td>[economy, growth, government, economic, rbi, g...</td>\n","      <td>[has been downward spiral for some time now th...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>83</td>\n","      <td>3_growth_quarter_grew_gdp</td>\n","      <td>[growth, quarter, grew, gdp, economy, year, pe...</td>\n","      <td>[gdp, economy, fiscal, growth, slowest, quarte...</td>\n","      <td>[growth, quarter, grew, gdp, economy, year, pe...</td>\n","      <td>[grew the rate percent the first quarter this ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59fe904e-9665-4728-ae12-368ffddb7c09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-59fe904e-9665-4728-ae12-368ffddb7c09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-59fe904e-9665-4728-ae12-368ffddb7c09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-68255c7a-7173-40a6-b589-275203cdf231\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68255c7a-7173-40a6-b589-275203cdf231')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-68255c7a-7173-40a6-b589-275203cdf231 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AL92OZQ9xgjO"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"R5MMuypUxgjO"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qg2AklnwxgjO"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ub1oryrnxgjP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111512250,"user_tz":-330,"elapsed":873,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2557c139-6c99-45ad-9702-9c57a4df22f5"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4103756600647778\n","c_umass 0.4103756600647778\n","c_npmi 0.024316809585780613\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"yqeYO9EPyOA2"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MoanGNZByOBF"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xID4s94OyOBF"},"outputs":[],"source":["topic = 'Indian infra'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"91yHQvy3yOBG"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jDGW2v2MyOBG","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["eca8c7a4ab42422e8bba95396cd20a4b","c6f94894c6474d92b5c80c13a3d8ad76","d19104fd72bc4b1b836a9bdbcbf933a5","06aedd776c444d678ff0c47317737fe7","bb9098a3bdef49939cbacb9d1f77a0f8","b11ff33c37fe44a1b6224e0ba9b18a0a","4357131716564244836d9237423b11f7","5638d4fa7af046d39b77aac325d4043c","75035ea676ef4768bfb91418c4a672ed","086810ca2ccc4ae4a4dba9e81e4fc260","a4d4eb0a5d09435398d286c1e13a54ae"]},"executionInfo":{"status":"ok","timestamp":1706111517964,"user_tz":-330,"elapsed":5270,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0b4b9b55-1189-4808-9dd4-f15ca0f08a7a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"eca8c7a4ab42422e8bba95396cd20a4b"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:51:56,744 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:51:56,836 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:51:56,839 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:51:57,431 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:51:57,438 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:51:57,951 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hd036JzkyOBG","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111517964,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7a1593d6-2fbd-456d-d88b-f0ff2f49a322"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    210  0_infrastructure_sector_government_investment   \n","1      1    149                  1_company_project_crore_power   \n","2      2     75                    2_airport_gmr_stake_company   \n","3      3     66                  3_larsen_toubro_company_crore   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, crore, power, construction,...   \n","2  [airport, gmr, stake, company, group, airports...   \n","3  [larsen, toubro, company, crore, power, projec...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, railways, construction, secto...   \n","1  [adani, infra, gujarat, infrastructure, crore,...   \n","2  [gmr, gml, gmm, airport, mumbai, maharashtra, ...   \n","3  [larsens, larsen, toubro, companies, infrastru...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, crore, power, construction,...   \n","2  [airport, gmr, stake, company, group, airports...   \n","3  [larsen, toubro, company, crore, power, projec...   \n","\n","                                 Representative_Docs  \n","0  [not just sector but the backbone the growth a...  \n","1  [company adani enterprises has announced enter...  \n","2  [firm gmr infrastructure has won engineering p...  \n","3  [major larsen toubro engineering and construct...  "],"text/html":["\n","  <div id=\"df-4ffa8d1f-521b-407e-95d5-0b672e36b615\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>210</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, secto...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[not just sector but the backbone the growth a...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>149</td>\n","      <td>1_company_project_crore_power</td>\n","      <td>[company, project, crore, power, construction,...</td>\n","      <td>[adani, infra, gujarat, infrastructure, crore,...</td>\n","      <td>[company, project, crore, power, construction,...</td>\n","      <td>[company adani enterprises has announced enter...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>75</td>\n","      <td>2_airport_gmr_stake_company</td>\n","      <td>[airport, gmr, stake, company, group, airports...</td>\n","      <td>[gmr, gml, gmm, airport, mumbai, maharashtra, ...</td>\n","      <td>[airport, gmr, stake, company, group, airports...</td>\n","      <td>[firm gmr infrastructure has won engineering p...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>66</td>\n","      <td>3_larsen_toubro_company_crore</td>\n","      <td>[larsen, toubro, company, crore, power, projec...</td>\n","      <td>[larsens, larsen, toubro, companies, infrastru...</td>\n","      <td>[larsen, toubro, company, crore, power, projec...</td>\n","      <td>[major larsen toubro engineering and construct...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ffa8d1f-521b-407e-95d5-0b672e36b615')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ffa8d1f-521b-407e-95d5-0b672e36b615 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ffa8d1f-521b-407e-95d5-0b672e36b615');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ccda77eb-4246-4e65-9b76-946ff39c41db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ccda77eb-4246-4e65-9b76-946ff39c41db')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ccda77eb-4246-4e65-9b76-946ff39c41db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":46}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bEuc-vu-yOBH"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fnTAJSnPyOBH"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z1laJAlMyOBH"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PP_fgPv6yOBH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111521251,"user_tz":-330,"elapsed":987,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c7b43df0-e30f-4755-bf61-cb49c817903b"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5237377582131354\n","c_umass 0.5237377582131354\n","c_npmi 0.06162224579344886\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"y9BokIULx6fl"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"094U7FxYx6fm"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7QeHbzg8x6fn"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aHYtoNLNx6fn","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117062271,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"89a48edf-bfed-4c36-abf7-0fd3718f04d6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6c479007-0be5-4790-826a-ed68bf851ead\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c479007-0be5-4790-826a-ed68bf851ead')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6c479007-0be5-4790-826a-ed68bf851ead button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6c479007-0be5-4790-826a-ed68bf851ead');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04d9d557-ee84-4e84-89db-4fb7c58d6743\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04d9d557-ee84-4e84-89db-4fb7c58d6743')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04d9d557-ee84-4e84-89db-4fb7c58d6743 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9fc0ff08-324b-4379-a6df-1a59fb647498\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9fc0ff08-324b-4379-a6df-1a59fb647498 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":68}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1Cfr5HfVx6fn","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["bd007561f2a14cc9a3c3878fe7e8cb90","33abf3e0696b43c391fa4c9715b9be7f","585e29a70ff347049fd13b71d4e94d64","c8af6be7f5c3489684a964dc7a12e65f","a29f6d038a824036be03539cdb6fd4b7","961ccf26438144cf96955ab924e09cfb","5d41419ec78d416394904755ba937638","49eec10a0eec438b9a4bceebad81fd24","5fe74db12a1440ecb8abd1f860fd59a6","111208ab1dfd42b68b65a871f1dd6f0d","886f10f8f3eb4a06b82deb5554c9be41"]},"executionInfo":{"status":"ok","timestamp":1706117082040,"user_tz":-330,"elapsed":19773,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4aa826c9-2ba2-4f82-ac30-65248191be9b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bd007561f2a14cc9a3c3878fe7e8cb90"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:24:36,680 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:24:37,753 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:24:37,772 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:24:40,135 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:24:40,149 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:24:41,371 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kWvQUTzPx6fo","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117082040,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"68492d7d-6682-47ff-a4e9-aeb9bbd8c610"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    513  0_infrastructure_company_project_power   \n","1      1    502        1_defence_minister_army_pakistan   \n","2      2    497           2_growth_economy_year_percent   \n","3      3    488    3_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [infrastructure, company, project, power, proj...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, year, percent, fiscal, econo...   \n","3  [climate, change, temperature, weather, world,...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, construction, sector, industr...   \n","1  [modi, army, pakistan, military, singh, delhi,...   \n","2  [gdp, economy, economies, fiscal, growth, econ...   \n","3  [climate, climatic, weather, monsoons, rainfal...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, company, project, power, proj...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, year, percent, fiscal, econo...   \n","3  [climate, change, temperature, weather, world,...   \n","\n","                                 Representative_Docs  \n","0  [companies have been the main beneficiary the ...  \n","1  [budget highlights government has announced it...  \n","2  [grow world bank new delhi economy expected ex...  \n","3  [and climate change are complex phenomenon and...  "],"text/html":["\n","  <div id=\"df-ca71c4c7-11e7-4515-8b13-0d50f00d32ea\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>513</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>[infrastructure, company, project, power, proj...</td>\n","      <td>[infrastructure, construction, sector, industr...</td>\n","      <td>[infrastructure, company, project, power, proj...</td>\n","      <td>[companies have been the main beneficiary the ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[modi, army, pakistan, military, singh, delhi,...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[budget highlights government has announced it...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>497</td>\n","      <td>2_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[gdp, economy, economies, fiscal, growth, econ...</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[grow world bank new delhi economy expected ex...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>488</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[climate, climatic, weather, monsoons, rainfal...</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[and climate change are complex phenomenon and...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca71c4c7-11e7-4515-8b13-0d50f00d32ea')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ca71c4c7-11e7-4515-8b13-0d50f00d32ea button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ca71c4c7-11e7-4515-8b13-0d50f00d32ea');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6895fdb-6581-457f-9923-0ebfd1d6936c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6895fdb-6581-457f-9923-0ebfd1d6936c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6895fdb-6581-457f-9923-0ebfd1d6936c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9_H2bWMbx6fo"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_2Hsb5CPyLlL"},"outputs":[],"source":[]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"GF29kCaUYZif"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"h7yecnT9YvxE","executionInfo":{"status":"ok","timestamp":1706117082040,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b6cf2fe4-dd49-492f-99eb-621194e2f9d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                    Name  \\\n","0            Indian climate  0_infrastructure_company_project_power   \n","1            Indian climate    3_climate_change_temperature_weather   \n","2            Indian climate    3_climate_change_temperature_weather   \n","3            Indian climate    3_climate_change_temperature_weather   \n","4            Indian climate    3_climate_change_temperature_weather   \n","...                     ...                                     ...   \n","1995  Indian infrastructure  0_infrastructure_company_project_power   \n","1996  Indian infrastructure  0_infrastructure_company_project_power   \n","1997  Indian infrastructure  0_infrastructure_company_project_power   \n","1998  Indian infrastructure  0_infrastructure_company_project_power   \n","1999  Indian infrastructure  0_infrastructure_company_project_power   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-64738008-b1a9-46d5-a546-e5a40883c9b4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64738008-b1a9-46d5-a546-e5a40883c9b4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64738008-b1a9-46d5-a546-e5a40883c9b4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64738008-b1a9-46d5-a546-e5a40883c9b4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a9cce4b3-0320-4560-8e1b-fe33e1631287\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9cce4b3-0320-4560-8e1b-fe33e1631287')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a9cce4b3-0320-4560-8e1b-fe33e1631287 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3f540769-0ef1-4710-b63d-f57129259288\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3f540769-0ef1-4710-b63d-f57129259288 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"-Qc5o1ANZFzc","executionInfo":{"status":"ok","timestamp":1706117082040,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"56c48047-064e-4bfc-c2a7-245a29fcd76b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-143504f5-a0cc-4a7e-8302-b7d44ee6c58c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-143504f5-a0cc-4a7e-8302-b7d44ee6c58c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-143504f5-a0cc-4a7e-8302-b7d44ee6c58c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-143504f5-a0cc-4a7e-8302-b7d44ee6c58c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c571a5c4-7494-46b2-9abb-6f6728e30ab4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c571a5c4-7494-46b2-9abb-6f6728e30ab4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c571a5c4-7494-46b2-9abb-6f6728e30ab4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f6c5e1bf-4ea3-4e9d-8aa3-f5af50b491ae\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f6c5e1bf-4ea3-4e9d-8aa3-f5af50b491ae button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"Izmnmvipdjny"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"pZFSa3jJaZ0o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YV_aAoN2eRV0","executionInfo":{"status":"ok","timestamp":1706117083032,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"70207dd4-aa5f-43dc-b6d8-1a32c5fa7863"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'defence', 'growth'], dtype=object))"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"M403tPGDdaPV","executionInfo":{"status":"ok","timestamp":1706117083032,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"fc335e10-af86-4dfa-d346-56746e6ae49f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b7d89fc9-e302-4b67-bfe3-28da8a0840ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7d89fc9-e302-4b67-bfe3-28da8a0840ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b7d89fc9-e302-4b67-bfe3-28da8a0840ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b7d89fc9-e302-4b67-bfe3-28da8a0840ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-749d7811-dfe5-43b4-8c08-f3b149ec5c76\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-749d7811-dfe5-43b4-8c08-f3b149ec5c76')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-749d7811-dfe5-43b4-8c08-f3b149ec5c76 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6464c896-ff0c-45c6-a486-59962aa51feb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6464c896-ff0c-45c6-a486-59962aa51feb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T6cVNdDSZqxD","executionInfo":{"status":"ok","timestamp":1706117083032,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"9952c079-1de9-4365-9f0e-beaec4375655"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[478,  13,   1,   8],\n","       [  1, 486,   5,   8],\n","       [  6,   3, 463,  28],\n","       [  3,   0,  28, 469]])"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"3PEvFHFtZ_CX","executionInfo":{"status":"ok","timestamp":1706117083032,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1945f305-a888-4dd7-e124-b894e113a057"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S-CjvGSYaEfI","executionInfo":{"status":"ok","timestamp":1706117083032,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0af236d6-4d3f-426e-b0ff-758784d04be0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.98      0.96      0.97       500\n","       defence       0.97      0.97      0.97       500\n","        growth       0.93      0.93      0.93       500\n","infrastructure       0.91      0.94      0.93       500\n","\n","      accuracy                           0.95      2000\n","     macro avg       0.95      0.95      0.95      2000\n","  weighted avg       0.95      0.95      0.95      2000\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"BXvABXSOzs6Q"},"source":["### UMAP-KMeans"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NiI4GIgYzs6d"},"outputs":[],"source":["from sklearn.cluster import KMeans\n","from umap import UMAP\n","experiment='UMAP/KMeans'\n","umap_model = UMAP(n_neighbors=180, n_components=50, metric='cosine')\n","hdbscan_model = KMeans(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"w8bkkyX8zs6d"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MQO2WNSYzs6d"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FT5qVP2Ezs6d","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111542389,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3a212791-e44f-40b7-ad68-bdfbf8a05c15"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-f03bd3aa-636c-4e07-9394-1c127b407c3c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f03bd3aa-636c-4e07-9394-1c127b407c3c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f03bd3aa-636c-4e07-9394-1c127b407c3c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f03bd3aa-636c-4e07-9394-1c127b407c3c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88ac6f1a-dcee-4160-b29e-9352ddaed6cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88ac6f1a-dcee-4160-b29e-9352ddaed6cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88ac6f1a-dcee-4160-b29e-9352ddaed6cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_488e1d10-0fb9-40b4-8487-9329a083674a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_488e1d10-0fb9-40b4-8487-9329a083674a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6y6PkU-Yzs6e","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["4fd047c8cb6d41d2af870a2779d5ee40","8f770e38b0e142c5a3eeb5ae23ab880a","eb8ed990732c4f7f84c09058f9ec20f5","cfe87f90294f4bbe84f9a21eb95f933a","c51c7457e01d4be092f73cb6bb550176","4c4c23621a13466286ceb9bb932a8562","6d0f268c40d84a83a03aa96d8d0f67ef","31067bbdd22148f5aad0a9bb2d938ccd","5829e062cd3f4f449756265dbe8da00b","38a48bc99fdb44fda213f301d7eeff81","553c9e41ef2045e6932ef51effd2d618"]},"executionInfo":{"status":"ok","timestamp":1706111559451,"user_tz":-330,"elapsed":17065,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3fa21311-08c1-4984-bd93-1d632eeb4a0b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4fd047c8cb6d41d2af870a2779d5ee40"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:52:27,396 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:52:38,954 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:52:38,956 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:52:39,120 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:52:39,129 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:52:39,822 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0GPHUv4yzs6e","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111559451,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"62a454a5-b6f1-450e-8c20-692a76e8b88a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                Name  \\\n","0      0    187   0_climate_change_policy_emissions   \n","1      1    136    1_climate_tropical_season_winter   \n","2      2    109  2_climate_change_global_adaptation   \n","3      3     68         3_heat_air_skin_temperature   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, emissions, minister,...   \n","1  [climate, tropical, season, winter, summer, we...   \n","2  [climate, change, global, adaptation, warming,...   \n","3  [heat, air, skin, temperature, people, health,...   \n","\n","                                             KeyBERT  \\\n","0  [climate, emissions, modi, policy, kyoto, chan...   \n","1  [climates, subtropical, climate, kerala, monso...   \n","2  [climate, droughts, adaptation, agriculture, f...   \n","3  [climate, temperature, summer, weather, summer...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, emissions, minister,...   \n","1  [climate, tropical, season, winter, summer, we...   \n","2  [climate, change, global, adaptation, warming,...   \n","3  [heat, air, skin, temperature, people, health,...   \n","\n","                                 Representative_Docs  \n","0  [change policy climate change action plan ccap...  \n","1  [being country located south asia has very div...  \n","2  [scientists have warned that the impact climat...  \n","3  [has its own set problems that need addressed ...  "],"text/html":["\n","  <div id=\"df-60924a53-632b-4c6d-ae5f-c80e8c7cfadb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>187</td>\n","      <td>0_climate_change_policy_emissions</td>\n","      <td>[climate, change, policy, emissions, minister,...</td>\n","      <td>[climate, emissions, modi, policy, kyoto, chan...</td>\n","      <td>[climate, change, policy, emissions, minister,...</td>\n","      <td>[change policy climate change action plan ccap...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>136</td>\n","      <td>1_climate_tropical_season_winter</td>\n","      <td>[climate, tropical, season, winter, summer, we...</td>\n","      <td>[climates, subtropical, climate, kerala, monso...</td>\n","      <td>[climate, tropical, season, winter, summer, we...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>109</td>\n","      <td>2_climate_change_global_adaptation</td>\n","      <td>[climate, change, global, adaptation, warming,...</td>\n","      <td>[climate, droughts, adaptation, agriculture, f...</td>\n","      <td>[climate, change, global, adaptation, warming,...</td>\n","      <td>[scientists have warned that the impact climat...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>68</td>\n","      <td>3_heat_air_skin_temperature</td>\n","      <td>[heat, air, skin, temperature, people, health,...</td>\n","      <td>[climate, temperature, summer, weather, summer...</td>\n","      <td>[heat, air, skin, temperature, people, health,...</td>\n","      <td>[has its own set problems that need addressed ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60924a53-632b-4c6d-ae5f-c80e8c7cfadb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-60924a53-632b-4c6d-ae5f-c80e8c7cfadb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-60924a53-632b-4c6d-ae5f-c80e8c7cfadb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d2304e8-e39f-405a-b8eb-cc9ff4889066\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d2304e8-e39f-405a-b8eb-cc9ff4889066')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d2304e8-e39f-405a-b8eb-cc9ff4889066 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":63}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zZeVx_dUzs6e"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f_4DhIClzs6e"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SE6lcKqwzs6e"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6_WkS-Yvzs6e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111560588,"user_tz":-330,"elapsed":458,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ebdba82b-d649-4a08-996d-6553e5de32f5"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6228053538492553\n","c_umass 0.6228053538492553\n","c_npmi 0.06199383381813057\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"pD2U7oTWzs6f"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2T5Kbpjvzs6f"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W3gZyy3wzs6f"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mj7LXOzyzs6f","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["c2d7ab1211b24616bf5007a7c33a5aa0","b1a2c678f6aa4a5793fb55cec8ecc236","5727d7e3beec4c2b97eebb9cb160fa90","5952db59fe9d43829897ad796aeaa329","21bdf6288fbe40de95c6503e1d2bcf26","6796e4c020344e5fa9336238cda646b5","08a659e4237645d18c0a1a736beb7fea","9f13f9981bf24035aae340e01d7fedb7","83b6fd88a8c046eab72edcd67569745d","18d1d6910e16476a862e196205534c23","0a7d05eae4594ebc9ee4f40655035675"]},"executionInfo":{"status":"ok","timestamp":1706111571280,"user_tz":-330,"elapsed":10694,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"875ba84d-ccc1-4f81-c199-d22265449be3"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c2d7ab1211b24616bf5007a7c33a5aa0"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:52:45,038 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:52:49,848 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:52:49,855 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:52:50,117 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:52:50,131 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:52:51,443 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3wbddxH3zs6f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111571280,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1280e44f-e311-416e-c2a5-01ef77ae0c1e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                Name  \\\n","0      0    172     0_minister_china_pakistan_singh   \n","1      1    146      1_army_forces_pakistan_kashmir   \n","2      2     98  2_defence_aircraft_fighter_missile   \n","3      3     84   3_defence_budget_crore_government   \n","\n","                                      Representation  \\\n","0  [minister, china, pakistan, singh, defence, vi...   \n","1  [army, forces, pakistan, kashmir, minister, at...   \n","2  [defence, aircraft, fighter, missile, air, min...   \n","3  [defence, budget, crore, government, forces, n...   \n","\n","                                             KeyBERT  \\\n","0  [islamabad, pakistan, pakistani, modi, rajnath...   \n","1  [troops, pakistan, jammu, kashmir, militants, ...   \n","2  [procurement, aircraft, rafales, rafale, dassa...   \n","3  [procurement, expenditure, fiscal, spending, c...   \n","\n","                                                 MMR  \\\n","0  [minister, china, pakistan, singh, defence, vi...   \n","1  [army, forces, pakistan, kashmir, minister, at...   \n","2  [defence, aircraft, fighter, missile, air, min...   \n","3  [defence, budget, crore, government, forces, n...   \n","\n","                                 Representative_Docs  \n","0  [minister rajnath singh will visiting china fr...  \n","1  [minister rajnath singh has the military will ...  \n","2  [minister nirmala sitharaman has announced tue...  \n","3  [budget what new business news largest ever de...  "],"text/html":["\n","  <div id=\"df-4bcec52e-bdc3-48bb-bb30-8e421724479f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0_minister_china_pakistan_singh</td>\n","      <td>[minister, china, pakistan, singh, defence, vi...</td>\n","      <td>[islamabad, pakistan, pakistani, modi, rajnath...</td>\n","      <td>[minister, china, pakistan, singh, defence, vi...</td>\n","      <td>[minister rajnath singh will visiting china fr...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>146</td>\n","      <td>1_army_forces_pakistan_kashmir</td>\n","      <td>[army, forces, pakistan, kashmir, minister, at...</td>\n","      <td>[troops, pakistan, jammu, kashmir, militants, ...</td>\n","      <td>[army, forces, pakistan, kashmir, minister, at...</td>\n","      <td>[minister rajnath singh has the military will ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>98</td>\n","      <td>2_defence_aircraft_fighter_missile</td>\n","      <td>[defence, aircraft, fighter, missile, air, min...</td>\n","      <td>[procurement, aircraft, rafales, rafale, dassa...</td>\n","      <td>[defence, aircraft, fighter, missile, air, min...</td>\n","      <td>[minister nirmala sitharaman has announced tue...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>84</td>\n","      <td>3_defence_budget_crore_government</td>\n","      <td>[defence, budget, crore, government, forces, n...</td>\n","      <td>[procurement, expenditure, fiscal, spending, c...</td>\n","      <td>[defence, budget, crore, government, forces, n...</td>\n","      <td>[budget what new business news largest ever de...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4bcec52e-bdc3-48bb-bb30-8e421724479f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4bcec52e-bdc3-48bb-bb30-8e421724479f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4bcec52e-bdc3-48bb-bb30-8e421724479f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6b675328-a686-4e36-bab5-6cfcf8b4bea5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b675328-a686-4e36-bab5-6cfcf8b4bea5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6b675328-a686-4e36-bab5-6cfcf8b4bea5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":71}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NQ0X0lmszs6f"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QqExG5j6zs6f"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OrpmtYY-zs6g"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qMneMSnZzs6g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111574331,"user_tz":-330,"elapsed":2351,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c1fd7f17-3e15-4f80-e3b9-33a65a22445c"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5341061815672927\n","c_umass 0.5341061815672927\n","c_npmi 0.02785337252678771\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"Vx_77vtZzs6g"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GpljFPxkzs6g"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T9uTCMGozs6g"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vjaZxQl4zs6g"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mQaDd1o5zs6g","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["2837737cae1a4bdeb075a4016408b660","43c24782ccc04a58a4eabd9449e7639b","82452b347a1f4d0e95153a109ec12b73","023c63c28fb04f8486e7dad25465fb2a","3ec5413736934e8f9402d8cf1ada47b7","912dbef01f854801b0d785ae5b58cfd4","9bd45d950bd1446086a245b455dd8075","27537a4f69344a1ead85814e59201e18","8e1d055be26f4619ae2a7db76522c049","de0aa802db4d41ecb8e030c7eed7def6","5cedc3a2c1324f6bb1e423d46e7c7f20"]},"executionInfo":{"status":"ok","timestamp":1706111586989,"user_tz":-330,"elapsed":12663,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"694b8900-9398-48e8-e026-811d9e6b49a9"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2837737cae1a4bdeb075a4016408b660"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:52:59,823 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:53:05,876 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:53:05,878 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:53:06,410 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:53:06,419 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:53:07,083 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4qAGGaWXzs6g","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111586990,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c7752624-3dcf-4961-d9ef-88e6b56d95fb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    185          0_growth_percent_grow_fiscal   \n","1      1    149        1_growth_economy_world_growing   \n","2      2    102  2_economy_growth_economic_government   \n","3      3     64             3_quarter_growth_grew_gdp   \n","\n","                                      Representation  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [growth, economy, world, growing, sector, larg...   \n","2  [economy, growth, economic, government, gdp, y...   \n","3  [quarter, growth, grew, gdp, percent, year, ec...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, growth, economic, estim...   \n","1  [gdp, economy, economies, economic, growth, as...   \n","2  [recession, economy, gdp, economic, inflation,...   \n","3  [gdp, economy, fiscal, growth, quarter, econom...   \n","\n","                                                 MMR  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [growth, economy, world, growing, sector, larg...   \n","2  [economy, growth, economic, government, gdp, y...   \n","3  [quarter, growth, grew, gdp, percent, year, ec...   \n","\n","                                 Representative_Docs  \n","0  [will grow the fiscal year the world bank its ...  \n","1  [has grown from small economy which based agri...  \n","2  [has been slow pace for the last one year and ...  \n","3  [expected clock gdp growth the current fiscal ...  "],"text/html":["\n","  <div id=\"df-a459ce95-c76e-49ec-8215-ce059178be09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>185</td>\n","      <td>0_growth_percent_grow_fiscal</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[gdp, economy, fiscal, growth, economic, estim...</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[will grow the fiscal year the world bank its ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>149</td>\n","      <td>1_growth_economy_world_growing</td>\n","      <td>[growth, economy, world, growing, sector, larg...</td>\n","      <td>[gdp, economy, economies, economic, growth, as...</td>\n","      <td>[growth, economy, world, growing, sector, larg...</td>\n","      <td>[has grown from small economy which based agri...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>102</td>\n","      <td>2_economy_growth_economic_government</td>\n","      <td>[economy, growth, economic, government, gdp, y...</td>\n","      <td>[recession, economy, gdp, economic, inflation,...</td>\n","      <td>[economy, growth, economic, government, gdp, y...</td>\n","      <td>[has been slow pace for the last one year and ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>64</td>\n","      <td>3_quarter_growth_grew_gdp</td>\n","      <td>[quarter, growth, grew, gdp, percent, year, ec...</td>\n","      <td>[gdp, economy, fiscal, growth, quarter, econom...</td>\n","      <td>[quarter, growth, grew, gdp, percent, year, ec...</td>\n","      <td>[expected clock gdp growth the current fiscal ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a459ce95-c76e-49ec-8215-ce059178be09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a459ce95-c76e-49ec-8215-ce059178be09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a459ce95-c76e-49ec-8215-ce059178be09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d9814260-5d8b-4ca7-9f8b-ab9a73ceb600\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9814260-5d8b-4ca7-9f8b-ab9a73ceb600')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d9814260-5d8b-4ca7-9f8b-ab9a73ceb600 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":79}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tOhZFvgHzs6g"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9DPL810pzs6g"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Abe3t1euzs6g"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jmE2pk__zs6h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111588392,"user_tz":-330,"elapsed":1406,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"9bc40100-c452-457c-c1f9-003ca2da058d"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.41934282771340464\n","c_umass 0.41934282771340464\n","c_npmi 0.03465795526974339\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"Qo5zgI9nzs6h"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EK5RAMxdzs6h"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZKXzFtkWzs6h"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KrIBRbCczs6h"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mJiJPXiSzs6h","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["e3345a885d874d03ba3721fafe7d2fcb","277ca8baf1d841ea86750a8c82716e31","ee76360280d444798ad58b7d343648c7","eb17462592204d738246d1e73a0ef9a9","273bb34378364c8ba8ed6ae109649d08","68f6c3c8cf994b10805568ed465e6ae2","128857abd6304ffe8734eacdf6a3dc36","51e9df3cec924370a317845d72bb82e8","84354a12b0fc4078ab348c8131aed2d4","1bec108d3a1d461895978949c0b62ba5","b2e2a5e0dd5d46a083bdb97f937ab6bc"]},"executionInfo":{"status":"ok","timestamp":1706111598947,"user_tz":-330,"elapsed":10556,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"296f5a7c-f86f-4312-ce19-07577aaa3aa1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e3345a885d874d03ba3721fafe7d2fcb"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:53:12,858 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:53:18,475 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:53:18,477 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:53:18,743 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:53:18,751 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:53:19,334 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lQcTI-mczs6h","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111598948,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"9068359d-249a-4adb-a041-8fbfe5a08415"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    220  0_infrastructure_sector_government_investment   \n","1      1    128                 1_company_power_larsen_project   \n","2      2     79           2_company_crore_project_construction   \n","3      3     73                    3_airport_gmr_stake_company   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, power, larsen, project, toubro, cror...   \n","2  [company, crore, project, construction, contra...   \n","3  [airport, gmr, stake, company, group, internat...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, sector, railways, industry, c...   \n","1  [larsens, larsen, toubro, solar, renewable, me...   \n","2  [irb, infrastructure, irbs, reliance, expressw...   \n","3  [gmr, gml, gmm, airport, mumbai, delhi, gujara...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, power, larsen, project, toubro, cror...   \n","2  [company, crore, project, construction, contra...   \n","3  [airport, gmr, stake, company, group, internat...   \n","\n","                                 Representative_Docs  \n","0  [sector has strong pipeline projects the indus...  \n","1  [major larsen toubro engineering and construct...  \n","2  [company irb infrastructure developers has sig...  \n","3  [major gmr group has bagged crore contract bui...  "],"text/html":["\n","  <div id=\"df-e5e95295-0ece-4b1d-8b66-115bcf5cc11b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>220</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, sector, railways, industry, c...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[sector has strong pipeline projects the indus...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>128</td>\n","      <td>1_company_power_larsen_project</td>\n","      <td>[company, power, larsen, project, toubro, cror...</td>\n","      <td>[larsens, larsen, toubro, solar, renewable, me...</td>\n","      <td>[company, power, larsen, project, toubro, cror...</td>\n","      <td>[major larsen toubro engineering and construct...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>79</td>\n","      <td>2_company_crore_project_construction</td>\n","      <td>[company, crore, project, construction, contra...</td>\n","      <td>[irb, infrastructure, irbs, reliance, expressw...</td>\n","      <td>[company, crore, project, construction, contra...</td>\n","      <td>[company irb infrastructure developers has sig...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>73</td>\n","      <td>3_airport_gmr_stake_company</td>\n","      <td>[airport, gmr, stake, company, group, internat...</td>\n","      <td>[gmr, gml, gmm, airport, mumbai, delhi, gujara...</td>\n","      <td>[airport, gmr, stake, company, group, internat...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5e95295-0ece-4b1d-8b66-115bcf5cc11b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5e95295-0ece-4b1d-8b66-115bcf5cc11b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5e95295-0ece-4b1d-8b66-115bcf5cc11b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a1ffa2c7-6b26-4d7a-8828-f9a04e9d4744\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a1ffa2c7-6b26-4d7a-8828-f9a04e9d4744')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a1ffa2c7-6b26-4d7a-8828-f9a04e9d4744 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":87}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I4eyHhsyzs6h"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FJcNY_6szs6h"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-ROSMoQ_zs6h"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i4p7OVb4zs6i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111601846,"user_tz":-330,"elapsed":809,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e8dce380-639e-4e7a-e52d-41bbb5d91b56"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5359927077682017\n","c_umass 0.5359927077682017\n","c_npmi 0.06377302776784079\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"Zq9LTAcRzs6i"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N3nIrwHIzs6i"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VlisR6grzs6i"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BGbQJ0fzzs6i","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117249437,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"53d1dfdd-425a-48d3-ebd9-dcc690d24533"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-5eb571f4-7f44-4470-934e-0347ed86c740\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5eb571f4-7f44-4470-934e-0347ed86c740')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5eb571f4-7f44-4470-934e-0347ed86c740 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5eb571f4-7f44-4470-934e-0347ed86c740');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-10255add-6269-48ab-b0ed-cc3911a6b415\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10255add-6269-48ab-b0ed-cc3911a6b415')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-10255add-6269-48ab-b0ed-cc3911a6b415 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_770546a4-d575-4d9b-8110-875a7eb9fb85\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_770546a4-d575-4d9b-8110-875a7eb9fb85 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PHjereE0zs6i","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["6ee1b200df6d479dbc15204d0afb8620","978c307cf47c4060a39a84693fd5f798","8ca058e44d5f4b5e96471e14999e4cec","3a91147707a848cdb2fde31636ab46fc","9891879d2c354f43a1310090d08564be","dd5d6b1cae744209aa4927ca4cf88834","8b5441dcc24944cd870e8b2ab50f7883","cf86f4971a1f4cb09d83f5b074ff3459","04fa6711caa9403685f31042cb36598c","3d42c50f13d04c2db410e8ddde18319e","df2da3e50aea4275b741624ae70e632a"]},"executionInfo":{"status":"ok","timestamp":1706117310806,"user_tz":-330,"elapsed":61372,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"158469b5-d017-4397-91e1-ca9a8ad7b5c5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6ee1b200df6d479dbc15204d0afb8620"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:27:46,064 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:28:28,906 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:28:28,908 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:28:29,233 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:28:29,241 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:28:30,116 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0hV-4dGxzs6i","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117310806,"user_tz":-330,"elapsed":32,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"8387b2cf-af18-4d55-a0d2-8e868aa467de"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                      Name  \\\n","0      0    519  0_infrastructure_company_sector_projects   \n","1      1    502          1_defence_minister_army_pakistan   \n","2      2    496             2_growth_economy_percent_year   \n","3      3    483      3_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [infrastructure, company, sector, projects, po...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, percent, year, fiscal, econo...   \n","3  [climate, change, temperature, weather, people...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, sector, industry, sectors, co...   \n","1  [modi, parrikar, jammu, delhi, pakistan, army,...   \n","2  [gdp, economy, economies, growth, fiscal, infl...   \n","3  [climate, climatic, weather, monsoons, monsoon...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, company, sector, projects, po...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, percent, year, fiscal, econo...   \n","3  [climate, change, temperature, weather, people...   \n","\n","                                 Representative_Docs  \n","0  [not just sector but the backbone the growth a...  \n","1  [budget highlights government has announced it...  \n","2  [will the third fastest growing economy the wo...  \n","3  [the climate includes range climate types and ...  "],"text/html":["\n","  <div id=\"df-ac97d14b-9e59-4279-ba1c-3209e4376dcd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>519</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>[infrastructure, company, sector, projects, po...</td>\n","      <td>[infrastructure, sector, industry, sectors, co...</td>\n","      <td>[infrastructure, company, sector, projects, po...</td>\n","      <td>[not just sector but the backbone the growth a...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[modi, parrikar, jammu, delhi, pakistan, army,...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[budget highlights government has announced it...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>496</td>\n","      <td>2_growth_economy_percent_year</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, infl...</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[will the third fastest growing economy the wo...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>483</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, people...</td>\n","      <td>[climate, climatic, weather, monsoons, monsoon...</td>\n","      <td>[climate, change, temperature, weather, people...</td>\n","      <td>[the climate includes range climate types and ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac97d14b-9e59-4279-ba1c-3209e4376dcd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac97d14b-9e59-4279-ba1c-3209e4376dcd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac97d14b-9e59-4279-ba1c-3209e4376dcd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33a26b34-a432-4f24-bb6a-54cbd0c8609e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33a26b34-a432-4f24-bb6a-54cbd0c8609e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33a26b34-a432-4f24-bb6a-54cbd0c8609e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":101}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Yl0pUcldzs6i"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"nWw71cGSfYYd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117310809,"user_tz":-330,"elapsed":29,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5c95d741-7b24-4387-f3ca-071aa4748051","id":"DlAqMtRhfYYe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                      Name  \\\n","0            Indian climate  0_infrastructure_company_sector_projects   \n","1            Indian climate      3_climate_change_temperature_weather   \n","2            Indian climate      3_climate_change_temperature_weather   \n","3            Indian climate      3_climate_change_temperature_weather   \n","4            Indian climate      3_climate_change_temperature_weather   \n","...                     ...                                       ...   \n","1995  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1996  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1997  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1998  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1999  Indian infrastructure  0_infrastructure_company_sector_projects   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-4388dfa0-9ea5-41f7-b187-77497595389c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4388dfa0-9ea5-41f7-b187-77497595389c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4388dfa0-9ea5-41f7-b187-77497595389c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4388dfa0-9ea5-41f7-b187-77497595389c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72c63b02-9967-43d3-8b31-b009e3bffb37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72c63b02-9967-43d3-8b31-b009e3bffb37')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72c63b02-9967-43d3-8b31-b009e3bffb37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_23bbd3c0-71c1-4e8a-be04-3692bbbf2c68\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_23bbd3c0-71c1-4e8a-be04-3692bbbf2c68 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117310809,"user_tz":-330,"elapsed":27,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f75f2a0b-4b79-4cb5-bda2-a57a9df22e55","id":"75LJmz-3fYYf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-523766ed-979c-4e95-8a97-08d0e4a20881\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-523766ed-979c-4e95-8a97-08d0e4a20881')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-523766ed-979c-4e95-8a97-08d0e4a20881 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-523766ed-979c-4e95-8a97-08d0e4a20881');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ba2e7f8-3f7b-416d-9f13-10c7d5485b92\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ba2e7f8-3f7b-416d-9f13-10c7d5485b92')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ba2e7f8-3f7b-416d-9f13-10c7d5485b92 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c342c55a-d6c7-4d3a-b9c2-29293e35238d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c342c55a-d6c7-4d3a-b9c2-29293e35238d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"3hhEi_YPfYYf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"7kWKFw1GfYYf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117310809,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1a9ec9d3-1d04-414d-d042-e35acbd5cd67","id":"qAIsr4XffYYf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'growth', 'defence'], dtype=object))"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117310809,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"60f3cb5e-5aec-4519-8347-8024d039fb01","id":"iSUc_u5efYYf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-42ce9a31-1f8b-44d6-a1db-ba066260c6eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42ce9a31-1f8b-44d6-a1db-ba066260c6eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42ce9a31-1f8b-44d6-a1db-ba066260c6eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42ce9a31-1f8b-44d6-a1db-ba066260c6eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aee95006-15e0-41d7-894c-09cbe9b069b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aee95006-15e0-41d7-894c-09cbe9b069b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aee95006-15e0-41d7-894c-09cbe9b069b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0bf15c06-f153-4b8f-b927-4c2ddc294c71\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0bf15c06-f153-4b8f-b927-4c2ddc294c71 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117310809,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a01746b2-1f0b-4cbb-dc68-3f27114d3955","id":"6_deD75CfYYf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[479,   6,   7,   8],\n","       [  0, 495,   1,   4],\n","       [  3,   1, 478,  18],\n","       [  1,   0,  10, 489]])"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1706117311939,"user_tz":-330,"elapsed":1140,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"24a43564-72b7-469a-ebee-2b820e2884de","id":"Vu8b5XGNfYYg"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117311940,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e7391db7-8c01-4cd6-9285-ca60b864e5a7","id":"gOwycJ2UfYYg"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.99      0.96      0.97       500\n","       defence       0.99      0.99      0.99       500\n","        growth       0.96      0.96      0.96       500\n","infrastructure       0.94      0.98      0.96       500\n","\n","      accuracy                           0.97      2000\n","     macro avg       0.97      0.97      0.97      2000\n","  weighted avg       0.97      0.97      0.97      2000\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qi77HLaHzs6j"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"xq1D9Z2b11Fl"},"source":["### SVD-KMeans"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dQlY2BNt11F0"},"outputs":[],"source":["from sklearn.cluster import KMeans\n","from sklearn.decomposition import TruncatedSVD\n","experiment = 'SVD/KMeans'\n","umap_model = TruncatedSVD(n_components=100, random_state=42)\n","hdbscan_model = KMeans(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"WFaZpCEL11F0"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vh-gbCr211F1"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QqY0H-Yq11F1","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111637124,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"55f3779f-035c-442f-8d39-9cf5e659589d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-07704a4f-bdce-4a5f-b5ac-8a44a945a422\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07704a4f-bdce-4a5f-b5ac-8a44a945a422')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-07704a4f-bdce-4a5f-b5ac-8a44a945a422 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-07704a4f-bdce-4a5f-b5ac-8a44a945a422');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c924f4ac-58be-4c52-abe1-97c9455ae589\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c924f4ac-58be-4c52-abe1-97c9455ae589')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c924f4ac-58be-4c52-abe1-97c9455ae589 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_dc3361b7-d6fe-400d-804d-1b47004383b7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dc3361b7-d6fe-400d-804d-1b47004383b7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":102}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0-IVvg7m11F1","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["639f9a32510245f499069ec62c10f49a","a1fea2b9a9f24c3fa915355122de07a3","6ae5dd2e9586422996870ed70be2f418","115f15505dcd447092d37de6aeb1b8f3","ec3563461f4b4277ba98ac437d1ef2d1","ca1b95b9823b4f18835727ed1029ee6d","a7f28c5e4c7040458bd9e77c9b8e8bd2","324b2ca58867454e9ca52000ff94d5dd","f2c9863c633f468c9b7f4b8e140996b1","306b289161094358a20b9fdf88eae59e","438747b121d3489e87cb6b70d4563fd3"]},"executionInfo":{"status":"ok","timestamp":1706111642490,"user_tz":-330,"elapsed":5377,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f2889338-1162-4388-b528-3b5f5ad509c4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"639f9a32510245f499069ec62c10f49a"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:01,753 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:01,818 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:01,823 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:01,958 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:01,969 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:02,582 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KR0Eu7R-11F1","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111642491,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c781562e-45c2-4092-84af-2d3c16344cd2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                              Name  \\\n","0      0    160    0_climate_change_policy_global   \n","1      1    132     1_climate_change_minister_new   \n","2      2    123  2_climate_tropical_season_summer   \n","3      3     85            3_heat_air_skin_people   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, global, emissions, n...   \n","1  [climate, change, minister, new, scientist, wo...   \n","2  [climate, tropical, season, summer, winter, te...   \n","3  [heat, air, skin, people, health, water, tempe...   \n","\n","                                             KeyBERT  \\\n","0  [climate, agriculture, adaptation, greenhouse,...   \n","1  [ipcc, climate, intergovernmental, modi, emiss...   \n","2  [climates, subtropical, climate, kerala, monso...   \n","3  [weather, temperature, summers, summer, temper...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, global, emissions, n...   \n","1  [climate, change, minister, new, scientist, wo...   \n","2  [climate, tropical, season, summer, winter, te...   \n","3  [heat, air, skin, people, health, water, tempe...   \n","\n","                                 Representative_Docs  \n","0  [and climate change this report published part...  \n","1  [change negotiators have called for greater am...  \n","2  [being country located south asia has very div...  \n","3  [has its own set problems that need addressed ...  "],"text/html":["\n","  <div id=\"df-26111a76-780d-43ff-914d-e855b2d52a2d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>160</td>\n","      <td>0_climate_change_policy_global</td>\n","      <td>[climate, change, policy, global, emissions, n...</td>\n","      <td>[climate, agriculture, adaptation, greenhouse,...</td>\n","      <td>[climate, change, policy, global, emissions, n...</td>\n","      <td>[and climate change this report published part...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>132</td>\n","      <td>1_climate_change_minister_new</td>\n","      <td>[climate, change, minister, new, scientist, wo...</td>\n","      <td>[ipcc, climate, intergovernmental, modi, emiss...</td>\n","      <td>[climate, change, minister, new, scientist, wo...</td>\n","      <td>[change negotiators have called for greater am...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>123</td>\n","      <td>2_climate_tropical_season_summer</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[climates, subtropical, climate, kerala, monso...</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>85</td>\n","      <td>3_heat_air_skin_people</td>\n","      <td>[heat, air, skin, people, health, water, tempe...</td>\n","      <td>[weather, temperature, summers, summer, temper...</td>\n","      <td>[heat, air, skin, people, health, water, tempe...</td>\n","      <td>[has its own set problems that need addressed ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-26111a76-780d-43ff-914d-e855b2d52a2d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-26111a76-780d-43ff-914d-e855b2d52a2d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-26111a76-780d-43ff-914d-e855b2d52a2d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6278956-d6e9-4490-8708-7d26d40c452e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6278956-d6e9-4490-8708-7d26d40c452e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6278956-d6e9-4490-8708-7d26d40c452e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fLVEVT4b11F2"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yJLxHPRC11F2"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YkTpsIf311F2"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YlnJlxmE11F2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111643515,"user_tz":-330,"elapsed":1030,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d54d786f-407a-4445-db71-32903f1ceace"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6620902920267248\n","c_umass 0.6620902920267248\n","c_npmi 0.07974522438683242\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"7etYoPpi11F2"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e-OYQ26O11F2"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MQnEgdwh11F2"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NSjNsJN511F2","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["8487e579d7014a8da6c162913fa12c50","ee34abce0a384b1f84e8d20e0cb88caa","279fbc9fdd9c4f6198926de8896aa907","4e73691b609e49cf8b7d5f34571bf111","be6b8f255be6443ca6f5e60f7aa5f4d2","6e420889a12647ae918d502caae124da","2038fbbe2cf84559b0efe8a50f382eae","3df2a12ea59e47d7adb51f24abaa7f70","da60584c1e4a4caab2bb4b884bee92c8","690103799e484948aff9c3257501795d","724f42e8cba047eb94d9e8a254211ec5"]},"executionInfo":{"status":"ok","timestamp":1706111649119,"user_tz":-330,"elapsed":5607,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ae0bf033-f82b-4506-cc8a-533af5274790"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8487e579d7014a8da6c162913fa12c50"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:07,901 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:08,090 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:08,093 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:08,568 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:08,576 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:09,227 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QbTgPaja11F3","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111649119,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"bbea8e46-0ee1-4d78-f28d-277311fdb274"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    154  0_defence_ministry_government_aircraft   \n","1      1    143             1_army_forces_kashmir_armed   \n","2      2    106         2_minister_pakistan_china_singh   \n","3      3     97        3_minister_visit_defence_meeting   \n","\n","                                      Representation  \\\n","0  [defence, ministry, government, aircraft, budg...   \n","1  [army, forces, kashmir, armed, soldiers, pakis...   \n","2  [minister, pakistan, china, singh, country, nu...   \n","3  [minister, visit, defence, meeting, singh, tal...   \n","\n","                                             KeyBERT  \\\n","0  [procurement, crore, expenditure, spending, de...   \n","1  [jammu, kashmir, pradesh, troops, pakistan, mi...   \n","2  [pakistan, pakistani, terrorism, afghanistan, ...   \n","3  [islamabad, pakistan, pakistani, modi, rajnath...   \n","\n","                                                 MMR  \\\n","0  [defence, ministry, government, aircraft, budg...   \n","1  [army, forces, kashmir, armed, soldiers, pakis...   \n","2  [minister, pakistan, china, singh, country, nu...   \n","3  [minister, visit, defence, meeting, singh, tal...   \n","\n","                                 Representative_Docs  \n","0  [budget military spending will crore for the f...  \n","1  [forces have launched massive search operation...  \n","2  [minister rajnath singh tuesday that pakistan ...  \n","3  [minister visits pakistan defence minister ant...  "],"text/html":["\n","  <div id=\"df-f43adf0a-7e31-473d-aa6f-4fa5ae555e2f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>154</td>\n","      <td>0_defence_ministry_government_aircraft</td>\n","      <td>[defence, ministry, government, aircraft, budg...</td>\n","      <td>[procurement, crore, expenditure, spending, de...</td>\n","      <td>[defence, ministry, government, aircraft, budg...</td>\n","      <td>[budget military spending will crore for the f...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>143</td>\n","      <td>1_army_forces_kashmir_armed</td>\n","      <td>[army, forces, kashmir, armed, soldiers, pakis...</td>\n","      <td>[jammu, kashmir, pradesh, troops, pakistan, mi...</td>\n","      <td>[army, forces, kashmir, armed, soldiers, pakis...</td>\n","      <td>[forces have launched massive search operation...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>106</td>\n","      <td>2_minister_pakistan_china_singh</td>\n","      <td>[minister, pakistan, china, singh, country, nu...</td>\n","      <td>[pakistan, pakistani, terrorism, afghanistan, ...</td>\n","      <td>[minister, pakistan, china, singh, country, nu...</td>\n","      <td>[minister rajnath singh tuesday that pakistan ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>97</td>\n","      <td>3_minister_visit_defence_meeting</td>\n","      <td>[minister, visit, defence, meeting, singh, tal...</td>\n","      <td>[islamabad, pakistan, pakistani, modi, rajnath...</td>\n","      <td>[minister, visit, defence, meeting, singh, tal...</td>\n","      <td>[minister visits pakistan defence minister ant...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f43adf0a-7e31-473d-aa6f-4fa5ae555e2f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f43adf0a-7e31-473d-aa6f-4fa5ae555e2f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f43adf0a-7e31-473d-aa6f-4fa5ae555e2f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f0a87647-0c42-433d-8f04-4c2bcadbfc18\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0a87647-0c42-433d-8f04-4c2bcadbfc18')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f0a87647-0c42-433d-8f04-4c2bcadbfc18 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":112}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VkmAlYgg11F3"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SjrGfiCx11F3"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tGVdvBJv11F3"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VQ4Iir-X11F3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111650140,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5d3c7231-3164-4d6c-9765-36114bf3c2fa"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.48393076694357845\n","c_umass 0.48393076694357845\n","c_npmi 0.034632177020298194\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"UxvvxrT011F3"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7rfIX5EH11F3"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZnILivDk11F3"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KTkKtckj11F3"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FWkU5MuI11F3","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["439dacc46e6049778864850db63ee9d6","33bfebca55234328bc73ab0611075012","9e07ecafb6f34d8a930343448cc82f5f","31c7d8e18c5a4e0ca0464b5d4c16ee7d","eea111bdbede4100a721efb320655e6d","89ac01bce1dc4e31a521f1775fea32dc","7aa3482a60f44737bf7f95b3fc29eeb5","bcb35583ec234dc78866b80f6e8dc030","46adad9b04eb4ebea84888074a1bca3f","40c53b5760cc406ca4f1c15468ca889a","8ee2847e0a7b47f6b70aa6e270ca0c62"]},"executionInfo":{"status":"ok","timestamp":1706111654836,"user_tz":-330,"elapsed":4699,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ef3165d2-b2cf-4f6d-80d4-3aadf25d3830"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"439dacc46e6049778864850db63ee9d6"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:14,384 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:14,534 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:14,536 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:14,632 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:14,645 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:15,159 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OLnPpniL11F3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111654836,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0273f84a-7c2e-4acb-973b-5d179eea6b18"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    193          0_growth_percent_grow_fiscal   \n","1      1    132        1_economy_growth_world_growing   \n","2      2     97  2_economy_government_growth_economic   \n","3      3     78             3_growth_quarter_grew_gdp   \n","\n","                                      Representation  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, government, growth, economic, rbi, g...   \n","3  [growth, quarter, grew, gdp, economy, year, pe...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, estimate, growth, econo...   \n","1  [economy, gdp, economies, economic, asia, grow...   \n","2  [recession, economy, gdp, inflation, economic,...   \n","3  [gdp, economy, fiscal, quarter, growth, slowes...   \n","\n","                                                 MMR  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, government, growth, economic, rbi, g...   \n","3  [growth, quarter, grew, gdp, economy, year, pe...   \n","\n","                                 Representative_Docs  \n","0  [will grow the fiscal year the world bank its ...  \n","1  [one the world fastest growing economies with ...  \n","2  [has been downward spiral for some time now th...  \n","3  [grew the rate percent the first quarter this ...  "],"text/html":["\n","  <div id=\"df-a1b6218c-59b0-4dad-84d8-bb0dc4c34543\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>193</td>\n","      <td>0_growth_percent_grow_fiscal</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[gdp, economy, fiscal, estimate, growth, econo...</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[will grow the fiscal year the world bank its ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>132</td>\n","      <td>1_economy_growth_world_growing</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[economy, gdp, economies, economic, asia, grow...</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[one the world fastest growing economies with ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>97</td>\n","      <td>2_economy_government_growth_economic</td>\n","      <td>[economy, government, growth, economic, rbi, g...</td>\n","      <td>[recession, economy, gdp, inflation, economic,...</td>\n","      <td>[economy, government, growth, economic, rbi, g...</td>\n","      <td>[has been downward spiral for some time now th...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>78</td>\n","      <td>3_growth_quarter_grew_gdp</td>\n","      <td>[growth, quarter, grew, gdp, economy, year, pe...</td>\n","      <td>[gdp, economy, fiscal, quarter, growth, slowes...</td>\n","      <td>[growth, quarter, grew, gdp, economy, year, pe...</td>\n","      <td>[grew the rate percent the first quarter this ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1b6218c-59b0-4dad-84d8-bb0dc4c34543')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a1b6218c-59b0-4dad-84d8-bb0dc4c34543 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a1b6218c-59b0-4dad-84d8-bb0dc4c34543');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-58effcfc-eb49-4568-a46e-c6d47df0c4e1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58effcfc-eb49-4568-a46e-c6d47df0c4e1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-58effcfc-eb49-4568-a46e-c6d47df0c4e1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":120}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UgqILTbh11F4"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YrHwKT5b11F4"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hco--2EJ11F4"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OhHtsPK411F4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111656083,"user_tz":-330,"elapsed":451,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4b42cf32-02ec-4902-afe0-209afce10063"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4026872763386337\n","c_umass 0.4026872763386337\n","c_npmi 0.015421341583892446\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"WBSb39v811F4"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KiT118kT11F5"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mNj2P65o11F5"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AX5F-ZVs11F5"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"20KouuSK11F5","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["ee4287a01ea546bdb74dce79886170b1","d08c629fb2344d7e9acf98e0e656fade","3f01608d50f6458c9798440ba191d104","72155517e5fd4d6cb545e9bdb8c31b17","30be3c6ee04e498a828b8df63a5b5b49","ba874a3af4c642ccb32a444cd7a83745","dec493b6947846208de0edf116dd5929","1713bb448e264a72a6dcbe8afcff8c98","561b9c39227d4ae890775b9fcdbcbf4f","0d613a785c544c76a927b2705b3eed95","70a5da9a36bc4de5926ffbc60accd6b7"]},"executionInfo":{"status":"ok","timestamp":1706111661857,"user_tz":-330,"elapsed":5775,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"75ccf463-d09d-427b-eb45-3ad0cb915968"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ee4287a01ea546bdb74dce79886170b1"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:20,498 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:20,692 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:20,695 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:21,786 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:21,799 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:22,312 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Q7nPt5L11F5","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111662585,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b1e6975f-4322-406f-92d2-ded64ac3b963"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    205  0_infrastructure_sector_government_investment   \n","1      1    150                  1_company_project_power_crore   \n","2      2     76                    2_airport_gmr_company_stake   \n","3      3     69                  3_larsen_toubro_company_crore   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, crore, construction,...   \n","2  [airport, gmr, company, stake, group, airports...   \n","3  [larsen, toubro, company, crore, power, projec...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, railways, construction, secto...   \n","1  [adani, infra, gujarat, infrastructure, crore,...   \n","2  [gmr, gml, gmm, airport, mumbai, maharashtra, ...   \n","3  [larsens, larsen, toubro, companies, infrastru...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, crore, construction,...   \n","2  [airport, gmr, company, stake, group, airports...   \n","3  [larsen, toubro, company, crore, power, projec...   \n","\n","                                 Representative_Docs  \n","0  [not just sector but the backbone the growth a...  \n","1  [company adani enterprises has announced enter...  \n","2  [firm gmr infrastructure has won engineering p...  \n","3  [and engineering company larsen toubro plans s...  "],"text/html":["\n","  <div id=\"df-33e32436-6b28-489d-800e-257dbd66a527\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>205</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, secto...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[not just sector but the backbone the growth a...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>150</td>\n","      <td>1_company_project_power_crore</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[adani, infra, gujarat, infrastructure, crore,...</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[company adani enterprises has announced enter...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>76</td>\n","      <td>2_airport_gmr_company_stake</td>\n","      <td>[airport, gmr, company, stake, group, airports...</td>\n","      <td>[gmr, gml, gmm, airport, mumbai, maharashtra, ...</td>\n","      <td>[airport, gmr, company, stake, group, airports...</td>\n","      <td>[firm gmr infrastructure has won engineering p...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>69</td>\n","      <td>3_larsen_toubro_company_crore</td>\n","      <td>[larsen, toubro, company, crore, power, projec...</td>\n","      <td>[larsens, larsen, toubro, companies, infrastru...</td>\n","      <td>[larsen, toubro, company, crore, power, projec...</td>\n","      <td>[and engineering company larsen toubro plans s...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33e32436-6b28-489d-800e-257dbd66a527')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-33e32436-6b28-489d-800e-257dbd66a527 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-33e32436-6b28-489d-800e-257dbd66a527');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6951baac-6eaf-4544-9012-7b81cc309b10\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6951baac-6eaf-4544-9012-7b81cc309b10')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6951baac-6eaf-4544-9012-7b81cc309b10 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":128}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L_vB5Quv11F5"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S_HdstgH11F5"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NA2S81q011F5"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ELlRPK8X11F6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111663327,"user_tz":-330,"elapsed":746,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"073ff333-3706-4261-88f3-aca1bfe44f21"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5226292808591259\n","c_umass 0.5226292808591259\n","c_npmi 0.061926211547535005\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"8fgVc2Kb11F6"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gjWJP0oO11F6"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2vz7VB0R11F6"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bOBxGPlG11F6","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117364793,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c59c9f08-a85d-4ac6-829b-a729aa995b61"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-1b494b91-c85f-4b60-9c6c-367b2ab6bdef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b494b91-c85f-4b60-9c6c-367b2ab6bdef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b494b91-c85f-4b60-9c6c-367b2ab6bdef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b494b91-c85f-4b60-9c6c-367b2ab6bdef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5c4d0ac-b3ed-445b-b6a4-6ebfd1ad8271\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5c4d0ac-b3ed-445b-b6a4-6ebfd1ad8271')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5c4d0ac-b3ed-445b-b6a4-6ebfd1ad8271 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_15cc4835-cbb5-4b2a-bcf5-401b113b6e09\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_15cc4835-cbb5-4b2a-bcf5-401b113b6e09 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":131}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K0jGurL511F6","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["6a012c640a1f4004b35e24d1beda500b","fcb6ee92593e44c3a7a4dfc1c72ddd41","7c7b6886705c4d52aac9b2496ff2209c","17cbe83d2d53465998026b505033df2f","d2a932c1f9344221833d526a42c4ab71","c549fd91b3984d6394f89da49070017f","63496aafd95b4d3686197f6f5010eaec","35ee157c31a14549a20b9d1883e348c5","845dbc5cfd664154a7a1b5c889cdbe80","7ff6c5c22b47478bb8e264ae22b3fa67","f9a6ad9a4d754d37b1c8a769ad12fd8c"]},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":16950,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"939add6f-e96b-4f72-9d11-d2b5d69feb53"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6a012c640a1f4004b35e24d1beda500b"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:29:39,409 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:29:39,662 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:29:39,666 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:29:40,268 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:29:40,280 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:29:41,081 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"feZnVR7d11F6","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"588695f0-5dff-41ae-935c-14aa024f598d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    513  0_infrastructure_company_project_power   \n","1      1    502        1_defence_minister_army_pakistan   \n","2      2    497           2_growth_economy_year_percent   \n","3      3    488    3_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [infrastructure, company, project, power, proj...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, year, percent, fiscal, econo...   \n","3  [climate, change, temperature, weather, world,...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, construction, sector, industr...   \n","1  [modi, army, pakistan, military, singh, delhi,...   \n","2  [gdp, economy, economies, fiscal, growth, econ...   \n","3  [climate, climatic, weather, monsoons, rainfal...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, company, project, power, proj...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [growth, economy, year, percent, fiscal, econo...   \n","3  [climate, change, temperature, weather, world,...   \n","\n","                                 Representative_Docs  \n","0  [companies have been the main beneficiary the ...  \n","1  [budget highlights government has announced it...  \n","2  [grow world bank new delhi economy expected ex...  \n","3  [and climate change are complex phenomenon and...  "],"text/html":["\n","  <div id=\"df-2bef114f-e6bc-4034-adc5-d66d68ca699c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>513</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>[infrastructure, company, project, power, proj...</td>\n","      <td>[infrastructure, construction, sector, industr...</td>\n","      <td>[infrastructure, company, project, power, proj...</td>\n","      <td>[companies have been the main beneficiary the ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[modi, army, pakistan, military, singh, delhi,...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[budget highlights government has announced it...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>497</td>\n","      <td>2_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[gdp, economy, economies, fiscal, growth, econ...</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[grow world bank new delhi economy expected ex...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>488</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[climate, climatic, weather, monsoons, rainfal...</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[and climate change are complex phenomenon and...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2bef114f-e6bc-4034-adc5-d66d68ca699c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2bef114f-e6bc-4034-adc5-d66d68ca699c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2bef114f-e6bc-4034-adc5-d66d68ca699c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2bcbc773-0c62-40d3-a6f1-d330a39b04f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2bcbc773-0c62-40d3-a6f1-d330a39b04f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2bcbc773-0c62-40d3-a6f1-d330a39b04f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":133}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4jMDphZq11F6"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"uxQxqujogVzi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":23,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"89b0921e-c9fb-4ea1-bc52-760f22c99add","id":"ayWmc1UWgVzj"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                    Name  \\\n","0            Indian climate  0_infrastructure_company_project_power   \n","1            Indian climate    3_climate_change_temperature_weather   \n","2            Indian climate    3_climate_change_temperature_weather   \n","3            Indian climate    3_climate_change_temperature_weather   \n","4            Indian climate    3_climate_change_temperature_weather   \n","...                     ...                                     ...   \n","1995  Indian infrastructure  0_infrastructure_company_project_power   \n","1996  Indian infrastructure  0_infrastructure_company_project_power   \n","1997  Indian infrastructure  0_infrastructure_company_project_power   \n","1998  Indian infrastructure  0_infrastructure_company_project_power   \n","1999  Indian infrastructure  0_infrastructure_company_project_power   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-d60a780f-b8a0-4ba0-8475-1ad6c640b2a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_project_power</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d60a780f-b8a0-4ba0-8475-1ad6c640b2a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d60a780f-b8a0-4ba0-8475-1ad6c640b2a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d60a780f-b8a0-4ba0-8475-1ad6c640b2a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-64221083-593c-482b-b608-6f23632e825a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64221083-593c-482b-b608-6f23632e825a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-64221083-593c-482b-b608-6f23632e825a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4f18fc7f-df3d-4560-a5af-2799a2e16e20\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4f18fc7f-df3d-4560-a5af-2799a2e16e20 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":23,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2ae6f26e-42eb-4c49-f1a1-31e0c8c5f7c8","id":"1CaOYFqAgVzk"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-1ba9cdf1-909f-4548-bd18-4a2f1e3d5a8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ba9cdf1-909f-4548-bd18-4a2f1e3d5a8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ba9cdf1-909f-4548-bd18-4a2f1e3d5a8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ba9cdf1-909f-4548-bd18-4a2f1e3d5a8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a4484ee8-b89f-46d5-8417-2d230933d0b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a4484ee8-b89f-46d5-8417-2d230933d0b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a4484ee8-b89f-46d5-8417-2d230933d0b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1a49257f-bee6-4d40-bb8f-c2832e2e56bb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1a49257f-bee6-4d40-bb8f-c2832e2e56bb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"tcn2P8RdgVzk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"xUPzbfMXgVzk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2ad8b322-1d1c-4ff8-ddbd-c7937294c55c","id":"jTfGwAmVgVzl"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'defence', 'growth'], dtype=object))"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1f70c7fa-21fd-4a64-de2d-ed273ca32da3","id":"FW3-0rcsgVzl"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-40562691-4757-4171-bc67-cbfa8bdafdbf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40562691-4757-4171-bc67-cbfa8bdafdbf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-40562691-4757-4171-bc67-cbfa8bdafdbf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-40562691-4757-4171-bc67-cbfa8bdafdbf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c495d815-0c13-47f7-a955-7ec63dc42f69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c495d815-0c13-47f7-a955-7ec63dc42f69')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c495d815-0c13-47f7-a955-7ec63dc42f69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fe5709ae-43e4-45be-98d9-7508f17ee965\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fe5709ae-43e4-45be-98d9-7508f17ee965 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117381740,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"275e00e0-6bc2-4c96-a918-439f5684f034","id":"1_87FOW0gVzl"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[478,  13,   1,   8],\n","       [  1, 486,   5,   8],\n","       [  6,   3, 463,  28],\n","       [  3,   0,  28, 469]])"]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1706117382842,"user_tz":-330,"elapsed":1109,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5865e879-9c0c-491e-f1df-95af3de1a004","id":"ULC5Tx7lgVzl"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117382842,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4ed39c7e-6980-4a0e-fd7d-6ca412773b7f","id":"xzj1jcIogVzm"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.98      0.96      0.97       500\n","       defence       0.97      0.97      0.97       500\n","        growth       0.93      0.93      0.93       500\n","infrastructure       0.91      0.94      0.93       500\n","\n","      accuracy                           0.95      2000\n","     macro avg       0.95      0.95      0.95      2000\n","  weighted avg       0.95      0.95      0.95      2000\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"67Php7nh3E0n"},"source":["## Agglomerative"]},{"cell_type":"markdown","metadata":{"id":"kV8sEm7z3E0z"},"source":["### PCA-Agg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JuvSUza53E0z"},"outputs":[],"source":["from sklearn.cluster import AgglomerativeClustering\n","experiment='PCA/Agg'\n","umap_model = PCA()\n","hdbscan_model = AgglomerativeClustering(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"RyIfwBqJ3E0z"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gaKjwMsa3E00"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xKzmlmgf3E00","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111682632,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d5f0ef87-8e4a-4165-9d88-961d60209de3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-031152af-a891-4b59-a3cf-b3fd9f3ef33e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-031152af-a891-4b59-a3cf-b3fd9f3ef33e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-031152af-a891-4b59-a3cf-b3fd9f3ef33e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-031152af-a891-4b59-a3cf-b3fd9f3ef33e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-47c64da2-2d6c-4ad1-abb6-59b1d8c9c64f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47c64da2-2d6c-4ad1-abb6-59b1d8c9c64f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-47c64da2-2d6c-4ad1-abb6-59b1d8c9c64f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f7d169d1-1da1-47ff-8ab8-17d8e81df2a0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f7d169d1-1da1-47ff-8ab8-17d8e81df2a0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":143}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MdXGDHpo3E00","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["786e7957ab074b76b1cf316a4eb45b81","373c0e59229b4202a02ec21dd71aaf67","15f1ecfb66fc4804b3d865d41cc0ba23","e52168e09ee24653b3b5e9adf43f4d1f","a7380c7278ca49299d2093786f72548e","8d82740e200e420ab3aba298320919b1","d9e07bd543f64f57bbb99820d2246c64","e2636f3c9a294641be3708b10bfdf4e0","3e75e5a6a3814f76bde2c540a622399c","b7162433f88a49d8a36e0dfb6d230bcb","bd5bf59b7c7c4e0080e355120cb4ef34"]},"executionInfo":{"status":"ok","timestamp":1706111687849,"user_tz":-330,"elapsed":5221,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"33a6c701-7ef5-49ca-9a34-0273b77118aa"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"786e7957ab074b76b1cf316a4eb45b81"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:47,277 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:47,489 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:47,494 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:47,568 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:47,573 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:48,157 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"20OWXMqL3E00","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111687850,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ca2fd4c3-97cf-4c3c-eecd-f26e8e9141ad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                   Name  \\\n","0      0    176      0_climate_change_policy_emissions   \n","1      1    114                 1_air_heat_people_skin   \n","2      2    107  2_climate_tropical_season_temperature   \n","3      3    103        3_climate_change_global_warming   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, emissions, energy, m...   \n","1  [air, heat, people, skin, water, temperature, ...   \n","2  [climate, tropical, season, temperature, summe...   \n","3  [climate, change, global, warming, scientists,...   \n","\n","                                             KeyBERT  \\\n","0  [climate, emissions, ipcc, modi, policy, warmi...   \n","1  [climate, weather, temperature, temperatures, ...   \n","2  [climates, subtropical, climate, kerala, monso...   \n","3  [climate, droughts, agriculture, adaptation, d...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, emissions, energy, m...   \n","1  [air, heat, people, skin, water, temperature, ...   \n","2  [climate, tropical, season, temperature, summe...   \n","3  [climate, change, global, warming, scientists,...   \n","\n","                                 Representative_Docs  \n","0  [change minister says the world wait addresses...  \n","1  [quite different from the other countries the ...  \n","2  [being country located south asia has very div...  \n","3  [change adaptation strategy the government con...  "],"text/html":["\n","  <div id=\"df-a58b29e0-ef4a-401d-bcfd-6af9b190a19e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>176</td>\n","      <td>0_climate_change_policy_emissions</td>\n","      <td>[climate, change, policy, emissions, energy, m...</td>\n","      <td>[climate, emissions, ipcc, modi, policy, warmi...</td>\n","      <td>[climate, change, policy, emissions, energy, m...</td>\n","      <td>[change minister says the world wait addresses...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>114</td>\n","      <td>1_air_heat_people_skin</td>\n","      <td>[air, heat, people, skin, water, temperature, ...</td>\n","      <td>[climate, weather, temperature, temperatures, ...</td>\n","      <td>[air, heat, people, skin, water, temperature, ...</td>\n","      <td>[quite different from the other countries the ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>107</td>\n","      <td>2_climate_tropical_season_temperature</td>\n","      <td>[climate, tropical, season, temperature, summe...</td>\n","      <td>[climates, subtropical, climate, kerala, monso...</td>\n","      <td>[climate, tropical, season, temperature, summe...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>103</td>\n","      <td>3_climate_change_global_warming</td>\n","      <td>[climate, change, global, warming, scientists,...</td>\n","      <td>[climate, droughts, agriculture, adaptation, d...</td>\n","      <td>[climate, change, global, warming, scientists,...</td>\n","      <td>[change adaptation strategy the government con...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a58b29e0-ef4a-401d-bcfd-6af9b190a19e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a58b29e0-ef4a-401d-bcfd-6af9b190a19e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a58b29e0-ef4a-401d-bcfd-6af9b190a19e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a2530028-20f7-45a5-bf4a-55d802137e11\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2530028-20f7-45a5-bf4a-55d802137e11')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a2530028-20f7-45a5-bf4a-55d802137e11 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":145}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RNtB2Ak63E00"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7H5JrtIC3E01"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LuGiJaGd3E01"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SDuIBABK3E01","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111689082,"user_tz":-330,"elapsed":452,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c8ecfcb2-cdf2-4c26-9231-3f3662a2b67f"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6675372289584808\n","c_umass 0.6675372289584808\n","c_npmi 0.08311673195153275\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"kcWGaJEE3E01"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"To_-90aF3E01"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mwx8ewiu3E01"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mKnllIpG3E01","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["e4e56001b0bc4515bad2abf4db1d81d3","aadc59fd74f34ef0acc995f730bbc1fa","20bc1af3f7ad479db9d8ad9e99d8d378","e382e6f7b7864b90966f4b43df5f114a","27b72157385f4c019c70a3397adcdf15","f6968f24a40844ab81c144869c63b007","e06ace0f764445349a6fa37f4fff7b33","ab98f9d55e7942a89e5ed934354a1219","c874def3a18347fab5996a9e1e5ca395","fc987f82dcfd490093af32017657dec7","1032058297c94539a72c7ef59dc724d0"]},"executionInfo":{"status":"ok","timestamp":1706111694111,"user_tz":-330,"elapsed":5031,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"77fbeaf1-b0e5-421d-cb82-f5936cdff49b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e4e56001b0bc4515bad2abf4db1d81d3"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:53,491 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:53,597 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:53,600 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:53,673 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:53,684 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:54:54,239 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zDh508vY3E01","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111694111,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b678dfec-08c2-476d-f834-dd6bfb5523b2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    160        0_pakistan_army_minister_singh   \n","1      1    122            1_forces_defence_air_armed   \n","2      2    117  2_defence_budget_government_ministry   \n","3      3    101      3_minister_visit_defence_meeting   \n","\n","                                      Representation  \\\n","0  [pakistan, army, minister, singh, china, kashm...   \n","1  [forces, defence, air, armed, army, missile, f...   \n","2  [defence, budget, government, ministry, crore,...   \n","3  [minister, visit, defence, meeting, singh, pak...   \n","\n","                                             KeyBERT  \\\n","0  [kashmir, jammu, pakistan, pakistani, troops, ...   \n","1  [missiles, drones, drone, military, army, airc...   \n","2  [procurement, crore, expenditure, spending, mo...   \n","3  [islamabad, pakistan, pakistani, modi, rajnath...   \n","\n","                                                 MMR  \\\n","0  [pakistan, army, minister, singh, china, kashm...   \n","1  [forces, defence, air, armed, army, missile, f...   \n","2  [defence, budget, government, ministry, crore,...   \n","3  [minister, visit, defence, meeting, singh, pak...   \n","\n","                                 Representative_Docs  \n","0  [minister rajnath singh has expressed concern ...  \n","1  [forces will able deploy unmanned systems the ...  \n","2  [budget the campaign has been launched the gov...  \n","3  [minister rajnath singh islamabad meet his pak...  "],"text/html":["\n","  <div id=\"df-b34ec8d9-cd1e-4bc6-bbd6-cc40cc5c31c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>160</td>\n","      <td>0_pakistan_army_minister_singh</td>\n","      <td>[pakistan, army, minister, singh, china, kashm...</td>\n","      <td>[kashmir, jammu, pakistan, pakistani, troops, ...</td>\n","      <td>[pakistan, army, minister, singh, china, kashm...</td>\n","      <td>[minister rajnath singh has expressed concern ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>122</td>\n","      <td>1_forces_defence_air_armed</td>\n","      <td>[forces, defence, air, armed, army, missile, f...</td>\n","      <td>[missiles, drones, drone, military, army, airc...</td>\n","      <td>[forces, defence, air, armed, army, missile, f...</td>\n","      <td>[forces will able deploy unmanned systems the ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>117</td>\n","      <td>2_defence_budget_government_ministry</td>\n","      <td>[defence, budget, government, ministry, crore,...</td>\n","      <td>[procurement, crore, expenditure, spending, mo...</td>\n","      <td>[defence, budget, government, ministry, crore,...</td>\n","      <td>[budget the campaign has been launched the gov...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>101</td>\n","      <td>3_minister_visit_defence_meeting</td>\n","      <td>[minister, visit, defence, meeting, singh, pak...</td>\n","      <td>[islamabad, pakistan, pakistani, modi, rajnath...</td>\n","      <td>[minister, visit, defence, meeting, singh, pak...</td>\n","      <td>[minister rajnath singh islamabad meet his pak...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b34ec8d9-cd1e-4bc6-bbd6-cc40cc5c31c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b34ec8d9-cd1e-4bc6-bbd6-cc40cc5c31c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b34ec8d9-cd1e-4bc6-bbd6-cc40cc5c31c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-57abfa69-5e4d-42e6-9bf0-a9183cfbf826\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-57abfa69-5e4d-42e6-9bf0-a9183cfbf826')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-57abfa69-5e4d-42e6-9bf0-a9183cfbf826 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":153}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qCYjQG623E01"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qi0pkbIk3E02"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aCIAkb9n3E02"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N9MbmfFG3E02","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111695374,"user_tz":-330,"elapsed":1275,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"90d9245e-b71f-4385-9b41-f934363c393c"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4735602499487251\n","c_umass 0.4735602499487251\n","c_npmi 0.03984157643175533\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"fYer8JJG3E02"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fZ4JVhrd3E02"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zkHUH3yR3E02"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sRS_5gde3E02"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2g5D26eU3E02","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["d2103df4423448b68e5b4e26594379d4","dde7530c4b7e431993dcc0fdd9063aa4","68832e0db03e43e7b7effd8bc50b2a14","20a32eceb61248fe96018fba25dea6b7","16669593dab04a998065e8a856a5327d","0f88fb623c804749a4e9c699d98c374e","2e5ed4267bed4e5c8c29b74efaec8c0e","86f3f04477824143b306c6d608625f29","80c9b39645cf4a8cac8e5341996a57d7","354000d38420492cb99499f672963431","17026905b4fc4d4fbbd2f74b4198aede"]},"executionInfo":{"status":"ok","timestamp":1706111700440,"user_tz":-330,"elapsed":5069,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a7c9b7a6-538e-40d2-b77e-1a24468b1ab7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d2103df4423448b68e5b4e26594379d4"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:54:59,543 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:54:59,792 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:54:59,795 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:54:59,919 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:54:59,928 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:55:00,560 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eKCwi8YY3E03","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111700440,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7604f868-c27a-47bc-deec-f1ec7d267a30"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    198          0_growth_percent_fiscal_year   \n","1      1    149        1_economy_growth_world_growing   \n","2      2    105  2_economy_growth_government_economic   \n","3      3     48             3_quarter_growth_grew_gdp   \n","\n","                                      Representation  \\\n","0  [growth, percent, fiscal, year, grow, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, growth, government, economic, slowdo...   \n","3  [quarter, growth, grew, gdp, data, year, perce...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, economies, growth, econ...   \n","1  [gdp, economy, economies, economic, growth, as...   \n","2  [economy, gdp, rupee, modi, inflation, economi...   \n","3  [gdp, economy, fiscal, growth, quarter, econom...   \n","\n","                                                 MMR  \\\n","0  [growth, percent, fiscal, year, grow, economy,...   \n","1  [economy, growth, world, growing, sector, larg...   \n","2  [economy, growth, government, economic, slowdo...   \n","3  [quarter, growth, grew, gdp, data, year, perce...   \n","\n","                                 Representative_Docs  \n","0  [grow world bank new delhi economy expected ex...  \n","1  [has grown from small economy which based agri...  \n","2  [which was one the fastest growing economies t...  \n","3  [grows period the economy grew double digits f...  "],"text/html":["\n","  <div id=\"df-c4fda386-35e3-4c30-b322-f3d689c4200c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>198</td>\n","      <td>0_growth_percent_fiscal_year</td>\n","      <td>[growth, percent, fiscal, year, grow, economy,...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, econ...</td>\n","      <td>[growth, percent, fiscal, year, grow, economy,...</td>\n","      <td>[grow world bank new delhi economy expected ex...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>149</td>\n","      <td>1_economy_growth_world_growing</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[gdp, economy, economies, economic, growth, as...</td>\n","      <td>[economy, growth, world, growing, sector, larg...</td>\n","      <td>[has grown from small economy which based agri...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>2_economy_growth_government_economic</td>\n","      <td>[economy, growth, government, economic, slowdo...</td>\n","      <td>[economy, gdp, rupee, modi, inflation, economi...</td>\n","      <td>[economy, growth, government, economic, slowdo...</td>\n","      <td>[which was one the fastest growing economies t...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>48</td>\n","      <td>3_quarter_growth_grew_gdp</td>\n","      <td>[quarter, growth, grew, gdp, data, year, perce...</td>\n","      <td>[gdp, economy, fiscal, growth, quarter, econom...</td>\n","      <td>[quarter, growth, grew, gdp, data, year, perce...</td>\n","      <td>[grows period the economy grew double digits f...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4fda386-35e3-4c30-b322-f3d689c4200c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4fda386-35e3-4c30-b322-f3d689c4200c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4fda386-35e3-4c30-b322-f3d689c4200c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d27b8954-e1ea-4979-952c-fd54ee6320f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d27b8954-e1ea-4979-952c-fd54ee6320f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d27b8954-e1ea-4979-952c-fd54ee6320f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":161}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wLLmiQjO3E03"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y-sHMlO33E03"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pz3sT3eE3E03"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZvBzV9Ah3E03","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111701605,"user_tz":-330,"elapsed":1177,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7e03c964-4c08-494e-d864-5cd702a45294"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4336465045297373\n","c_umass 0.4336465045297373\n","c_npmi 0.0288660692946384\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"2k_wFzPB3E03"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oDp-zI1w3E03"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lUZCmYQN3E03"},"outputs":[],"source":["topic = 'Indian infra'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"P-BCJZBE3E04"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vkoZyPNW3E04","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["e12e5761d994490cb00aa062ef24895f","d7f1dce295e5490c802071644e4965af","0f9c12043e244d2aa13234d39f83e07a","c628b45e341646eaaa84660c04781b86","25b679e648194c00b1185914868874d6","32edf5f4cd3547d5b97f16af8f150952","9c291c1a88254f838621e1fc676c7332","d6b8b4940b9e431dbe2e44146ff77f23","132d99fad78e49d3889f3e926bed5d2e","10606033b79941818df8018827fe6c96","f7044992b60247d4a736a8daf4381c5b"]},"executionInfo":{"status":"ok","timestamp":1706111706481,"user_tz":-330,"elapsed":4878,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d0c8f3a2-84a6-4c75-b880-888e6b74a795"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e12e5761d994490cb00aa062ef24895f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:55:05,905 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:55:06,000 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:55:06,004 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:55:06,057 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:55:06,064 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:55:06,620 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qFbHse123E04","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111706482,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f83f9681-b611-4335-aa84-f1f3633015cd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    202  0_infrastructure_sector_government_investment   \n","1      1    194           1_company_project_power_construction   \n","2      2     53                  2_larsen_toubro_company_crore   \n","3      3     51                   3_airport_gmr_stake_airports   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, construction, crore,...   \n","2  [larsen, toubro, company, crore, power, major,...   \n","3  [airport, gmr, stake, airports, international,...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, railways, construction, gdp, ...   \n","1  [gujarat, maharashtra, adani, infrastructure, ...   \n","2  [larsens, larsen, toubro, companies, company, ...   \n","3  [gmr, gml, gmm, airport, ggm, gurgaon, mumbai,...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, construction, crore,...   \n","2  [larsen, toubro, company, crore, power, major,...   \n","3  [airport, gmr, stake, airports, international,...   \n","\n","                                 Representative_Docs  \n","0  [key driver for economic growth and developmen...  \n","1  [company adani enterprises has announced enter...  \n","2  [and engineering company larsen toubro plans s...  \n","3  [firm gmr infrastructure has won engineering p...  "],"text/html":["\n","  <div id=\"df-f45e5f7e-6aad-4683-851a-e35a1de55264\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>202</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, gdp, ...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[key driver for economic growth and developmen...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>194</td>\n","      <td>1_company_project_power_construction</td>\n","      <td>[company, project, power, construction, crore,...</td>\n","      <td>[gujarat, maharashtra, adani, infrastructure, ...</td>\n","      <td>[company, project, power, construction, crore,...</td>\n","      <td>[company adani enterprises has announced enter...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>53</td>\n","      <td>2_larsen_toubro_company_crore</td>\n","      <td>[larsen, toubro, company, crore, power, major,...</td>\n","      <td>[larsens, larsen, toubro, companies, company, ...</td>\n","      <td>[larsen, toubro, company, crore, power, major,...</td>\n","      <td>[and engineering company larsen toubro plans s...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>51</td>\n","      <td>3_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, ggm, gurgaon, mumbai,...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[firm gmr infrastructure has won engineering p...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f45e5f7e-6aad-4683-851a-e35a1de55264')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f45e5f7e-6aad-4683-851a-e35a1de55264 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f45e5f7e-6aad-4683-851a-e35a1de55264');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-209e25f4-3fca-462d-ab14-d45aee99397d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-209e25f4-3fca-462d-ab14-d45aee99397d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-209e25f4-3fca-462d-ab14-d45aee99397d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":169}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CEJBchBQ3E04"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yEpTXjuP3E04"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"30YrYeQ53E04"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bO4vS-pR3E04","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111708111,"user_tz":-330,"elapsed":1633,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2e03275f-696f-4a12-a2ab-a9e662d29f3d"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.481565816926965\n","c_umass 0.481565816926965\n","c_npmi 0.056596031113690715\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"sIDcoTKn3E04"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fuz1Ng-W3E05"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S5sWOzkk3E05"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LNW0TfU23E05","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117490068,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d6d06ba8-7fa4-4614-c49e-69c90d7cf760"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-0a4024a4-7a24-4e80-ae0a-a57d20f04496\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a4024a4-7a24-4e80-ae0a-a57d20f04496')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0a4024a4-7a24-4e80-ae0a-a57d20f04496 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0a4024a4-7a24-4e80-ae0a-a57d20f04496');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-720f2801-9778-4aec-9171-060fa0de4c94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-720f2801-9778-4aec-9171-060fa0de4c94')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-720f2801-9778-4aec-9171-060fa0de4c94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9cce4355-ef62-4060-9f3c-083e3446cbf3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9cce4355-ef62-4060-9f3c-083e3446cbf3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":147}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3Q4H0-7M3E05","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["1e77f2769bd44d9088651e34cbfec2ee","a37cfcfad783434bb8b12edf74c2dd9a","25575fcf043c471ca540018a256187b0","8ed30a4921b54c4882a510ee8cd63374","967c4e04f5b142519c14e4425b0f65ac","6bf3eb6ae0dc4737ac175790fc10cb32","22d1bd3fe3c541fd9e28b211b03b64f7","15889d0032a64c44bd2a66a4d61c166f","4a97ffe3a2f34da898c8bf497def5593","2ecc6f2904ce4aaaab2be16f8951e9fe","96513eb020834e9d9329a52a9d695b30"]},"executionInfo":{"status":"ok","timestamp":1706117512132,"user_tz":-330,"elapsed":21358,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"50e0fc0a-8abb-4203-bf47-23cdf09a4667"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1e77f2769bd44d9088651e34cbfec2ee"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:31:46,905 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:31:47,972 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:31:47,996 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:31:50,108 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:31:50,119 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:31:51,493 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FDTj_1r63E05","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117519771,"user_tz":-330,"elapsed":442,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"25260ee3-5dbe-43c8-9e6c-a1e42554f7f0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    527        0_defence_minister_army_pakistan   \n","1      1    506           1_growth_economy_percent_year   \n","2      2    488  2_infrastructure_company_power_project   \n","3      3    479    3_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [defence, minister, army, pakistan, forces, si...   \n","1  [growth, economy, percent, year, fiscal, econo...   \n","2  [infrastructure, company, power, project, proj...   \n","3  [climate, change, temperature, weather, people...   \n","\n","                                             KeyBERT  \\\n","0  [pakistan, modi, jammu, parrikar, singh, kashm...   \n","1  [gdp, economy, fiscal, economies, growth, infl...   \n","2  [infrastructure, construction, economy, invest...   \n","3  [climate, climatic, weather, monsoons, monsoon...   \n","\n","                                                 MMR  \\\n","0  [defence, minister, army, pakistan, forces, si...   \n","1  [growth, economy, percent, year, fiscal, econo...   \n","2  [infrastructure, company, power, project, proj...   \n","3  [climate, change, temperature, weather, people...   \n","\n","                                 Representative_Docs  \n","0  [minister antony has called meeting the chiefs...  \n","1  [expected recover with growth expected per cen...  \n","2  [companies have been the main beneficiary the ...  \n","3  [change adaptation the government has set out ...  "],"text/html":["\n","  <div id=\"df-3aea029c-02a9-48b0-9236-9b73c6d389e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>527</td>\n","      <td>0_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[pakistan, modi, jammu, parrikar, singh, kashm...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[minister antony has called meeting the chiefs...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>506</td>\n","      <td>1_growth_economy_percent_year</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, infl...</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[expected recover with growth expected per cen...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>488</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>[infrastructure, company, power, project, proj...</td>\n","      <td>[infrastructure, construction, economy, invest...</td>\n","      <td>[infrastructure, company, power, project, proj...</td>\n","      <td>[companies have been the main beneficiary the ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>479</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, people...</td>\n","      <td>[climate, climatic, weather, monsoons, monsoon...</td>\n","      <td>[climate, change, temperature, weather, people...</td>\n","      <td>[change adaptation the government has set out ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3aea029c-02a9-48b0-9236-9b73c6d389e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3aea029c-02a9-48b0-9236-9b73c6d389e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3aea029c-02a9-48b0-9236-9b73c6d389e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6645b5a4-3f3a-4ee2-be6b-ca4b8a662ce3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6645b5a4-3f3a-4ee2-be6b-ca4b8a662ce3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6645b5a4-3f3a-4ee2-be6b-ca4b8a662ce3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":150}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fYOPmcmb3E05"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HXSxbS_t3E05"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q9_yJplU3E05"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UGWensfs3E05","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111727983,"user_tz":-330,"elapsed":3567,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f2d0a914-f79a-4aa7-dc2d-b4d5b73fdb55"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.7924281332222277\n","c_umass 0.7924281332222277\n","c_npmi 0.15753567025531415\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["# import csv\n","\n","# # Get the values\n","# c_v_value = get_c_v(topic_model, df, topics)\n","# c_umass_value = get_c_umass(topic_model, df, topics)\n","# c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","# print('c_v', c_v_value)\n","# print('c_umass', c_v_value)\n","# print('c_npmi', c_npmi_value)\n","\n","# # Specify the file path\n","# csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# # Write values\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","# writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","# print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"HLxR3sY1hh22"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117524949,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"96f5e253-e069-4dec-e1a0-4a158088e76e","id":"DUx67fmzhh23"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                    Name  \\\n","0            Indian climate  2_infrastructure_company_power_project   \n","1            Indian climate    3_climate_change_temperature_weather   \n","2            Indian climate    3_climate_change_temperature_weather   \n","3            Indian climate    3_climate_change_temperature_weather   \n","4            Indian climate    3_climate_change_temperature_weather   \n","...                     ...                                     ...   \n","1995  Indian infrastructure  2_infrastructure_company_power_project   \n","1996  Indian infrastructure  2_infrastructure_company_power_project   \n","1997  Indian infrastructure  2_infrastructure_company_power_project   \n","1998  Indian infrastructure  2_infrastructure_company_power_project   \n","1999  Indian infrastructure  2_infrastructure_company_power_project   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-eb10b249-2e02-44dd-a5d3-c0ccdaf33c7d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>2_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb10b249-2e02-44dd-a5d3-c0ccdaf33c7d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb10b249-2e02-44dd-a5d3-c0ccdaf33c7d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb10b249-2e02-44dd-a5d3-c0ccdaf33c7d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b9887276-9be7-45e6-b18b-4e43c4f53d30\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9887276-9be7-45e6-b18b-4e43c4f53d30')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b9887276-9be7-45e6-b18b-4e43c4f53d30 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3cd4a91d-3769-40e9-819a-87fcf718dc7e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3cd4a91d-3769-40e9-819a-87fcf718dc7e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":152}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117524949,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1e04fba7-f4da-4f49-b0d5-a34e767cfaa7","id":"xFwNaVdqhh23"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-2bace824-a143-488f-83e6-6e8742d843e2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2bace824-a143-488f-83e6-6e8742d843e2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2bace824-a143-488f-83e6-6e8742d843e2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2bace824-a143-488f-83e6-6e8742d843e2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1efa1527-b367-4597-8948-75e5c04c5d71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1efa1527-b367-4597-8948-75e5c04c5d71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1efa1527-b367-4597-8948-75e5c04c5d71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5e23e731-7cd2-4e2a-92e4-b0ff9b89aef7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5e23e731-7cd2-4e2a-92e4-b0ff9b89aef7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":153}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"sQAHk55Ahh23"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"hfpPmOE7hh24"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117526447,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"6241f962-fe74-4cfe-a3dc-6b0a9219e2ab","id":"CcsZ1BNshh24"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'defence', 'growth'], dtype=object))"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117526447,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d0693806-afac-46f1-fdce-df78770cf6fd","id":"UH6Xr5aYhh24"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-142185d3-c221-40c7-aabc-294472d2039e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-142185d3-c221-40c7-aabc-294472d2039e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-142185d3-c221-40c7-aabc-294472d2039e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-142185d3-c221-40c7-aabc-294472d2039e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f43220ff-d037-4b7a-8a91-0fa10f73ccd6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f43220ff-d037-4b7a-8a91-0fa10f73ccd6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f43220ff-d037-4b7a-8a91-0fa10f73ccd6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a09b95aa-6a6f-4cf8-969e-d889ead485b5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a09b95aa-6a6f-4cf8-969e-d889ead485b5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":157}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117527571,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1f2a5e00-4885-42c4-c194-3ad9d80dbae2","id":"Ko1vA2OBhh24"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[474,   7,   6,  13],\n","       [  1, 496,   2,   1],\n","       [  3,  17, 473,   7],\n","       [  1,   7,  25, 467]])"]},"metadata":{},"execution_count":158}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1706117527572,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"25a0a67c-f2db-4ba8-9848-30ab3a589587","id":"t6491Zrphh24"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAlEAAAGwCAYAAACJjDBkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABfoklEQVR4nO3dd1gU1/oH8O/Q6yIggihFRREUu0mwRIwFW671aoyJmJhyVaIolvizgSZiLNFoLIlJRHM11miMmigxYkFjxwqoqLGB2KhKcff8/uC6yQZQdhZYlv1+nmeexzlzZubdYd1995wzZyQhhAARERERacVE3wEQERERGSImUUREREQyMIkiIiIikoFJFBEREZEMTKKIiIiIZGASRURERCQDkygiIiIiGcz0HQBVPiqVCnfu3IG9vT0kSdJ3OEREpCUhBLKysuDu7g4Tk/JrL8nNzUV+fr7Ox7GwsICVlVUZRFSxmERREXfu3IGHh4e+wyAiIh3dvHkTtWvXLpdj5+bmoo6XHVLTlDofy83NDdeuXTO4RIpJFBVhb28PAPjjWHXY2bHHtyJ81KS9vkMwOkLFhzVUJBMLft1UpKeiAAfytqo/z8tDfn4+UtOU+POkNxT28r8rMrNU8Gp5Hfn5+UyiyPA968KzszOBvQ7/Maj0zCRzfYdgdITEJKoimfA9rhcVMSTDzl6Cnb3886hguMNGmEQRERGRbEqhglKH3yRKoSq7YCoYkygiIiKSTQUBFeRnUbrsq2/sqyEiIiKSgS1RREREJJsKKujSIafb3vrFJIqIiIhkUwoBpZDfJafLvvrG7jwiIiIiGdgSRURERLIZ88ByJlFEREQkmwoCSiNNotidR0RERCQDW6KIiIhINnbnEREREcnAu/OIiIiISCtsiSIiIiLZVP9bdNnfUDGJIiIiItmUOt6dp8u++sYkioiIiGRTisJFl/0NFcdEEREREcnAligiIiKSjWOiiIiIiGRQQYISkk77Gyp25xERERHJwJYoIiIikk0lChdd9jdUTKKIiIhINqWO3Xm67Ktv7M4jIiIikoEtUURERCSbMbdEMYkiIiIi2VRCgkrocHeeDvvqG7vziIiIiGRgSxQRERHJxu48IiIiIhmUMIFSh44tZRnGUtGYRBEREZFsQscxUYJjooiIiIiMC1uiiIiISDaOiSIiIiKSQSlMoBQ6jIky4Me+sDuPiIiISAa2RBEREZFsKkhQ6dAmo4LhNkUxiSIiIiLZjHlMFLvziIiIiGRgSxQRERHJpvvAcnbnERERkREqHBOlwwOI2Z1HREREZFzYEkUGZdfS2tjymTc6v3sbgyOu4f5NS0xq27rYuv9ZloDWvR5olGU/MkNEcHM8SrXEknNHYONgyE9t0p/Vcefg6pFfpPzn1S5YOs1TDxFVfc5u+Rj+f7fRumMmLK1VuHPdEgvGeeHyWVt9h2bwGrfOxIAPUuDTOAfOrgWY+WF9HIlxUm8fMuYWOvR6AJea+SgokHDlvC1Wz/dA0hk7PUZdeah0fHYe784zctevX0edOnVw+vRpNGvWDLGxsejYsSMePXqEatWq6Tu8KuPaGTvsX+eG2n456jIn9zx8fuKoRr3969zw61e1ENDxUZFjrJpQH7X9cvAo1bLc463KRr/eECamf617+z5B1LrLOLjTUX9BVWF2Dk/x+dZLOHvYDlPf9kH6AzPUqpOH7Ax+hJcFKxsVribYYM8mF0xbcbnI9tvXrLAswhupNyxhYaVC33dT8emaRAzv2BQZD831EHHlwjFRVKbatGmDlJQUODg4lOt5jClZy80xwcrRvgiZcxk7lvzV0mFiCjjUKNCoe2q3M1r3ug8rW5VG+b7v3fAk0wyvj7mBc/ucQPL984tj4MhU3LluibN/8Jd5eRg48i7u3zHHgnBvddndm/whUFZO7K+GE/urlbg9dnt1jfWVn3qi26B7qNPwMeIPl+/nvCFQwcRo54nimKhyYGFhATc3N0iS4Q6Wq2zWTq2HJq89hH/7jOfWu37WFjcv2KH9oLsa5XcuWePnRZ4YvvASJL7ry5SZuQqv9X2A3RucAQMeIFqZvdIlA5fO2mLKiqvYEH8WS39NQPc37+s7LKNkZq5C9zfuITvTFFcTbPQdDukZv060oFKpMHfuXPj4+MDS0hKenp749NNPi9SLjY2FJElIT08HAERHR6NatWrYsWMHfH19YWNjgwEDBuDx48dYvXo1vL294ejoiNGjR0Op/GuMzvfff49WrVrB3t4ebm5uePPNN5GWlgagsAuxY8eOAABHR0dIkoRhw4ap44yKikKdOnVgbW2Npk2bYvPmzSW+rry8PGRmZmoslcnR7dXx53k79J90/YV1D25wQ02fx/BplaUuK8iT8NVHDfHvKdfgXCuvHCM1ToHB6bBTKBGz2VnfoVRZNT3z0Ovte7hzzRL/N8QHO753wYiZN9F5wIMX70xl4qXXHuHHc8fxU8Jx9Hk3BVOGNkTmI3blAYBSSDovhordeVqYPHkyVq5ciYULF6Jdu3ZISUlBYmJiqfZ9/PgxFi9ejPXr1yMrKwv9+vVD3759Ua1aNezatQtXr15F//790bZtWwwaNAgAUFBQgFmzZsHX1xdpaWkYN24chg0bhl27dsHDwwNbtmxB//79kZSUBIVCAWtrawBAVFQU/vvf/2LFihWoX78+Dhw4gLfeegsuLi7o0KFDkdiioqIQGRlZdheqDD28Y4H1EXUxbu15mFs9v8k3P9cER39yweujb2qUb/nMGzV9HiOw373yDNVodRv0AMdjHfDwroW+Q6myJBPg8lkbrPqsFgAg+YINvH2foOfb9/Ebk9cKceaIAqN6BcDBsQDd3riHyUuuIKxfI2Q8YCKl1HFgudKAu/OYRJVSVlYWvvjiC3z55ZcICQkBANSrVw/t2rXD9evXX7h/QUEBli9fjnr16gEABgwYgO+//x53796FnZ0d/P390bFjR+zbt0+dRL377rvq/evWrYvFixejdevWyM7Ohp2dHZycCsf11KhRQz0mKi8vD7Nnz8Zvv/2GwMBA9b6HDh3CV199VWwSNXnyZIwbN069npmZCQ8PD+0vUjm4fs4OmfctMLNHc3WZSinh0lEFfl/tjq+uxKkHOJ/Y6Yz8JyZo01+zKy/xsANuJdri/V2F4xqejWEc0+wV9Ay9iT7hNyrktVRFNWrloVm7TMz6oJ6+Q6nSHqaZ48/LVhplNy9boV2PdP0EZITynpgi5U9TpPxphcR4e3zzezyCB6Zh4/Ja+g6N9IhJVCklJCQgLy8PnTp1krW/jY2NOoECAFdXV3h7e8POzk6j7Fl3HQCcPHkSEREROHPmDB49egSVqnCg9I0bN+Dv71/sea5cuYLHjx+jS5cuGuX5+flo3rx5sftYWlrC0rJyDlL1a5uByJhTGmWrwuvDrd4TdB95S+MOsUMb3NCs80PYOz/VqD9yRSLy8/76lXT9jB1WjW+ASZvPooZXbrnGX9V1HfgAGQ/McOx3Dq4tTxdP2MKjruZ7tVbdPKTdYuufvphIgLmF4baglCWVMIFKh7vzVLw7r+p71lUml7m5ZpOvJEnFlj1LlHJychAcHIzg4GCsXbsWLi4uuHHjBoKDg5GfX3R+nmeys7MBADt37kStWpq/kCprovQ81nZK1PZ9rFFmaaOCnWOBRvnd61a4dFSBMasvFDlGDW/NL5/s/91Z5u7zmPNE6UCSBLr8+wFiNjtDpTTcMQ2G4MeVNbBwWxLeCE3FgR3V4NvsMXoMuY9FkzgnV1mwslHC/W8/qFw98lDXLwdZGWbIfGSGN0bdwdHfquFhmgUUTk/x+tt34eyWj4O7eJcvwO48KoX69evD2toae/fuxXvvvVfu50tMTMSDBw8wZ84cddfaiRMnNOpYWBT+Cv37YHR/f39YWlrixo0bxXbdVVWHNrjCsWYeGr2aru9QjEbzdllwrZ2PPRuqv7gy6eTSGVvMfK8e3pl8G0PCUpB60wIrImpj31Z+iZeF+gE5mPtDgnr9w6mFXfwxm6tjydQ68Kj3BJ373YOD41Nkppvh0llbTBjkjxuXeXeesWMSVUpWVlaYNGkSJk6cCAsLC7Rt2xb37t3DhQsXZHfxPY+npycsLCywZMkS/Oc//8H58+cxa9YsjTpeXl6QJAk7duxAjx49YG1tDXt7e4wfPx5jx46FSqVCu3btkJGRgbi4OCgUCvV4LkM2ceO5ImX9J/2J/pP+LNX+DQMz8O2NQ2UdltE5dVCBbp4t9R2G0Ti61wFH97LbtDycO6pA97ovl7j9kxENKjAaw6MCdLrDTvXiKpUWpzjQwrRp0xAeHo7p06fDz88PgwYN0hjDVJZcXFwQHR2NTZs2wd/fH3PmzMH8+fM16tSqVQuRkZH4+OOP4erqitDQUADArFmzMG3aNERFRcHPzw/dunXDzp07UadOnXKJlYiIjNezyTZ1WQyVJIQBj+iicpGZmQkHBwecv1gD9vaG++Y2JO/VDdJ3CEZHqPjRV5FMLDgVQEV6KvLxe+5GZGRkQKFQlMs5nn1XLD/VGtZ28ju2nmQ/xYgWx8s11vLC7jwiIiKSTfdn5xnuj3UmUURERCSbChJUOjzySZd99Y1JFBEREclmzC1Rhhs5ERERkR6xJYqIiIhk032yTcNtz2ESRURERLKphASVLvNE6bCvvhlu+kdERESkR2yJIiIiItlUOnbnGfJkm0yiiIiISDaVMIFKhzvsdNlX3ww3ciIiIiI9YksUERERyaaEBKUOE2bqsq++MYkiIiIi2didR0RERERaYUsUERERyaaEbl1yyrILpcKxJYqIiIhke9adp8uiizlz5kCSJISFhanLcnNzMWrUKDg7O8POzg79+/fH3bt3Nfa7ceMGevbsCRsbG9SoUQMTJkzA06dPtTo3kygiIiKS7dkDiHVZ5Dp+/Di++uorNGnSRKN87Nix+Pnnn7Fp0ybs378fd+7cQb9+/f6KWalEz549kZ+fj8OHD2P16tWIjo7G9OnTtTo/kygiIiIyONnZ2RgyZAhWrlwJR0dHdXlGRga+/fZbfP7553jttdfQsmVLrFq1CocPH8Yff/wBANizZw8uXryI//73v2jWrBm6d++OWbNmYenSpcjPzy91DEyiiIiISDYBCSodFvG/8VSZmZkaS15e3nPPO2rUKPTs2ROdO3fWKD958iQKCgo0yhs2bAhPT08cOXIEAHDkyBEEBATA1dVVXSc4OBiZmZm4cOFCqV87B5YTERGRbLp2yT3b18PDQ6N8xowZiIiIKHaf9evX49SpUzh+/HiRbampqbCwsEC1atU0yl1dXZGamqqu8/cE6tn2Z9tKi0kUERER6d3NmzehUCjU65aWliXWGzNmDGJiYmBlZVVR4RWL3XlEREQkm0pIOi8AoFAoNJaSkqiTJ08iLS0NLVq0gJmZGczMzLB//34sXrwYZmZmcHV1RX5+PtLT0zX2u3v3Ltzc3AAAbm5uRe7We7b+rE5pMIkiIiIi2ZQw0XnRRqdOnXDu3DnEx8erl1atWmHIkCHqf5ubm2Pv3r3qfZKSknDjxg0EBgYCAAIDA3Hu3DmkpaWp68TExEChUMDf37/UsbA7j4iIiAyGvb09GjdurFFma2sLZ2dndfnw4cMxbtw4ODk5QaFQ4KOPPkJgYCBeeeUVAEDXrl3h7++Pt99+G3PnzkVqaiqmTp2KUaNGldgCVhwmUURERCTb37vk5O5f1hYuXAgTExP0798feXl5CA4OxrJly9TbTU1NsWPHDowYMQKBgYGwtbVFSEgIZs6cqdV5mEQRERGRbCqYQKXD6CBd9n0mNjZWY93KygpLly7F0qVLS9zHy8sLu3bt0um8HBNFREREJANbooiIiEg2pZCg1KFLTpd99Y1JFBEREclWGcdEVRQmUURERCSbECZQ6TBjudBhX30z3MiJiIiI9IgtUURERCSbEhKU0GFMlA776huTKCIiIpJNJXQb16QSZRhMBWN3HhEREZEMbIkiIiIi2VQ6DizXZV99YxJFREREsqkgQaXDuCZd9tU3w03/iIiIiPSILVFEREQkG2csJyIiIpKBY6KIihHqHwgzyVzfYRiF3XdO6DsEoxPs3kzfIRgVVa5S3yEYFZUo0HcIRoFJFBEREcmmgo7PzjPggeVMooiIiEg2oePdeYJJFBERERkjldCxJcqAB5Yb7mguIiIiIj1iSxQRERHJxrvziIiIiGRgdx4RERERaYUtUURERCSbMT87j0kUERERycbuPCIiIiLSCluiiIiISDZjboliEkVERESyGXMSxe48IiIiIhnYEkVERESyGXNLFJMoIiIikk1At2kKRNmFUuGYRBEREZFsxtwSxTFRRERERDKwJYqIiIhkM+aWKCZRREREJJsxJ1HsziMiIiKSgS1RREREJJsxt0QxiSIiIiLZhJAgdEiEdNlX39idR0RERCQDW6KIiIhINhUknSbb1GVffWMSRURERLIZ85goducRERERycCWKCIiIpLNmAeWM4kiIiIi2Yy5O49JFBEREclmzC1RHBNFREREJANbooiIiEg2oWN3niG3RDGJIiIiItkEACF0299QsTuPiIiISAa2RBEREZFsKkiQOGM5ERERkXZ4dx4RERERaYUtUURERCSbSkiQONkmERERkXaE0PHuPAO+PY/deUREREQysCWKiIiIZDPmgeVMooiIiEg2Y06i2J2npaCgIISFhZW6/rZt2+Dj4wNTU1Ot9iPtNH45G5Grr2HdqQvYfecMArtl6DukKmHDkhoIdm+G5dNrqcvuXLdA5LveGNi4Mfo2CMAnH3rh0b2iv8eO/qbA6J718XrdJujv1xgR79SpyNCrlEGhd7F41yVsvXQOG85ewIzvrqF2vVx9h1Wl8TOl9FT/e+yLLouhYhJVzj788EMMGDAAN2/exKxZs/QdTpVlZaPC1QtW+PL/aus7lCojKd4aO//rjDr+T9RluY9N8H+D60GSgM82XcHnP13G03wTTA+pA5Xqr30P7nTA3NGe6DroIZbHJOHzny6jY99HengVVUOTwBz8HF0dYb3qY/IbdWFqJjD7h6uwtFbqO7Qqi58pVBrszitH2dnZSEtLQ3BwMNzd3fUdTpV2Yp8CJ/Yp9B1GlfEkxwSfhXohbN5N/PCFm7r8wjFb3L1pgaV7kmBrX5g1TfjiT/T3C0D8ITu0eDUbyqfAium18P7UO+j25kP1vl4N8ir8dVQVU4bU1VhfEOaJjecvoH6TJzh/1E5PUVVt/EwpPd6dR8XKycnB0KFDYWdnh5o1a2LBggUa2/Py8jB+/HjUqlULtra2ePnllxEbGwsAiI2Nhb29PQDgtddegyRJ6m2HDh1C+/btYW1tDQ8PD4wePRo5OTnq43p7e2P27Nl49913YW9vD09PT3z99dca57516xYGDx4MJycn2NraolWrVjh69Kh6+08//YQWLVrAysoKdevWRWRkJJ4+fVoOV4mqoi//rzZe6pSJFq9ma5QX5EuABJhb/PWpZ24pIJkAF44VfplfPmeD+ykWkEyAkV0aYHCzRpgypC6uJ1pV6GuoymwVhS1QWemmeo6E6FkSJemw6PsVyMck6jkmTJiA/fv346effsKePXsQGxuLU6dOqbeHhobiyJEjWL9+Pc6ePYt///vf6NatGy5fvow2bdogKSkJALBlyxakpKSgTZs2SE5ORrdu3dC/f3+cPXsWGzZswKFDhxAaGqpx7gULFqBVq1Y4ffo0Ro4ciREjRqiPl52djQ4dOuD27dvYvn07zpw5g4kTJ0L1v/6UgwcPYujQoRgzZgwuXryIr776CtHR0fj000+LfZ15eXnIzMzUWMh4xW6rhivnrPHu5JQi2xq2zIGVjQrffuqO3McSch+bYOVMd6iUEh6mFTZsp/5pAQD47wI3DA67i5lrrsLOQYkJ/X2Q+Yhf+rqSJIH/RN7G+WM2+DPJWt/hEBk1JlElyM7Oxrfffov58+ejU6dOCAgIwOrVq9WtOTdu3MCqVauwadMmtG/fHvXq1cP48ePRrl07rFq1ChYWFqhRowYAwMnJCW5ubrCwsEBUVBSGDBmCsLAw1K9fH23atMHixYuxZs0a5Ob+NVC0R48eGDlyJHx8fDBp0iRUr14d+/btAwCsW7cO9+7dw7Zt29CuXTv4+Phg4MCBCAwMBABERkbi448/RkhICOrWrYsuXbpg1qxZ+Oqrr4p9rVFRUXBwcFAvHh4e5XlpqRJLu22O5dNrYdKXf8LCqujPw2rOSkz96jqOxijQp34T9PUNQE6mKXwCHkP636fJs7FRg8fcRfueGajf5AnCF96AJAEHd1SruBdTRYXOvg2vhrmIGuGl71CIAOjaCqXbnX36xjFRJUhOTkZ+fj5efvlldZmTkxN8fX0BAOfOnYNSqUSDBg009svLy4Ozs3OJxz1z5gzOnj2LtWvXqsuEEFCpVLh27Rr8/PwAAE2aNFFvlyQJbm5uSEtLAwDEx8ejefPmcHJyKvEccXFxGi1PSqUSubm5ePz4MWxsbDTqT548GePGjVOvZ2ZmMpEyUlfO2iD9vjlGBfuqy1RKCef+sMX2VdWx4/oZtAzKQvSRBGQ8MIWpGWDnoMQbTRuhpmfhmCcn18IfGp71//pRYGEp4OaVh7Tb5hX7gqqYUZ/ewstdMhHetx7up1joOxwiAID436LL/oaKSZRM2dnZMDU1xcmTJ2FqqtlFYWdX8kDP7OxsfPjhhxg9enSRbZ6enup/m5trftlIkqTurrO2fn4TfnZ2NiIjI9GvX78i26ysio5LsbS0hKWl5XOPScahWfssfPV7okbZgrGe8PDJxcBRafj7W93BuXBcTvwhO6TfN8MrXQu7ges3eQxzSxVuJVui8cuFY/2eFgB3b1rAtXZBxbyQKkdg1Ke30aZbBiYM8MHdm/z/SlQZMIkqQb169WBubo6jR4+qk5tHjx7h0qVL6NChA5o3bw6lUom0tDS0b9++1Mdt0aIFLl68CB8fH9mxNWnSBN988w0ePnxYbGtUixYtkJSUpNM5DI2VjRLudfLV624e+ajb6Amy0k1x7zZ/sZeWjZ0K3g015x+yslHB3lGpLt+93gme9XPh4PwUCSdtsXx6LfT94B48fApbomztVej59gN8v8ANLu4FqFE7H5uXF3Ztt++VXqGvp6oInX0bHfs+QsQ7dfAk2wSOLoXJaE6WKfJzOSqjPPAzpfQ42SYVYWdnh+HDh2PChAn4/fffcf78eQwbNgwmJoWXrEGDBhgyZAiGDh2KH3/8EdeuXcOxY8cQFRWFnTt3lnjcSZMm4fDhwwgNDUV8fDwuX76Mn376qcjA8ucZPHgw3Nzc0KdPH8TFxeHq1avYsmULjhw5AgCYPn061qxZg8jISFy4cAEJCQlYv349pk6dqttFqcQaNH2C5TGXsDzmEgDgP5F3sDzmEoaOT9VzZFXPrWRLRL5bB+93aIi1C10xePRdfDD9jkad96fdRod/pWPuaE+M7tEAd29Z4LNNybCvxnmN5Hh92APYOagw/8dkrD9zUb10+Fe6vkOrsviZogVRBosWli9fjiZNmkChUEChUCAwMBC//PKLentubi5GjRoFZ2dn2NnZoX///rh7967GMW7cuIGePXvCxsYGNWrUwIQJE2Tdwc6WqOeYN28esrOz8frrr8Pe3h7h4eHIyPhr1tpVq1bhk08+QXh4OG7fvo3q1avjlVdeQa9evUo8ZpMmTbB//35MmTIF7du3hxAC9erVw6BBg0odl4WFBfbs2YPw8HD06NEDT58+hb+/P5YuXQoACA4Oxo4dOzBz5kx89tlnMDc3R8OGDfHee+/JvxiV3Nkjdgh2b6rvMKqkeVuuaKwPn5KC4VOK3rn3d2bmwAcz7uCDGXeeW49Kh+/tisfPFC3oOjhcy31r166NOXPmoH79+hBCYPXq1ejduzdOnz6NRo0aYezYsdi5cyc2bdoEBwcHhIaGol+/foiLiwNQOEa4Z8+ecHNzw+HDh5GSkoKhQ4fC3Nwcs2fP1ioWSQhDnqGBykNmZiYcHBwQhN4wkzgQuCLsvhOv7xCMTrB7M32HQFRunooCxOInZGRkQKEon0lDn31X1I2eAhMb+fPAqR7n4uqwT3Hz5k2NWLUZr+vk5IR58+ZhwIABcHFxwbp16zBgwAAAQGJiIvz8/HDkyBG88sor+OWXX9CrVy/cuXMHrq6uAIAVK1Zg0qRJuHfvHiwsSt9dy+48IiIiku3ZjOW6LADg4eGhMd1OVFTUC8+tVCqxfv165OTkIDAwECdPnkRBQQE6d+6srtOwYUN4enqqh7wcOXIEAQEB6gQKKOzByczMxIULF7R67ezOIyIiItnKamB5cS1RJTl37hwCAwORm5sLOzs7bN26Ff7+/oiPj4eFhQWqVaumUd/V1RWpqYXj2VJTUzUSqGfbn23TBpMoIiIi0rtnA8VLw9fXF/Hx8cjIyMDmzZsREhKC/fv3l3OERTGJIiIiIvmEpPXg8CL7a8nCwkI9jU/Lli1x/PhxfPHFFxg0aBDy8/ORnp6u0Rp19+5duLkVPkzdzc0Nx44d0zjes7v3ntUpLY6JIiIiItnKakyULlQqFfLy8tCyZUuYm5tj79696m1JSUm4ceOG+tFogYGBOHfunPopIAAQExMDhUIBf39/rc7LligiIiIyGJMnT0b37t3h6emJrKwsrFu3DrGxsdi9ezccHBwwfPhwjBs3Dk5OTlAoFPjoo48QGBiIV155BQDQtWtX+Pv74+2338bcuXORmpqKqVOnYtSoUVo/vYNJFBEREclXwQ/PS0tLw9ChQ5GSkgIHBwc0adIEu3fvRpcuXQAACxcuhImJCfr374+8vDwEBwdj2bJl6v1NTU2xY8cOjBgxAoGBgbC1tUVISAhmzpypdehMooiIiEi2in7sy7fffvvc7VZWVli6dKl6AurieHl5YdeuXVqdtzilSqK2b99e6gP+61//kh0MERERkaEoVRLVp0+fUh1MkiQolXw2FhERkVEx0meflCqJUqlU5R0HERERGaCK7s6rTHSa4iA3N7es4iAiIiJDJMpgMVBaJ1FKpRKzZs1CrVq1YGdnh6tXrwIApk2b9sLBXkRERERVhdZJ1Kefforo6GjMnTtX40nHjRs3xjfffFOmwREREVFlJ5XBYpi0TqLWrFmDr7/+GkOGDIGpqam6vGnTpkhMTCzT4IiIiKiSY3de6d2+fVv9vJq/U6lUKCgoKJOgiIiIiCo7rZMof39/HDx4sEj55s2b0bx58zIJioiIiAyEEbdEaT1j+fTp0xESEoLbt29DpVLhxx9/RFJSEtasWYMdO3aUR4xERERUWQmpcNFlfwOldUtU79698fPPP+O3336Dra0tpk+fjoSEBPz888/q59YQERERVXWynp3Xvn17xMTElHUsREREZGCEKFx02d9QyX4A8YkTJ5CQkACgcJxUy5YtyywoIiIiMhC6jmsypiTq1q1bGDx4MOLi4lCtWjUAQHp6Otq0aYP169ejdu3aZR0jERERUaWj9Zio9957DwUFBUhISMDDhw/x8OFDJCQkQKVS4b333iuPGImIiKiyejawXJfFQGndErV//34cPnwYvr6+6jJfX18sWbIE7du3L9PgiIiIqHKTROGiy/6GSuskysPDo9hJNZVKJdzd3cskKCIiIjIQRjwmSuvuvHnz5uGjjz7CiRMn1GUnTpzAmDFjMH/+/DINjoiIiKiyKlVLlKOjIyTprz7LnJwcvPzyyzAzK9z96dOnMDMzw7vvvos+ffqUS6BERERUCRnxZJulSqIWLVpUzmEQERGRQTLi7rxSJVEhISHlHQcRERGRQZE92SYA5ObmIj8/X6NMoVDoFBAREREZECNuidJ6YHlOTg5CQ0NRo0YN2NrawtHRUWMhIiIiIyLKYDFQWidREydOxO+//47ly5fD0tIS33zzDSIjI+Hu7o41a9aUR4xERERElY7W3Xk///wz1qxZg6CgILzzzjto3749fHx84OXlhbVr12LIkCHlEScRERFVRkZ8d57WLVEPHz5E3bp1ARSOf3r48CEAoF27djhw4EDZRkdERESV2rMZy3VZDJXWSVTdunVx7do1AEDDhg2xceNGAIUtVM8eSExERERU1WmdRL3zzjs4c+YMAODjjz/G0qVLYWVlhbFjx2LChAllHiARERFVYkY8sFzrMVFjx45V/7tz585ITEzEyZMn4ePjgyZNmpRpcERERESVlU7zRAGAl5cXvLy8yiIWIiIiMjASdBvXZLjDykuZRC1evLjUBxw9erTsYIiIiIgMRamSqIULF5bqYJIkMYmqSiSpcKFy171+W32HYHS+vbFb3yEYlffqBuk7BKMiCQE8raCTGfEUB6VKop7djUdERESkgY99ISIiIiJt6DywnIiIiIyYEbdEMYkiIiIi2XSdddyoZiwnIiIiIrZEERERkS6MuDtPVkvUwYMH8dZbbyEwMBC3b98GAHz//fc4dOhQmQZHRERElZwRP/ZF6yRqy5YtCA4OhrW1NU6fPo28vDwAQEZGBmbPnl3mARIRERFVRlonUZ988glWrFiBlStXwtzcXF3etm1bnDp1qkyDIyIiosrt2cByXRZDpfWYqKSkJLz66qtFyh0cHJCenl4WMREREZGhMOIZy7VuiXJzc8OVK1eKlB86dAh169Ytk6CIiIjIQHBMVOm9//77GDNmDI4ePQpJknDnzh2sXbsW48ePx4gRI8ojRiIiIqJKR+vuvI8//hgqlQqdOnXC48eP8eqrr8LS0hLjx4/HRx99VB4xEhERUSVlzJNtap1ESZKEKVOmYMKECbhy5Qqys7Ph7+8POzu78oiPiIiIKjMjnidK9mSbFhYW8Pf3L8tYiIiIiAyG1klUx44dIUklj6T//fffdQqIiIiIDIiu0xQYU0tUs2bNNNYLCgoQHx+P8+fPIyQkpKziIiIiIkPA7rzSW7hwYbHlERERyM7O1jkgIiIiIkMg69l5xXnrrbfw3XffldXhiIiIyBAY8TxRsgeW/9ORI0dgZWVVVocjIiIiA8ApDrTQr18/jXUhBFJSUnDixAlMmzatzAIjIiIiqsy0TqIcHBw01k1MTODr64uZM2eia9euZRYYERERUWWmVRKlVCrxzjvvICAgAI6OjuUVExERERkKI747T6uB5aampujatSvS09PLKRwiIiIyJM/GROmyGCqt785r3Lgxrl69Wh6xEBERERkMrZOoTz75BOPHj8eOHTuQkpKCzMxMjYWIiIiMjBFObwBoMSZq5syZCA8PR48ePQAA//rXvzQe/yKEgCRJUCqVZR8lERERVU5GPCaq1ElUZGQk/vOf/2Dfvn3lGQ8RERGRQSh1EiVEYarYoUOHcguGiIiIDAsn2yylv3ffEREREbE7r5QaNGjwwkTq4cOHOgVEREREZAi0SqIiIyOLzFhORERExovdeaX0xhtvoEaNGuUVCxERERmaCu7Oi4qKwo8//ojExERYW1ujTZs2+Oyzz+Dr66uuk5ubi/DwcKxfvx55eXkIDg7GsmXL4Orqqq5z48YNjBgxAvv27YOdnR1CQkIQFRUFM7PSp0alnieK46GIiIhI3/bv349Ro0bhjz/+QExMDAoKCtC1a1fk5OSo64wdOxY///wzNm3ahP379+POnTvo16+fertSqUTPnj2Rn5+Pw4cPY/Xq1YiOjsb06dO1ikXru/OIiIiI1MqoJeqfE3ZbWlrC0tKySPVff/1VYz06Oho1atTAyZMn8eqrryIjIwPffvst1q1bh9deew0AsGrVKvj5+eGPP/7AK6+8gj179uDixYv47bff4OrqimbNmmHWrFmYNGkSIiIiYGFhUarQS90SpVKp2JVHREREGsrq2XkeHh5wcHBQL1FRUaU6f0ZGBgDAyckJAHDy5EkUFBSgc+fO6joNGzaEp6cnjhw5AgA4cuQIAgICNLr3goODkZmZiQsXLpT6tWs1JoqIiIhIQxm1RN28eRMKhUJdXFwr1D+pVCqEhYWhbdu2aNy4MQAgNTUVFhYWqFatmkZdV1dXpKamquv8PYF6tv3ZttJiEkVERER6p1AoNJKo0hg1ahTOnz+PQ4cOlVNUz6f1A4iJiIiI1HR5+LAOrVihoaHYsWMH9u3bh9q1a6vL3dzckJ+fj/T0dI36d+/ehZubm7rO3bt3i2x/tq20mEQRERGRbGU1Jqq0hBAIDQ3F1q1b8fvvv6NOnToa21u2bAlzc3Ps3btXXZaUlIQbN24gMDAQABAYGIhz584hLS1NXScmJgYKhQL+/v6ljoXdeWTweg29j55v34erRz4A4M9LVli70A0n9mnXLEwla9w6AwPeuwOfRtlwdi3AzBG+OPKbs3r7L5cPF7vfN595Ycs3tSoqzCph19La2PKZNzq/exuDI67h/k1LTGrbuti6/1mWgNa9HiD7kRlWjvbFzQQb5KSbw965AM27PkC/iX/C2l5Zwa/A8K2OO6f+PPm7n1e7YOk0Tz1ERH83atQorFu3Dj/99BPs7e3VY5gcHBxgbW0NBwcHDB8+HOPGjYOTkxMUCgU++ugjBAYG4pVXXgEAdO3aFf7+/nj77bcxd+5cpKamYurUqRg1alSpxmI9wySqCpIkCVu3bkWfPn30HUqFuJdiju+i3HH7miUkSaDLvx8h4rtrGBXcAH9estZ3eFWClbUKVxNtsWdzDUxbllRk+5uBrTTWW3V4hLDZyYjb7VykLpXs2hk77F/nhtp+f8134+Seh89PHNWot3+dG379qhYCOj4CAEiSQLOuD9B3/J+wcy5A2nUrrJ1WDznpZvhgyaUKfQ1VwejXG8LE9K91b98niFp3GQd3OuovqMqsgifbXL58OQAgKChIo3zVqlUYNmwYAGDhwoUwMTFB//79NSbbfMbU1BQ7duzAiBEjEBgYCFtbW4SEhGDmzJlaxcIkyoBFRERg27ZtiI+P13coenU0RvNRRNGf1USvt++jYYvHTKLKyIkDjjhxoOQvkEf3NedUeaXTI5z9wwGpN63KO7QqIzfHBCtH+yJkzmXsWPJXa4eJKeBQo0Cj7qndzmjd6z6sbFUAANtqSnR8+687iqrXzkPHt1Pw61e1QdrLeGiusT5wZCruXLfE2T/s9BRR5VbRj30pzbyVVlZWWLp0KZYuXVpiHS8vL+zatUu7k/8Dx0RVkPz8ok3DVPZMTAQ6/OsRLG1USDhpq+9wjFI153y8FPQIuzdzXjltrJ1aD01eewj/9hnPrXf9rC1uXrBD+0F3S6zzKNUCp36tDt9Xnn8sejEzcxVe6/sAuzc4A+CTO0gTkyiZsrKyMGTIENja2qJmzZpYuHAhgoKCEBYWBgDw9vbGrFmzMHToUCgUCnzwwQcAgC1btqBRo0awtLSEt7c3FixYoD7ml19+qZ7nAgC2bdsGSZKwYsUKdVnnzp0xdepUREdHIzIyEmfOnIEkSZAkCdHR0ep69+/fR9++fWFjY4P69etj+/btJb6WvLw8ZGZmaiyGxrvhE2y7dBY7rp3B6Dk3MfO9Orhxma0g+tC53z08yTFlV54Wjm6vjj/P26H/pOsvrHtwgxtq+jyGT6usItu+CvXFiAaBGP/SS7Cye4phn10uh2iNS2BwOuwUSsRs5vu5RHq6O68yYBIl07hx4xAXF4ft27cjJiYGBw8exKlTpzTqzJ8/H02bNsXp06cxbdo0nDx5EgMHDsQbb7yBc+fOISIiAtOmTVMnPx06dMDFixdx7949AIXPB6pevTpiY2MBAAUFBThy5AiCgoIwaNAghIeHo1GjRkhJSUFKSgoGDRqkPndkZCQGDhyIs2fPokePHhgyZAgePnxY7GuJiorSmCXWw8Oj7C9YObuVbImRXX0xulcD7FhTHeMX/QnP+rn6Dssode2fhn3bq6Mgnx8vpfHwjgXWR9TF+4uTYG71/G+T/FwTHP3JBe3fKL4V6o3pVzF9Vzw++uYi7v1phfWz6pZHyEal26AHOB7rgId3S/cYEKPEJIq0kZWVhdWrV2P+/Pno1KkTGjdujFWrVkGp1LwL5rXXXkN4eDjq1auHevXq4fPPP0enTp0wbdo0NGjQAMOGDUNoaCjmzZsHAGjcuDGcnJywf/9+AEBsbCzCw8PV68eOHUNBQQHatGkDa2tr2NnZwczMDG5ubnBzc4O19V/jf4YNG4bBgwfDx8cHs2fPRnZ2No4dO1bs65k8eTIyMjLUy82bN8vjspWrpwUmuHPdElfO2WDVHHdcu2iNPu/d03dYRqdRq0x41HuCXze5vrgyAQCun7ND5n0LzOzRHO/XaYv367RF0h8O2LvKHe/XaQvV3z5WTux0Rv4TE7TpX3wS5VCjADV9nqBZ14cYGpWM2O9rIv2uebF16cVq1MpDs3aZ+PWH6voOhSopDiyX4erVqygoKMBLL72kLnNwcICvr69GvVatNO9YSkhIQO/evTXK2rZti0WLFkGpVMLU1BSvvvoqYmNj0blzZ1y8eBEjR47E3LlzkZiYiP3796N169awsbF5YYxNmjRR/9vW1hYKhUJjPoy/K+khj4ZMMgHMLVT6DsPoBP/7Li6ds8W1RI5HKy2/thmIjNFsxV4VXh9u9Z6g+8hbGneJHdrghmadH8Le+ekLj6v636/7p2wRlK3rwAfIeGCGY787vLiyEZOg22gxQx5pxiSqHNnaav9FEhQUhK+//hoHDx5E8+bNoVAo1InV/v370aFDh1Idx9xc89enJElQqapmUvHOx3dwfJ8C926bw9pOhY59HqFJYDamvFlP36FVGVY2Srh7/dU96lo7D3X9cpCVboZ7KYUJuI3dU7Tv9gAr53jrKUrDZG2nRG3fxxplljYq2DkWaJTfvW6FS0cVGLO66MNRz/7uiMz75vBumg0rGyVuX7LBpk/rwKdVBqp75JX7a6iKCqdLeYCYzc5QKQ35a74CVPAUB5UJkygZ6tatC3Nzcxw/fhyenoW3ImdkZODSpUt49dVXS9zPz88PcXFxGmVxcXFo0KABTE0Lf2526NABYWFh2LRpk3oOjKCgIPz222+Ii4tDeHi4el8LC4siXYjGqFr1p5jwxZ9wqvEUj7NMcS3BClPerIdTB+31HVqVUb9xNuau/evL+8Mp1wEAMT+64PNJ9QEAHXreByQg9md2fZSHQxtc4VgzD41eTS+yzcJKhQM/uGH9TBs8zZPg5J6PFt3uo8fIWxUfaBXRvF0WXGvnY88Gvp9fpKKnOKhMmETJYG9vj5CQEEyYMAFOTk6oUaMGZsyYARMTE0hSyb9YwsPD0bp1a8yaNQuDBg3CkSNH8OWXX2pMANakSRM4Ojpi3bp12LFjB4DCJGr8+PGQJAlt27ZV1/X29sa1a9cQHx+P2rVrw97evsp1y5XGwvGcQbi8nTvmgO712zy3zi8b3PDLhtI/c4pKNnHjuSJl/Sf9if6T/iy2fsM2Gfi/rWfLOyyjcuqgAt08W+o7DKrk2Fku0+eff47AwED06tULnTt3Rtu2beHn5wcrq5Jvq2/RogU2btyI9evXo3Hjxpg+fTpmzpypnmEVKOx2a9++PSRJQrt27QAUJlYKhQKtWrXS6CLs378/unXrho4dO8LFxQU//PBDub1eIiKiYhnx3XlsiZLJ3t4ea9euVa/n5OQgMjJSPR/U9evXi92vf//+6N+//3OPvW3bNo11ExOTYqcnsLS0xObNm4uUFzeb6z+fZk1ERFRmDDgR0gWTKJlOnz6NxMREvPTSS8jIyFA/b+efd98RERFR1cQkSgfz589HUlISLCws0LJlSxw8eBDVq3MQIhERGQ8OLCetNW/eHCdPntR3GERERPplxFMccGA5ERERkQxsiSIiIiLZ2J1HREREJAe784iIiIhIG2yJIiIiItnYnUdEREQkhxF35zGJIiIiIvmMOInimCgiIiIiGdgSRURERLJxTBQRERGRHOzOIyIiIiJtsCWKiIiIZJOEgCTkNyfpsq++MYkiIiIi+didR0RERETaYEsUERERyca784iIiIjkYHceEREREWmDLVFEREQkG7vziIiIiOQw4u48JlFEREQkmzG3RHFMFBEREZEMbIkiIiIi+didR0RERCSPIXfJ6YLdeUREREQysCWKiIiI5BOicNFlfwPFJIqIiIhk4915RERERKQVtkQRERGRfLw7j4iIiEh7kqpw0WV/Q8XuPCIiIiIZ2BJFRERE8rE7j4iIiEh7xnx3HpMoIiIiks+I54nimCgiIiIiGdgSRURERLKxO4+oOELX0YJUWiIvT98hGJ0Pmr6u7xCMytLkn/UdglHJzlKhRaMKOpkRDyxndx4RERGRDGyJIiIiItnYnUdEREQkB+/OIyIiIiJtsCWKiIiIZGN3HhEREZEcvDuPiIiIiLTBligiIiKSjd15RERERHKoROGiy/4GikkUERERyccxUURERESkDbZEERERkWwSdBwTVWaRVDwmUURERCQfZywnIiIiIm0wiSIiIiLZnk1xoMuijQMHDuD111+Hu7s7JEnCtm3bNLYLITB9+nTUrFkT1tbW6Ny5My5fvqxR5+HDhxgyZAgUCgWqVauG4cOHIzs7W+vXziSKiIiI5BNlsGghJycHTZs2xdKlS4vdPnfuXCxevBgrVqzA0aNHYWtri+DgYOTm5qrrDBkyBBcuXEBMTAx27NiBAwcO4IMPPtAuEHBMFBERERmQ7t27o3v37sVuE0Jg0aJFmDp1Knr37g0AWLNmDVxdXbFt2za88cYbSEhIwK+//orjx4+jVatWAIAlS5agR48emD9/Ptzd3UsdC1uiiIiISDZJCJ0XAMjMzNRY8vLytI7l2rVrSE1NRefOndVlDg4OePnll3HkyBEAwJEjR1CtWjV1AgUAnTt3homJCY4eParV+ZhEERERkXyqMlgAeHh4wMHBQb1ERUVpHUpqaioAwNXVVaPc1dVVvS01NRU1atTQ2G5mZgYnJyd1ndJidx4RERHp3c2bN6FQKNTrlpaWeoymdNgSRURERLKVVXeeQqHQWOQkUW5ubgCAu3fvapTfvXtXvc3NzQ1paWka258+fYqHDx+q65QWkygiIiKSr4LvznueOnXqwM3NDXv37lWXZWZm4ujRowgMDAQABAYGIj09HSdPnlTX+f3336FSqfDyyy9rdT525xEREZF8FTxjeXZ2Nq5cuaJev3btGuLj4+Hk5ARPT0+EhYXhk08+Qf369VGnTh1MmzYN7u7u6NOnDwDAz88P3bp1w/vvv48VK1agoKAAoaGheOONN7S6Mw9gEkVEREQG5MSJE+jYsaN6fdy4cQCAkJAQREdHY+LEicjJycEHH3yA9PR0tGvXDr/++iusrKzU+6xduxahoaHo1KkTTExM0L9/fyxevFjrWJhEERERkWxyZh3/5/7aCAoKgnhO65UkSZg5cyZmzpxZYh0nJyesW7dOuxMXg0kUERERyccHEBMRERGRNtgSRURERLJJqsJFl/0NFZMoIiIiko/deURERESkDbZEERERkXy6TphpuA1RTKKIiIhIvr8/ukXu/oaK3XlEREREMrAlioiIiOQz4oHlTKKIiIhIPgFAl2kKDDeHYhJFRERE8nFMFBERERFphS1RREREJJ+AjmOiyiySCsckioiIiOQz4oHl7M4jIiIikoEtUVQlNH45G/8eeQ/1Ax7D2e0pIt71xpFfHfQdVpW1Ou4cXD3yi5T/vNoFS6d56iGiqmXge3+iTZf7qF3nMfJzTZAQr8B3n9fD7es26jpzVp1Gk5cyNPbbtaEmvpzpW9HhGrTdy2rjp8+80fHd2/j3jGvq8qsn7bF9nheux9vDxFSgtn8OQr+/AAsrFS4dccCiNwKKPd7E7fHwbppdUeFXDioAko77Gyi9JlFBQUFo1qwZFi1aVKr6iYmJGDZsGOLj49GwYUPEx8eXa3xkOKxsVLh6wQq7f3DCjO+u6zucKm/06w1hYvrXurfvE0Stu4yDOx31F1QV0rh1Onb84I5L5xQwNRMIGXMVn648gw//9RLynvx14X/ZVBP//dJbvZ77t230YtfP2OHQWjfU8svRKL960h5fhjRC8MhbGDjzKkxNBW4l2EKSCrud6rbMRNTxoxr77FjghcS4avBqYmQJFIz77jy9JlE//vgjzM3NS11/xowZsLW1RVJSEuzs7MotrmHDhiE9PR3btm0rt3P8nSRJ2Lp1K/r06VMh56uKTuxT4MQ+hb7DMBoZDzX/3w4cmYo71y1x9o/y+39pTKZ/2FRj/fMpDbH+0GHU98/C+ZPV1OV5uSZ4dN+ygqOrGnJzTBA9xhdDPruMX5Zotp5unlUHHYfdQfDIW+oy13pP1P82sxBwqFGgXlcWSDgT44SgkBRIurTIkMHR65goJycn2Nvbl7p+cnIy2rVrBy8vLzg7Oxdbp6CgoNjy8lCR5yqN/Pyi3StE5c3MXIXX+j7A7g3O0K1Nn0pia/8UAJCVofm7t2PPNPxw6BCWbTuGYWFXYWml1Ed4BmnDtHpo/NpDNGyn2SWadd8c108rYOdcgHl9m2BSy5fw+cAAXDle8o+0szFOyHlkjsCBd8s77Mrp2cByXRYDpdckKigoCGFhYQAAb29vzJ49G++++y7s7e3h6emJr7/+Wl1XkiScPHkSM2fOhCRJiIiIwPXr1yFJEjZs2IAOHTrAysoKa9euxYMHDzB48GDUqlULNjY2CAgIwA8//KBx7s2bNyMgIADW1tZwdnZG586dkZOTg4iICKxevRo//fQTJEmCJEmIjY0t8VwRERFo1qyZxrEXLVoEb29vjbLvvvsOjRo1gqWlJWrWrInQ0FD16waAvn37QpIk9fqwYcOKtEyFhYUhKChI4/qFhoYiLCwM1atXR3BwMADg/Pnz6N69O+zs7ODq6oq3334b9+/f1/4PRFQKgcHpsFMoEbO5+B82pBtJEvhw0hVcOKXAn1f+aumL3eWKeR/7YfI7zbBxpRdeez0V4+ck6DFSw3Fie3XcPG+H3hOvF9l2/4YVAGDXIk+0G5yK0NUX4Nk4G4vfbIy0a1bFHu/wBlf4v/oIjjWN9Icsk6jKYcGCBWjVqhVOnz6NkSNHYsSIEUhKSgIApKSkoFGjRggPD0dKSgrGjx+v3u/jjz/GmDFjkJCQgODgYOTm5qJly5bYuXMnzp8/jw8++ABvv/02jh07pj7W4MGD8e677yIhIQGxsbHo168fhBAYP348Bg4ciG7duiElJQUpKSlo06ZNiecqjeXLl2PUqFH44IMPcO7cOWzfvh0+Pj4AgOPHjwMAVq1ahZSUFPV6aa1evRoWFhaIi4vDihUrkJ6ejtdeew3NmzfHiRMn8Ouvv+Lu3bsYOHBgicfIy8tDZmamxkJUWt0GPcDxWAc8vGuh71CqpJFTL8Orfg7mjPfXKP91kztOxTnh+mU7xO50xYL/80PbLvfh5vGkhCMRADy8Y4FNkXUx7IskmFsV/fJW/W+Qc7shqQgcmAaPxjkYMP0aatR9gsMbXYvUf5RigYsHHNFmkJG2Qhm5SnV3Xo8ePTBy5EgAwKRJk7Bw4ULs27cPvr6+cHNzg5mZGezs7ODm5gYA6taVsLAw9OvXT+NYf0+yPvroI+zevRsbN27ESy+9hJSUFDx9+hT9+vWDl5cXACAg4K87LaytrZGXl6c+z98Vd64X+eSTTxAeHo4xY8aoy1q3bg0AcHFxAQBUq1at2PO9SP369TF37lyNczVv3hyzZ89Wl3333Xfw8PDApUuX0KBBgyLHiIqKQmRkpNbnJqpRKw/N2mVi1gf19B1KlTRiyiW81OEBJoY0w4O7xbeCPJN4trC7yd3zCVJvWldEeAbpxjk7ZN23wJyezdVlKqWEK0cV2L/aHTP2nQQAuPk81tjPzecxHt0uOv7syEZX2DoWoEmXh+UbeGVmxPNEVaokqkmTJup/S5IENzc3pKWlvXC/Vq1aaawrlUrMnj0bGzduxO3bt5Gfn4+8vDzY2BTeHty0aVN06tQJAQEBCA4ORteuXTFgwAA4Or74zqJ/nutF0tLScOfOHXTq1Emr/UqrZcuWGutnzpzBvn37ih14n5ycXGwSNXnyZIwbN069npmZCQ8Pj7IPlqqcrgMfIOOBGY79zukkypbAiCmXEdjpPj4e1gx3b784KarXsPCusIf32CL4PA3bZmDqnlMaZWvG14dbvSfoOuIWqnvmwsE1D2lXNa952lVrNOr4SKNMCODIJle83C8NpuaGmwjojFMcVA7/vFNPkiSoVC++ura2thrr8+bNwxdffIFFixYhICAAtra2CAsLUw+8NjU1RUxMDA4fPow9e/ZgyZIlmDJlCo4ePYo6depodS4TExOIf2TRfx9wbm0t7xfhi45bUjzZ2dl4/fXX8dlnnxWpW7NmzWLPZWlpCUtLw77Dx8pGCfc6f41HcPPIR91GT5CVbop7t/mlUh4kSaDLvx8gZrMzVEoOKC9LI6ddRlCPu5j5UQCePDaFY/U8AEBOlhny80zh5vEEHXvexfEDzshMN0Md3xx8MPEKzh13wPVLvEPyeazslHD31WxlsrRRwdaxQF3e5cPb2LHQE7X8clC7UQ6Obq6Bu8nWeH9FosZ+SXEOeHDTCm3fMO6uPE5xUMXExcWhd+/eeOuttwAAKpUKly5dgr//X2MKJElC27Zt0bZtW0yfPh1eXl7YunUrxo0bBwsLCyiVpbvLxcXFBampqRBCQPrfva1/n7/K3t4e3t7e2Lt3Lzp27FjsMczNzYucz8XFBefPn9coi4+Pf+GUEC1atMCWLVvg7e0NM7Mq+ectVoOmTzBvS7J6/T+RdwAAezY4YsFYTv5YHpq3y4Jr7Xzs2VBd36FUOb3eKHz/zl0dr1H++RRf/LatJp4WSGj2yiP0fvsWrKyVuJdqhbjfXPDDCi89RFv1vDb8DgryTLB5Vl08TjdDLb8cfLT2Aly8cjXqHd7girotM+Hmw3FoxqpKfsvWr18fmzdvxuHDh+Ho6IjPP/8cd+/eVSdRR48exd69e9G1a1fUqFEDR48exb179+Dn5weg8I653bt3IykpCc7OznBwKLmrIigoCPfu3cPcuXMxYMAA/Prrr/jll1+gUPx1O2xERAT+85//oEaNGujevTuysrIQFxeHjz76SH2+vXv3om3btrC0tISjoyNee+01zJs3D2vWrEFgYCD++9//4vz582jevHlJoQAARo0ahZUrV2Lw4MGYOHEinJyccOXKFaxfvx7ffPMNTE2r5mR8Z4/YIdi96YsrUpk5dVCBbp4tX1yRtNajUdBzt99PtcKkYc//LKDSG7vhXJGy4JG3NOaJKs67Sy6VV0iGxYjHRFWqu/PKytSpU9GiRQsEBwcjKCgIbm5uGtMFKBQKHDhwAD169ECDBg0wdepULFiwAN27dwcAvP/++/D19UWrVq3g4uKCuLi4Es/l5+eHZcuWYenSpWjatCmOHTumMagdAEJCQrBo0SIsW7YMjRo1Qq9evXD58mX19gULFiAmJgYeHh7qJCk4OBjTpk3DxIkT0bp1a2RlZWHo0KEvfO3u7u6Ii4uDUqlE165dERAQgLCwMFSrVg0mJlXyz01ERPqkErovBkoS/xx4Q0YvMzMTDg4OCEJvmEmln1Ge5JOMqOu1sjDRYqJf0t2S+J/1HYJRyc5SoUWjNGRkZGj0jJSlZ98VneuFwcxU/rjap8o8/Ja8qFxjLS/85CYiIiL5jLg7j0kUERER6UDXWccNN4niIBkiIiIiGdgSRURERPKxO4+IiIhIBpWATl1yBnx3HrvziIiIiGRgSxQRERHJJ1SFiy77GygmUURERCQfx0QRERERycAxUURERESkDbZEERERkXzsziMiIiKSQUDHJKrMIqlw7M4jIiIikoEtUURERCQfu/OIiIiIZFCpAOgw15PKcOeJYnceERERkQxsiSIiIiL52J1HREREJIMRJ1HsziMiIiKSgS1RREREJJ8RP/aFSRQRERHJJoQKQsi/w06XffWNSRQRERHJJ4RurUkcE0VERERkXNgSRURERPIJHcdEGXBLFJMoIiIikk+lAiQdxjUZ8JgoducRERERycCWKCIiIpKP3XlERERE2hMqFYQO3XmGPMUBu/OIiIiIZGBLFBEREcnH7jwiIiIiGVQCkIwziWJ3HhEREZEMbIkiIiIi+YQAoMs8UYbbEsUkioiIiGQTKgGhQ3eeYBJFRERERkmooFtLFKc4ICIiIjIqbIkiIiIi2didR0RERCSHEXfnMYmiIp79KniKAp3mT6PSkwz4l5ihMhH5+g7BqGRnGe4XpSHKzi683hXRyqPrd8VTFJRdMBWMSRQVkZWVBQA4hF16jsSIPNV3AEbokb4DMC4tGuk7AuOUlZUFBweHcjm2hYUF3NzccChV9+8KNzc3WFhYlEFUFUsShtwZSeVCpVLhzp07sLe3hyRJ+g6n1DIzM+Hh4YGbN29CoVDoOxyjwGtesXi9K56hXnMhBLKysuDu7g4Tk/K7hyw3Nxf5+bq36lpYWMDKyqoMIqpYbImiIkxMTFC7dm19hyGbQqEwqA+7qoDXvGLxelc8Q7zm5dUC9XdWVlYGmfyUFU5xQERERCQDkygiIiIiGZhEUZVhaWmJGTNmwNLSUt+hGA1e84rF613xeM3peTiwnIiIiEgGtkQRERERycAkioiIiEgGJlFEREREMjCJokrh+vXrkCQJ8fHxAIDY2FhIkoT09HS9xlXVBAUFISwsrNT1t23bBh8fH5iammq1H1VukiRh27ZtFXpObd97iYmJeOWVV2BlZYVmzZqVW1xEumASRZVSmzZtkJKSUu6TxTFZe74PP/wQAwYMwM2bNzFr1ix9h0NaioiIqDQJyI8//qjVe2jGjBmwtbVFUlIS9u7dW25xDRs2DH369Cm34/+TPhJYKj+csZwqpWfPZCL9yc7ORlpaGoKDg+Hu7q7vcKq8/Px8g3x2WGk5OTlpVT85ORk9e/aEl5dXiXUKCgpgbm6ua2ilUpHnKo2q/n4xFGyJogqlUqkwd+5c+Pj4wNLSEp6envj000+L1PtnC1F0dDSqVauGHTt2wNfXFzY2NhgwYAAeP36M1atXw9vbG46Ojhg9ejSUSqX6ON9//z1atWoFe3t7uLm54c0330RaWhqAwi7Ejh07AgAcHR0hSRKGDRumjjMqKgp16tSBtbU1mjZtis2bN5fvxSljOTk5GDp0KOzs7FCzZk0sWLBAY3teXh7Gjx+PWrVqwdbWFi+//DJiY2MBFF5/e3t7AMBrr70GSZLU2w4dOoT27dvD2toaHh4eGD16NHJyctTH9fb2xuzZs/Huu+/C3t4enp6e+PrrrzXOfevWLQwePBhOTk6wtbVFq1atcPToUfX2n376CS1atICVlRXq1q2LyMhIPH1qWE9pzsrKwpAhQ2Bra4uaNWti4cKFGl1a3t7emDVrFoYOHQqFQoEPPvgAALBlyxY0atQIlpaW8Pb21vi7ffnll2jcuLF6fdu2bZAkCStWrFCXde7cGVOnTkV0dDQiIyNx5swZSJIESZIQHR2trnf//n307dsXNjY2qF+/PrZv316u1+Ofr/157xFJknDy5EnMnDkTkiQhIiJC3eW/YcMGdOjQAVZWVli7di0ePHiAwYMHo1atWrCxsUFAQAB++OEHjXNv3rwZAQEBsLa2hrOzMzp37oycnBxERERg9erV+Omnn9TXKDY2tsRzFdeyt2jRInh7e2uUfffdd+q/Yc2aNREaGqp+3QDQt29fSJKkXi+uNSwsLAxBQUEa1y80NBRhYWGoXr06goODAQDnz59H9+7dYWdnB1dXV7z99tu4f/++9n8gkkcQVaCJEycKR0dHER0dLa5cuSIOHjwoVq5cKa5duyYAiNOnTwshhNi3b58AIB49eiSEEGLVqlXC3NxcdOnSRZw6dUrs379fODs7i65du4qBAweKCxcuiJ9//llYWFiI9evXq8/37bffil27donk5GRx5MgRERgYKLp37y6EEOLp06diy5YtAoBISkoSKSkpIj09XQghxCeffCIaNmwofv31V5GcnCxWrVolLC0tRWxsbIVeL12MGDFCeHp6it9++02cPXtW9OrVS9jb24sxY8YIIYR47733RJs2bcSBAwfElStXxLx584SlpaW4dOmSyMvLE0lJSQKA2LJli0hJSRF5eXniypUrwtbWVixcuFBcunRJxMXFiebNm4thw4apz+vl5SWcnJzE0qVLxeXLl0VUVJQwMTERiYmJQgghsrKyRN26dUX79u3FwYMHxeXLl8WGDRvE4cOHhRBCHDhwQCgUChEdHS2Sk5PFnj17hLe3t4iIiKjwa6iL9957T3h5eYnffvtNnDt3TvTt21fj+nt5eQmFQiHmz58vrly5Iq5cuSJOnDghTExMxMyZM0VSUpJYtWqVsLa2FqtWrRJCCHH27FkhSZJIS0sTQggRFhYmqlevLgYNGiSEECI/P1/Y2NiImJgY8fjxYxEeHi4aNWokUlJSREpKinj8+LEQQggAonbt2mLdunXi8uXLYvTo0cLOzk48ePCg3K5Hhw4dNF77894jKSkpolGjRiI8PFykpKSIrKws9WeEt7e32LJli7h69aq4c+eOuHXrlpg3b544ffq0SE5OFosXLxampqbi6NGjQggh7ty5I8zMzMTnn38url27Js6ePSuWLl0qsrKyRFZWlhg4cKDo1q2b+hrl5eWVeK4ZM2aIpk2baryuhQsXCi8vL/X6smXLhJWVlVi0aJFISkoSx44dEwsXLhRCCJGWliYAiFWrVomUlBT13zEkJET07t1b47hjxowRHTp00Lh+dnZ2YsKECSIxMVEkJiaKR48eCRcXFzF58mSRkJAgTp06Jbp06SI6duxYZn83ej4mUVRhMjMzhaWlpVi5cmWRbaVJogCIK1euqPf58MMPhY2NjcjKylKXBQcHiw8//LDEGI4fPy4AqPf553mEECI3N1fY2Niov9SfGT58uBg8eLC2L1svsrKyhIWFhdi4caO67MGDB8La2lqMGTNG/Pnnn8LU1FTcvn1bY79OnTqJyZMnCyGEePTokQAg9u3bp94+fPhw8cEHH2jsc/DgQWFiYiKePHkihCj8gnzrrbfU21UqlahRo4ZYvny5EEKIr776Stjb25f4hd2pUycxe/ZsjbLvv/9e1KxZU8uroD+ZmZnC3NxcbNq0SV2Wnp4ubGxsNBKJPn36aOz35ptvii5dumiUTZgwQfj7+wshCq+ls7Oz+rjNmjUTUVFRws3NTQghxKFDh4S5ubnIyckRQohiv/SFKEyipk6dql7Pzs4WAMQvv/yi2wt/jn8mUc97jwghRNOmTcWMGTPU688+IxYtWvTCc/Xs2VOEh4cLIYQ4efKkACCuX79ebN3iEpiSzlWaJMrd3V1MmTKlxNgAiK1bt74whuKSqObNm2vUmTVrlujatatG2c2bN9U/DKn8cUwUVZiEhATk5eWhU6dOsva3sbFBvXr11Ouurq7w9vaGnZ2dRtmz7joAOHnyJCIiInDmzBk8evQIKpUKAHDjxg34+/sXe54rV67g8ePH6NKli0Z5fn4+mjdvLiv2ipacnIz8/Hy8/PLL6jInJyf4+voCAM6dOwelUokGDRpo7JeXlwdnZ+cSj3vmzBmcPXsWa9euVZcJIaBSqXDt2jX4+fkBAJo0aaLeLkkS3Nzc1H+X+Ph4NG/evMQxMmfOnEFcXJxGN69SqURubi4eP34MGxub0l4Gvbl69SoKCgrw0ksvqcscHBzU1/+ZVq1aaawnJCSgd+/eGmVt27bFokWLoFQqYWpqildffRWxsbHo3LkzLl68iJEjR2Lu3LlITEzE/v370bp161Jdo7//jWxtbaFQKDT+75S3571Hnuef10ypVGL27NnYuHEjbt++jfz8fOTl5amvQdOmTdGpUycEBAQgODgYXbt2xYABA+Do6Kj1uV4kLS0Nd+7ckf0Z9yItW7bUWD9z5gz27dun8Rn4THJycpH/31T2mERRhbG2ttZp/38O6pQkqdiyZ4lSTk4OgoODERwcjLVr18LFxQU3btxAcHAw8vPzSzxPdnY2AGDnzp2oVauWxraq8vys7OxsmJqa4uTJkzA1NdXYVtwH8t/3+/DDDzF69Ogi2zw9PdX/ft7f5UXvg+zsbERGRqJfv35FtllZWT13X0Nja2ur9T5BQUH4+uuvcfDgQTRv3hwKhUKdWO3fvx8dOnQo1XGe9zeqCHLP/89rNm/ePHzxxRdYtGgRAgICYGtri7CwMPX/cVNTU8TExODw4cPYs2cPlixZgilTpuDo0aOoU6eOVucyMTGB+MeT0goKCtT/lvsZ96LjlhRPdnY2Xn/9dXz22WdF6tasWVNWLKQdDiynClO/fn1YW1uX6+3Kf5eYmIgHDx5gzpw5aN++PRo2bFjkl+6zu1v+Phjd398flpaWuHHjBnx8fDQWDw+PColdV/Xq1YO5ubnGYO1Hjx7h0qVLAIDmzZtDqVQiLS2tyGt83l2RLVq0wMWLF4vs4+PjU+o7hZo0aYL4+Hg8fPiwxHMkJSUVew4TE8P4yKpbty7Mzc1x/PhxdVlGRob6+pfEz88PcXFxGmVxcXFo0KCBOtnt0KEDLl68iE2bNqkHHgcFBeG3335DXFycxmBkCwsLjfd2VRQXF4fevXvjrbfeQtOmTVG3bt0i11mSJLRt2xaRkZE4ffo0LCwssHXrVgDaXSMXFxekpqZqJDzP5rYDAHt7e3h7ez/3M87c3LzI+VxcXJCSkqJR9vfjlqRFixa4cOECvL29i/xfkZOgk/YM4xOJqgQrKytMmjQJEydOxJo1a5CcnIw//vgD3377bbmcz9PTExYWFliyZAmuXr2K7du3F5mnxsvLC5IkYceOHbh37x6ys7Nhb2+P8ePHY+zYsVi9ejWSk5Nx6tQpLFmyBKtXry6XWMuanZ0dhg8fjgkTJuD333/H+fPnMWzYMHUS0qBBAwwZMgRDhw7Fjz/+iGvXruHYsWOIiorCzp07SzzupEmTcPjwYYSGhiI+Ph6XL1/GTz/9pL77qDQGDx4MNzc39OnTB3Fxcbh69Sq2bNmCI0eOAACmT5+ONWvWIDIyEhcuXEBCQgLWr1+PqVOn6nZRKpC9vT1CQkIwYcIE7Nu3DxcuXMDw4cNhYmICSZJK3C88PBx79+7FrFmzcOnSJaxevRpffvklxo8fr67TpEkTODo6Yt26dRpJ1LZt25CXl4e2bduq63p7e+PatWuIj4/H/fv3kZeXV26vWV/q16+vbmlKSEjAhx9+iLt376q3Hz16FLNnz8aJEydw48YN/Pjjj7h3756669nb2xtnz55FUlIS7t+/X2wL0DNBQUG4d+8e5s6di+TkZCxduhS//PKLRp2IiAgsWLAAixcvxuXLl9WfHc88S7JSU1Px6NEjAIV3wJ44cQJr1qzB5cuXMWPGDJw/f/6Fr33UqFF4+PAhBg8ejOPHjyM5ORm7d+/GO++8U+WT58qCSRRVqGnTpiE8PBzTp0+Hn58fBg0aVG7jMFxcXBAdHY1NmzbB398fc+bMwfz58zXq1KpVC5GRkfj444/h6uqqTgZmzZqFadOmISoqCn5+fujWrRt27tz5wub/ymTevHlo3749Xn/9dXTu3Bnt2rXTGFOxatUqDB06FOHh4fD19UWfPn1w/PhxjW65f2rSpAn279+PS5cuoX379mjevDmmT5+u1TxSFhYW2LNnD2rUqIEePXogICAAc+bMUbe0BAcHY8eOHdizZw9at26NV155BQsXLnzufEGV0eeff47AwED06tULnTt3Rtu2beHn5/fcLskWLVpg48aNWL9+PRo3bozp06dj5syZ6qk3gMJWlfbt20OSJLRr1w5A4d9FoVCgVatWGi0Q/fv3R7du3dCxY0e4uLgUufW/Kpg6dSpatGiB4OBgBAUFqRP0ZxQKBQ4cOIAePXqgQYMGmDp1KhYsWIDu3bsDAN5//334+vqiVatWcHFxKdIS+Hd+fn5YtmwZli5diqZNm+LYsWMaCS4AhISEYNGiRVi2bBkaNWqEXr164fLly+rtCxYsQExMDDw8PNRjLIODgzFt2jRMnDgRrVu3RlZWFoYOHfrC1+7u7o64uDgolUp07doVAQEBCAsLQ7Vq1Qym1dbQSeKfHbFERFTmcnJyUKtWLSxYsADDhw/XdzhEVAY4sJyIqBycPn0aiYmJeOmll5CRkYGZM2cCQJG774jIcDGJIiIqJ/Pnz0dSUhIsLCzQsmVLHDx4ENWrV9d3WERURtidR0RERCQDR54RERERycAkioiIiEgGJlFEREREMjCJIiIiIpKBSRQRERGRDEyiiKhSGjZsmMbM00FBQQgLC6vwOGJjYyFJEtLT00usI0kStm3bVupjRkREoFmzZjrFdf36dUiSVKpnrBFR+WASRUSlNmzYMEiSBEmSYGFhAR8fH8ycORNPnz4t93P/+OOPRZ59WJLSJD5ERLriZJtEpJVu3bph1apVyMvLw65duzBq1CiYm5tj8uTJRerm5+fDwsKiTM7r5ORUJschIiorbIkiIq1YWlrCzc0NXl5eGDFiBDp37ozt27cD+KsL7tNPP4W7uzt8fX0BADdv3sTAgQNRrVo1ODk5oXfv3rh+/br6mEqlEuPGjUO1atXg7OyMiRMn4p/zAP+zOy8vLw+TJk2Ch4cHLC0t4ePjg2+//RbXr19Hx44dAQCOjo6QJEn9AF+VSoWoqCjUqVMH1tbWaNq0KTZv3qxxnl27dqFBgwawtrZGx44dNeIsrUmTJqFBgwawsbFB3bp1MW3aNBQUFBSp99VXX8HDwwM2NjYYOHAgMjIyNLZ/88036ocWN2zYEMuWLdM6FiIqP0yiiEgn1tbWyM/PV6/v3bsXSUlJiImJwY4dO1BQUIDg4GDY29vj4MGDiIuLg52dHbp166beb8GCBYiOjsZ3332HQ4cO4eHDh9i6detzzzt06FD88MMPWLx4MRISEvDVV1/Bzs4OHh4e2LJlCwAgKSkJKSkp+OKLLwAAUVFRWLNmDVasWIELFy5g7NixeOutt7B//34Ahclev3798PrrryM+Ph7vvfcePv74Y62vib29PaKjo3Hx4kV88cUXWLlyJRYuXKhR58qVK9i4cSN+/vln/Prrrzh9+jRGjhyp3r527VpMnz4dn376KRISEjB79mxMmzYNq1ev1joeIiongoiolEJCQkTv3r2FEEKoVCoRExMjLC0txfjx49XbXV1dRV5ennqf77//Xvj6+gqVSqUuy8vLE9bW1mL37t1CCCFq1qwp5s6dq95eUFAgateurT6XEEJ06NBBjBkzRgghRFJSkgAgYmJiio1z3759AoB49OiRuiw3N1fY2NiIw4cPa9QdPny4GDx4sBBCiMmTJwt/f3+N7ZMmTSpyrH8CILZu3Vri9nnz5omWLVuq12fMmCFMTU3FrVu31GW//PKLMDExESkpKUIIIerVqyfWrVuncZxZs2aJwMBAIYQQ165dEwDE6dOnSzwvEZUvjokiIq3s2LEDdnZ2KCgogEqlwptvvomIiAj19oCAAI1xUGfOnMGVK1dgb2+vcZzc3FwkJycjIyMDKSkpePnll9XbzMzM0KpVqyJdes/Ex8fD1NQUHTp0KHXcV65cwePHj9GlSxeN8vz8fDRv3hwAkJCQoBEHAAQGBpb6HM9s2LABixcvRnJyMrKzs/H06VMoFAqNOp6enqhVq5bGeVQqFZKSkmBvb4/k5GQMHz4c77//vrrO06dP4eDgoHU8RFQ+mEQRkVY6duyI5cuXw8LCAu7u7jAz0/wYsbW11VjPzs5Gy5YtsXbt2iLHcnFxkRWDtbW11vtkZ2cDAHbu3KmRvACF47zKypEjRzBkyBBERkYiODgYDg4OWL9+PRYsWKB1rCtXriyS1JmampZZrESkGyZRRKQVW1tb+Pj4lLp+ixYtsGHDBtSoUaNIa8wzNWvWxNGjR/Hqq68CKGxxOXnyJFq0aFFs/YCAAKhUKuzfvx+dO3cusv1ZS5hSqVSX+fv7w9LSEjdu3CixBcvPz089SP6ZP/7448Uv8m8OHz4MLy8vTJkyRV32559/Fql348YN3LlzB+7u7urzmJiYwNfXF66urnB3d8fVq1cxZMgQrc5PRBWHA8uJqFwNGTIE1atXR+/evXHw4EFcu3YNsbGxGD16NG7dugUAGDNmDObMmYNt27YhMTERI0eOfO4cT97e3ggJCcG7776Lbdu2qY+5ceNGAICXlxckScKOHTtw7949ZGdnw97eHuPHj8fYsWOxevVqJCcn49SpU1iyZIl6sPZ//vMfXL58GRMmTEBSUhLWrVuH6OhorV5v/fr1cePGDaxfvx7JyclYvHhxsYPkraysEBISgjNnzuDgwYMYPXo0Bg4cCDc3NwBAZGQkoqKisHjxYly6dAnnzp3DqlWr8Pnnn2sVDxGVHyZRRFSubGxscODAAXh6eqJfv37w8/PD8OHDkZubq26ZCg8Px9tvv42QkBAEBgbC3t4effv2fe5xly9fjgEDBmDkyJFo2LAh3n//feTk5AAAatWqhcjISHz88cdwdXVFaGgoAGDWrFmYNm0aoqKi4Ofnh27dumHnzp2oU6cOgMJxSlu2bMG2bdvQtGlTrFixArNnz9bq9f7rX//C2LFjERoaimbNmuHw4cOYNm1akXo+Pj7o168fevToga5du6JJkyYaUxi89957+Oabb7Bq1SoEBASgQ4cOiI6OVsdKRPoniZJGbhIRERFRidgSRURERCQDkygiIiIiGZhEEREREcnAJIqIiIhIBiZRRERERDIwiSIiIiKSgUkUERERkQxMooiIiIhkYBJFREREJAOTKCIiIiIZmEQRERERyfD/aPEGYDUZlp4AAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117527572,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"169936a9-69f8-4ade-981b-a3286c40ed36","id":"BNkNKvzZhh25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.99      0.95      0.97       500\n","       defence       0.94      0.99      0.97       500\n","        growth       0.93      0.95      0.94       500\n","infrastructure       0.96      0.93      0.95       500\n","\n","      accuracy                           0.95      2000\n","     macro avg       0.96      0.96      0.95      2000\n","  weighted avg       0.96      0.95      0.95      2000\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iPQA7h9S3E06"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"BQ-8Die53E06"},"source":["### UMAP-Agg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ihDSTHS53E06"},"outputs":[],"source":["from umap import UMAP\n","from sklearn.cluster import AgglomerativeClustering\n","experiment='UMAP/Agg'\n","umap_model = UMAP(n_neighbors=180, n_components=50, metric='cosine')\n","hdbscan_model = AgglomerativeClustering(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"wkfAA5Np3E06"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZgXqqQIw3E06"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Efv7gZMG3E06","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111727983,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"eeb09476-5489-4130-e306-42d2b5a19e33"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-d74b3c28-d487-4d13-9e18-633e61762308\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d74b3c28-d487-4d13-9e18-633e61762308')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d74b3c28-d487-4d13-9e18-633e61762308 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d74b3c28-d487-4d13-9e18-633e61762308');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fbedcc94-2210-4754-8499-59f3aba950f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fbedcc94-2210-4754-8499-59f3aba950f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fbedcc94-2210-4754-8499-59f3aba950f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_81e6d2a4-7715-4402-b1d1-f3d58969f20d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_81e6d2a4-7715-4402-b1d1-f3d58969f20d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":184}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ByfVY7mJ3E06","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["b3aeb840015047b68ca360a530b15872","26d0b27308fd4696b5418ee956b0cade","0739cc3f22ad4aa3a613d9b7c0bb5569","02071a5e8dc544a19e8621fbb6389ebf","a3918599621141409d672a91d542bce1","e9d4c46f4b0541b8a80a699aa5df4918","47b20ff8512c42338926fd52ea3c7104","d7a974e68e774fab92785054d07a5970","5e3f8a64a96a479491e4a6ee92ff745d","6f7716ef89fd46bb813ed1971944bc52","693b78aba510450b84b90fe751d7ca44"]},"executionInfo":{"status":"ok","timestamp":1706111739172,"user_tz":-330,"elapsed":11202,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b12f7bc1-0dc9-41c4-df09-7ea3e9f23463"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b3aeb840015047b68ca360a530b15872"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:55:32,936 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:55:38,201 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:55:38,208 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:55:38,225 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:55:38,234 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:55:39,070 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OLSzaj8k3E06","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111739173,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"540a80e4-82c6-442a-e574-171ac845b4b3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                               Name  \\\n","0      0    221  0_climate_change_policy_emissions   \n","1      1    131   1_climate_tropical_season_winter   \n","2      2     75        2_heat_air_temperature_skin   \n","3      3     73     3_climate_change_people_global   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, emissions, governmen...   \n","1  [climate, tropical, season, winter, summer, so...   \n","2  [heat, air, temperature, skin, climate, people...   \n","3  [climate, change, people, global, warming, imp...   \n","\n","                                             KeyBERT  \\\n","0  [climate, ipcc, greenhouse, warming, emissions...   \n","1  [climates, subtropical, climate, monsoons, ker...   \n","2  [climate, temperature, summer, weather, summer...   \n","3  [climate, droughts, warming, floods, weather, ...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, emissions, governmen...   \n","1  [climate, tropical, season, winter, summer, so...   \n","2  [heat, air, temperature, skin, climate, people...   \n","3  [climate, change, people, global, warming, imp...   \n","\n","                                 Representative_Docs  \n","0  [change adaptation strategy the government con...  \n","1  [being country located south asia has very div...  \n","2  [quite different from the other countries the ...  \n","3  [scientists are predicting that will hottest y...  "],"text/html":["\n","  <div id=\"df-f1b3535e-cb31-4b6d-b152-fa64ebd5a393\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>221</td>\n","      <td>0_climate_change_policy_emissions</td>\n","      <td>[climate, change, policy, emissions, governmen...</td>\n","      <td>[climate, ipcc, greenhouse, warming, emissions...</td>\n","      <td>[climate, change, policy, emissions, governmen...</td>\n","      <td>[change adaptation strategy the government con...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>131</td>\n","      <td>1_climate_tropical_season_winter</td>\n","      <td>[climate, tropical, season, winter, summer, so...</td>\n","      <td>[climates, subtropical, climate, monsoons, ker...</td>\n","      <td>[climate, tropical, season, winter, summer, so...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>75</td>\n","      <td>2_heat_air_temperature_skin</td>\n","      <td>[heat, air, temperature, skin, climate, people...</td>\n","      <td>[climate, temperature, summer, weather, summer...</td>\n","      <td>[heat, air, temperature, skin, climate, people...</td>\n","      <td>[quite different from the other countries the ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>73</td>\n","      <td>3_climate_change_people_global</td>\n","      <td>[climate, change, people, global, warming, imp...</td>\n","      <td>[climate, droughts, warming, floods, weather, ...</td>\n","      <td>[climate, change, people, global, warming, imp...</td>\n","      <td>[scientists are predicting that will hottest y...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1b3535e-cb31-4b6d-b152-fa64ebd5a393')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f1b3535e-cb31-4b6d-b152-fa64ebd5a393 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f1b3535e-cb31-4b6d-b152-fa64ebd5a393');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-50f3fc02-8ffe-4e85-9576-b94cebf3f8a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50f3fc02-8ffe-4e85-9576-b94cebf3f8a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-50f3fc02-8ffe-4e85-9576-b94cebf3f8a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":186}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PE_f5Wyw3E06"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o4OVaIwx3E06"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"m3hSjZPg3E06"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gO2o6SGR3E07","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111739871,"user_tz":-330,"elapsed":712,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4c064c26-3f6b-4478-8011-1496604f6d99"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6565409403113138\n","c_umass 0.6565409403113138\n","c_npmi 0.0616907417252772\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"xUcXjqlO3E07"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QpBVVhl83E07"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C-ICVpUJ3E07"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S6Gttuwg3E07","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["cef630c522f64663a4e3be6ae1404065","b462d642f44543eb91e9000f75ceed0f","9ad7ac032c39420fb74aae3ed528fd6c","4f6c1ad34d6b4db9aadd7d8cac68a3f0","019d4cc084f04bad94c0ee0de92fcabf","de04052588be4f7bad5669ce7a433fe9","186cbd1fdb994f36937cb0e3d90e2777","266ee2d7f77642ca91a9d318bd68e7ea","2815b0feb1354c56ade0fae4bf5a723e","cd87b45019224cc0b8fd63e51c819a40","6f4c2fb5a2704c9b9a99415e97704be5"]},"executionInfo":{"status":"ok","timestamp":1706111749702,"user_tz":-330,"elapsed":9835,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b949a9c1-0955-4a78-8745-9dc2b762c632"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cef630c522f64663a4e3be6ae1404065"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:55:44,392 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:55:49,322 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:55:49,325 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:55:49,340 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:55:49,347 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:55:50,096 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YgLEyQBi3E07","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111750653,"user_tz":-330,"elapsed":964,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e5ffe450-3f17-4ecf-b670-1f2bd871bf69"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    189         0_pakistan_army_forces_minister   \n","1      1    170  1_defence_ministry_government_aircraft   \n","2      2    101          2_minister_visit_defence_singh   \n","3      3     40         3_china_chinese_minister_border   \n","\n","                                      Representation  \\\n","0  [pakistan, army, forces, minister, kashmir, si...   \n","1  [defence, ministry, government, aircraft, new,...   \n","2  [minister, visit, defence, singh, meeting, pak...   \n","3  [china, chinese, minister, border, troops, sin...   \n","\n","                                             KeyBERT  \\\n","0  [jammu, kashmir, pakistan, troops, army, milit...   \n","1  [procurement, crore, spending, delhi, military...   \n","2  [islamabad, pakistan, pakistani, parrikar, mod...   \n","3  [bhutan, nepal, china, beijing, asia, ladakh, ...   \n","\n","                                                 MMR  \\\n","0  [pakistan, army, forces, minister, kashmir, si...   \n","1  [defence, ministry, government, aircraft, new,...   \n","2  [minister, visit, defence, singh, meeting, pak...   \n","3  [china, chinese, minister, border, troops, sin...   \n","\n","                                 Representative_Docs  \n","0  [minister rajnath singh has the military will ...  \n","1  [budget here detailed list all the new weapon ...  \n","2  [minister visits pakistan defence minister ant...  \n","3  [minister manohar parrikar has announced the a...  "],"text/html":["\n","  <div id=\"df-bdac3082-4936-47cc-9c8f-dfcbeb389e18\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>0_pakistan_army_forces_minister</td>\n","      <td>[pakistan, army, forces, minister, kashmir, si...</td>\n","      <td>[jammu, kashmir, pakistan, troops, army, milit...</td>\n","      <td>[pakistan, army, forces, minister, kashmir, si...</td>\n","      <td>[minister rajnath singh has the military will ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>170</td>\n","      <td>1_defence_ministry_government_aircraft</td>\n","      <td>[defence, ministry, government, aircraft, new,...</td>\n","      <td>[procurement, crore, spending, delhi, military...</td>\n","      <td>[defence, ministry, government, aircraft, new,...</td>\n","      <td>[budget here detailed list all the new weapon ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>101</td>\n","      <td>2_minister_visit_defence_singh</td>\n","      <td>[minister, visit, defence, singh, meeting, pak...</td>\n","      <td>[islamabad, pakistan, pakistani, parrikar, mod...</td>\n","      <td>[minister, visit, defence, singh, meeting, pak...</td>\n","      <td>[minister visits pakistan defence minister ant...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>40</td>\n","      <td>3_china_chinese_minister_border</td>\n","      <td>[china, chinese, minister, border, troops, sin...</td>\n","      <td>[bhutan, nepal, china, beijing, asia, ladakh, ...</td>\n","      <td>[china, chinese, minister, border, troops, sin...</td>\n","      <td>[minister manohar parrikar has announced the a...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdac3082-4936-47cc-9c8f-dfcbeb389e18')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bdac3082-4936-47cc-9c8f-dfcbeb389e18 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bdac3082-4936-47cc-9c8f-dfcbeb389e18');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-41256b47-3b1b-481f-8df2-69fc0e6f5480\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41256b47-3b1b-481f-8df2-69fc0e6f5480')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-41256b47-3b1b-481f-8df2-69fc0e6f5480 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":194}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K0hiv7zc3E07"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lpWeWUSW3E07"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vEUglDCK3E07"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uuARJpTM3E07","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111751554,"user_tz":-330,"elapsed":904,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"97f7543e-deb3-4d44-c3fb-973d1bae8b48"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4730358197859054\n","c_umass 0.4730358197859054\n","c_npmi 0.03407923162909082\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"1I8IfMZp3E08"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YPnfiedI3E08"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DS-WB-0N3E08"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1Rk0-11d3E08"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7Ctj0VCT3E08","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["a8bd6c0949374e4ea7327c47d010330d","d7f74378271c423d91071d868f0115d0","a23e3a22b2d549858d980209d17031c7","0dcdf460f5c94209bef469104a823a1f","fe333b49551b4406a74489d95992dd6a","1881651d087f434e98bd8cf26a7c9a37","5728d4875bd748e19e5735658625be68","eebfbfc388f5458aaabef1eb254bafd1","bb5cc7f20824462ca8c07708cab44c85","acabf30866b9409682626196e164adb0","2b566451d77a407fab45c92957fc07a5"]},"executionInfo":{"status":"ok","timestamp":1706111760699,"user_tz":-330,"elapsed":9147,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3947f858-ccc4-484f-e992-b85612a6012e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a8bd6c0949374e4ea7327c47d010330d"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:55:55,920 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:56:00,281 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:56:00,283 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:56:00,295 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:56:00,300 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:56:00,857 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D0eBUOV83E08","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111760699,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5b5bb19a-6808-46fc-cc77-11a7f169da20"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    169          0_growth_fiscal_percent_year   \n","1      1    143        1_economy_growth_world_growing   \n","2      2     97          2_growth_report_percent_year   \n","3      3     91  3_economy_growth_government_economic   \n","\n","                                      Representation  \\\n","0  [growth, fiscal, percent, year, economy, quart...   \n","1  [economy, growth, world, growing, sector, year...   \n","2  [growth, report, percent, year, economy, grow,...   \n","3  [economy, growth, government, economic, rbi, s...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, deficit, growth, econom...   \n","1  [gdp, economy, economies, economic, growth, as...   \n","2  [gdp, economy, economies, growth, fiscal, econ...   \n","3  [recession, economy, gdp, economic, inflation,...   \n","\n","                                                 MMR  \\\n","0  [growth, fiscal, percent, year, economy, quart...   \n","1  [economy, growth, world, growing, sector, year...   \n","2  [growth, report, percent, year, economy, grow,...   \n","3  [economy, growth, government, economic, rbi, s...   \n","\n","                                 Representative_Docs  \n","0  [grew the rate percent the first quarter this ...  \n","1  [has grown from small economy which based agri...  \n","2  [projected grow percent and reach trillion the...  \n","3  [path recovery the reserve bank its monetary p...  "],"text/html":["\n","  <div id=\"df-3bb139d6-5425-49f9-8366-84bc3a1744dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>169</td>\n","      <td>0_growth_fiscal_percent_year</td>\n","      <td>[growth, fiscal, percent, year, economy, quart...</td>\n","      <td>[gdp, economy, fiscal, deficit, growth, econom...</td>\n","      <td>[growth, fiscal, percent, year, economy, quart...</td>\n","      <td>[grew the rate percent the first quarter this ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>143</td>\n","      <td>1_economy_growth_world_growing</td>\n","      <td>[economy, growth, world, growing, sector, year...</td>\n","      <td>[gdp, economy, economies, economic, growth, as...</td>\n","      <td>[economy, growth, world, growing, sector, year...</td>\n","      <td>[has grown from small economy which based agri...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>97</td>\n","      <td>2_growth_report_percent_year</td>\n","      <td>[growth, report, percent, year, economy, grow,...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, econ...</td>\n","      <td>[growth, report, percent, year, economy, grow,...</td>\n","      <td>[projected grow percent and reach trillion the...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>91</td>\n","      <td>3_economy_growth_government_economic</td>\n","      <td>[economy, growth, government, economic, rbi, s...</td>\n","      <td>[recession, economy, gdp, economic, inflation,...</td>\n","      <td>[economy, growth, government, economic, rbi, s...</td>\n","      <td>[path recovery the reserve bank its monetary p...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bb139d6-5425-49f9-8366-84bc3a1744dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3bb139d6-5425-49f9-8366-84bc3a1744dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3bb139d6-5425-49f9-8366-84bc3a1744dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45fb3c13-3a95-406f-acb6-98f0bca5aeda\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45fb3c13-3a95-406f-acb6-98f0bca5aeda')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45fb3c13-3a95-406f-acb6-98f0bca5aeda button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":202}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fyAfrUY23E08"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RQra3-773E08"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wCSxIElb3E08"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SGt6gIHH3E08","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111761861,"user_tz":-330,"elapsed":1173,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c0e77848-3310-4847-ccfa-47dfe8941437"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4294319370882091\n","c_umass 0.4294319370882091\n","c_npmi 0.05582720542335781\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"Rex2Jr-k3E08"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ixKT71uI3E09"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"llL8Gs0q3E09"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QmrPIHMA3E09"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2xS5Y8dr3E09","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["e80a6eeef6954b9e9cf151442067d7ee","41bc6eee06324226985e1aecfe0fbe63","04cf5378450444379145da5b034fdbf8","8ea8d44f04594fbeb8c17a4e769603ed","15643ee779114b21ab193b25be8dd1fd","46a7cf94d57547beb65b5c477148f2f3","562b5cadf300447ca41cb1e7a1b49454","e6ef6474678b455c987e733a29ef2adb","fb21a44c0dee46d1b5af534695644f68","649e3d42fc9b40a899c5af9b0d487827","a44bb95d69e341c38b147e83454dd0d5"]},"executionInfo":{"status":"ok","timestamp":1706111772070,"user_tz":-330,"elapsed":10211,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d0ec2c5e-bee4-4694-c09e-7df31d34cf8c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e80a6eeef6954b9e9cf151442067d7ee"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:56:06,973 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:56:11,331 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:56:11,332 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:56:11,345 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:56:11,350 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:56:11,932 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PrSYo6GG3E09","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111772070,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"29d6a6bc-aa0d-4ec9-83c3-d305b88a383c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    231  0_infrastructure_sector_government_investment   \n","1      1    155                 1_company_power_project_larsen   \n","2      2     66                   2_airport_gmr_stake_airports   \n","3      3     48                    3_company_crore_irb_project   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, power, project, larsen, toubro, cror...   \n","2  [airport, gmr, stake, airports, international,...   \n","3  [company, crore, irb, project, highway, infras...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, railways, construction, gdp, ...   \n","1  [gujarat, larsens, rajasthan, toubro, solar, l...   \n","2  [gmr, gml, gmm, airport, ggm, mumbai, delhi, g...   \n","3  [infrastructures, expressway, irbi, infrastruc...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, power, project, larsen, toubro, cror...   \n","2  [airport, gmr, stake, airports, international,...   \n","3  [company, crore, irb, project, highway, infras...   \n","\n","                                 Representative_Docs  \n","0  [key driver for economic growth and developmen...  \n","1  [company gmr infrastructure limited announced ...  \n","2  [major gmr group has bagged crore contract bui...  \n","3  [company irb infrastructure developers has sig...  "],"text/html":["\n","  <div id=\"df-63eb3b15-1cc0-42b4-883d-674fe160c626\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>231</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, gdp, ...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[key driver for economic growth and developmen...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>155</td>\n","      <td>1_company_power_project_larsen</td>\n","      <td>[company, power, project, larsen, toubro, cror...</td>\n","      <td>[gujarat, larsens, rajasthan, toubro, solar, l...</td>\n","      <td>[company, power, project, larsen, toubro, cror...</td>\n","      <td>[company gmr infrastructure limited announced ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>66</td>\n","      <td>2_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, ggm, mumbai, delhi, g...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>48</td>\n","      <td>3_company_crore_irb_project</td>\n","      <td>[company, crore, irb, project, highway, infras...</td>\n","      <td>[infrastructures, expressway, irbi, infrastruc...</td>\n","      <td>[company, crore, irb, project, highway, infras...</td>\n","      <td>[company irb infrastructure developers has sig...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63eb3b15-1cc0-42b4-883d-674fe160c626')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63eb3b15-1cc0-42b4-883d-674fe160c626 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63eb3b15-1cc0-42b4-883d-674fe160c626');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-74826b33-f968-44f6-92f2-b5c26f845c5c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-74826b33-f968-44f6-92f2-b5c26f845c5c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-74826b33-f968-44f6-92f2-b5c26f845c5c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":210}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4gOumNdV3E09"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T4ErXVu83E09"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EPAmGBqD3E09"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kgRQb3kD3E09","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111772849,"user_tz":-330,"elapsed":791,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"31851abe-1785-4c17-c00c-2d74f7c576b6"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5644027476464256\n","c_umass 0.5644027476464256\n","c_npmi 0.09152730247883316\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"_OWEEDBc3E09"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OCLUJbod3E09"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zCRlcxX13E0-"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HzrpHm493E0-","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117575139,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ecc473d2-5395-490c-9ed9-fb17e95ef508"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-064eb97e-fa2e-4387-9e53-913e254922f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-064eb97e-fa2e-4387-9e53-913e254922f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-064eb97e-fa2e-4387-9e53-913e254922f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-064eb97e-fa2e-4387-9e53-913e254922f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-847a7b7e-f338-4882-a279-adbdb92eba41\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-847a7b7e-f338-4882-a279-adbdb92eba41')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-847a7b7e-f338-4882-a279-adbdb92eba41 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f79dd9b3-9f7c-4ea8-9a71-00b5d634b131\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f79dd9b3-9f7c-4ea8-9a71-00b5d634b131 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":163}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7Ei5mV-B3E0-","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["1b7454e5c8404bc8a36d7e26d18e4a21","02af636da7cb4aac9a6c950a760fb9ea","2aca817347d840a8814ee31ace5f2b89","7b91b0bdb68c4519a0b911852200e926","e75c75debce642c8932759b96707547f","cb2a5dde65ea49fb9b4f7501b44549df","a57a195db2d64c739c6821762ad7cb34","12081dbe84d54ac4a9153d8545559341","cc53c45411f24c96a9a6485e251a765b","3a9bfa0aa0d9425f8372c7ba42b992b2","91e3e03d36b047f387efc809af371f94"]},"executionInfo":{"status":"ok","timestamp":1706117609754,"user_tz":-330,"elapsed":34618,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e9b449ef-f338-4706-a8c0-03d90218c11d"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1b7454e5c8404bc8a36d7e26d18e4a21"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:33:10,948 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:33:28,232 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:33:28,234 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:33:28,344 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:33:28,351 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:33:29,176 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kb3Jbnq03E0-","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117609754,"user_tz":-330,"elapsed":28,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"550d0c3e-cefd-4940-e9bc-831bfa5e990c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                      Name  \\\n","0      0    561  0_infrastructure_company_sector_projects   \n","1      1    502          1_defence_minister_army_pakistan   \n","2      2    479      2_climate_change_temperature_weather   \n","3      3    458             3_growth_economy_percent_year   \n","\n","                                      Representation  \\\n","0  [infrastructure, company, sector, projects, po...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [climate, change, temperature, weather, world,...   \n","3  [growth, economy, percent, year, fiscal, econo...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, construction, economy, indust...   \n","1  [modi, jammu, parrikar, army, military, delhi,...   \n","2  [climate, climatic, weather, monsoons, monsoon...   \n","3  [gdp, economy, fiscal, economies, growth, econ...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, company, sector, projects, po...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [climate, change, temperature, weather, world,...   \n","3  [growth, economy, percent, year, fiscal, econo...   \n","\n","                                 Representative_Docs  \n","0  [sector major driver the development the count...  \n","1  [minister manohar parrikar today arrived jammu...  \n","2  [characterized hot and dry many areas and the ...  \n","3  [grow next fiscal rbi the growth expected driv...  "],"text/html":["\n","  <div id=\"df-c49e9ce5-3571-45a8-b1e5-0cd513acc298\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>561</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>[infrastructure, company, sector, projects, po...</td>\n","      <td>[infrastructure, construction, economy, indust...</td>\n","      <td>[infrastructure, company, sector, projects, po...</td>\n","      <td>[sector major driver the development the count...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[modi, jammu, parrikar, army, military, delhi,...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[minister manohar parrikar today arrived jammu...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>479</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[climate, climatic, weather, monsoons, monsoon...</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[characterized hot and dry many areas and the ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>458</td>\n","      <td>3_growth_economy_percent_year</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, econ...</td>\n","      <td>[growth, economy, percent, year, fiscal, econo...</td>\n","      <td>[grow next fiscal rbi the growth expected driv...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c49e9ce5-3571-45a8-b1e5-0cd513acc298')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c49e9ce5-3571-45a8-b1e5-0cd513acc298 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c49e9ce5-3571-45a8-b1e5-0cd513acc298');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-414bdbf0-c40d-4124-8bc0-a389464d1586\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-414bdbf0-c40d-4124-8bc0-a389464d1586')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-414bdbf0-c40d-4124-8bc0-a389464d1586 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":165}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZHrHjt3m3E0-"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0GkcQTjf3E0-"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WBNdKvxx3E0-"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Uj7p4yPM3E0-"},"outputs":[],"source":["# import csv\n","\n","# # Get the values\n","# c_v_value = get_c_v(topic_model, df, topics)\n","# c_umass_value = get_c_umass(topic_model, df, topics)\n","# c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","# print('c_v', c_v_value)\n","# print('c_umass', c_v_value)\n","# print('c_npmi', c_npmi_value)\n","\n","# # Specify the file path\n","# csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# # Write values\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","# writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","# print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"5XqVz-omh_Ph"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117609754,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"288dc25d-b7e0-4647-980f-30942df9c21a","id":"lAIUWh0qh_Pi"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                      Name  \\\n","0            Indian climate  0_infrastructure_company_sector_projects   \n","1            Indian climate      2_climate_change_temperature_weather   \n","2            Indian climate      2_climate_change_temperature_weather   \n","3            Indian climate      2_climate_change_temperature_weather   \n","4            Indian climate      2_climate_change_temperature_weather   \n","...                     ...                                       ...   \n","1995  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1996  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1997  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1998  Indian infrastructure  0_infrastructure_company_sector_projects   \n","1999  Indian infrastructure  0_infrastructure_company_sector_projects   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-abb453d9-d68b-425a-996d-68de5509bdac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_infrastructure_company_sector_projects</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abb453d9-d68b-425a-996d-68de5509bdac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abb453d9-d68b-425a-996d-68de5509bdac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abb453d9-d68b-425a-996d-68de5509bdac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1bb92cff-cb6a-4b15-afb2-ab613a8a2f39\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1bb92cff-cb6a-4b15-afb2-ab613a8a2f39')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1bb92cff-cb6a-4b15-afb2-ab613a8a2f39 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c4d110af-8a44-4371-8fab-e6f3d6549347\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c4d110af-8a44-4371-8fab-e6f3d6549347 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117609754,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"586ee770-efd4-4467-8d2e-caf660c987d4","id":"f6E08oKeh_Pj"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-4db8d7cd-e282-430d-b413-901afcf0635c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4db8d7cd-e282-430d-b413-901afcf0635c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4db8d7cd-e282-430d-b413-901afcf0635c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4db8d7cd-e282-430d-b413-901afcf0635c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c50b58a8-879c-4bbb-98a4-f2977cd9b0d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c50b58a8-879c-4bbb-98a4-f2977cd9b0d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c50b58a8-879c-4bbb-98a4-f2977cd9b0d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f620884a-06d6-49c9-b9e7-7edd3350e529\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f620884a-06d6-49c9-b9e7-7edd3350e529 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":172}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"XRw0-y3Wh_Pj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"AvE24b9rh_Pj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117609755,"user_tz":-330,"elapsed":25,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0271f163-bb5f-4484-fde6-a7bac7e5abea","id":"0FsLQEQMh_Pj"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'growth', 'defence'], dtype=object))"]},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117609755,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a50c6831-a36b-4254-9fe0-3c8e5904462a","id":"zsc_mLPBh_Pj"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-f40596f5-0fcc-4ba2-a8f4-85f0a6ee6bf7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f40596f5-0fcc-4ba2-a8f4-85f0a6ee6bf7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f40596f5-0fcc-4ba2-a8f4-85f0a6ee6bf7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f40596f5-0fcc-4ba2-a8f4-85f0a6ee6bf7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63fee0a1-17fb-4c4c-85dd-9d269c539c30\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63fee0a1-17fb-4c4c-85dd-9d269c539c30')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63fee0a1-17fb-4c4c-85dd-9d269c539c30 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_269a52f5-c307-4788-a54d-69e613cc5b08\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_269a52f5-c307-4788-a54d-69e613cc5b08 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":176}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117609755,"user_tz":-330,"elapsed":21,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b34d9985-9e36-44eb-a535-8b1471bf532c","id":"CVgzUdxwh_Pj"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[475,   6,   7,  12],\n","       [  0, 495,   0,   5],\n","       [  3,   1, 448,  48],\n","       [  1,   0,   3, 496]])"]},"metadata":{},"execution_count":177}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1706117611842,"user_tz":-330,"elapsed":2105,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"6c262f0e-5cad-407b-854a-33094e28f20f","id":"wfHXXaN2h_Pk"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117611842,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"8eadc100-b0b7-4c9b-8084-b5cd82de24e4","id":"ydKTK3wWh_Pk"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.99      0.95      0.97       500\n","       defence       0.99      0.99      0.99       500\n","        growth       0.98      0.90      0.94       500\n","infrastructure       0.88      0.99      0.93       500\n","\n","      accuracy                           0.96      2000\n","     macro avg       0.96      0.96      0.96      2000\n","  weighted avg       0.96      0.96      0.96      2000\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6Xhzpbf13E0_"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"uinUtuEz3E0_"},"source":["### SVD-Agg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z90h9pb93E0_"},"outputs":[],"source":["from sklearn.decomposition import TruncatedSVD\n","from sklearn.cluster import AgglomerativeClustering\n","experiment='SVD/Agg'\n","umap_model = TruncatedSVD(n_components=100, random_state=42)\n","hdbscan_model = AgglomerativeClustering(n_clusters=4)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"rtoSuEqm3E0_"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"grq1P-Yk3E0_"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lqlhKnUu3E0_","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111809014,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7a0165eb-3e68-4aeb-803f-5db22fdc8d91"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-3876b1ac-2c23-4e69-85d6-cc4d35f73962\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3876b1ac-2c23-4e69-85d6-cc4d35f73962')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3876b1ac-2c23-4e69-85d6-cc4d35f73962 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3876b1ac-2c23-4e69-85d6-cc4d35f73962');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3ed7a2fb-4e67-40e8-9989-ced4c8e2c366\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3ed7a2fb-4e67-40e8-9989-ced4c8e2c366')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3ed7a2fb-4e67-40e8-9989-ced4c8e2c366 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2cdab6f9-242b-4f0a-9c49-2597072eaee8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2cdab6f9-242b-4f0a-9c49-2597072eaee8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":225}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8IxF4nIs3E0_","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["979f6848b5e34ce6aecd752ed8176f92","ef79033cf44c41bea55e8f0791719e7c","e819a980652d40769f89fb3589322f07","d54b0ce010154efd8b996f4149b9c234","be35cfebfd27419ca04a24dd7299ad93","ad12603607a247e59827a00367259cdc","5040ae0c960349b391a7ccf08051a360","c3cc67f02a6c4810843c54c31234fa77","01ee64ed183647acaebe3bedc2d18d02","b4a95735624f4b1abd4103852dd235e1","39ebfa04aa614861ade2ba92a5116490"]},"executionInfo":{"status":"ok","timestamp":1706111815232,"user_tz":-330,"elapsed":6223,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"eb207fe1-efa9-48e5-bd3b-0e5b62fd564a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"979f6848b5e34ce6aecd752ed8176f92"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:56:54,277 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:56:54,394 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:56:54,399 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:56:54,434 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:56:54,452 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:56:55,242 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Fw2ImbSj3E1A","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111815232,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7cd5bd44-d02c-4be4-80b8-1c8d975b9abd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                Name  \\\n","0      0    174   0_climate_change_policy_emissions   \n","1      1    116    1_climate_season_tropical_summer   \n","2      2    105              2_heat_air_people_skin   \n","3      3    105  3_climate_change_global_adaptation   \n","\n","                                      Representation  \\\n","0  [climate, change, policy, emissions, minister,...   \n","1  [climate, season, tropical, summer, temperatur...   \n","2  [heat, air, people, skin, temperature, health,...   \n","3  [climate, change, global, adaptation, warming,...   \n","\n","                                             KeyBERT  \\\n","0  [climate, emissions, modi, kyoto, negotiations...   \n","1  [climates, subtropical, climate, kerala, monso...   \n","2  [climate, weather, temperature, summers, summe...   \n","3  [climate, droughts, adaptation, agriculture, f...   \n","\n","                                                 MMR  \\\n","0  [climate, change, policy, emissions, minister,...   \n","1  [climate, season, tropical, summer, temperatur...   \n","2  [heat, air, people, skin, temperature, health,...   \n","3  [climate, change, global, adaptation, warming,...   \n","\n","                                 Representative_Docs  \n","0  [change minister says the world wait addresses...  \n","1  [being country located south asia has very div...  \n","2  [quite different from the other countries the ...  \n","3  [and climate change this report published part...  "],"text/html":["\n","  <div id=\"df-2091807d-74bb-4c67-9940-d108d84de483\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>174</td>\n","      <td>0_climate_change_policy_emissions</td>\n","      <td>[climate, change, policy, emissions, minister,...</td>\n","      <td>[climate, emissions, modi, kyoto, negotiations...</td>\n","      <td>[climate, change, policy, emissions, minister,...</td>\n","      <td>[change minister says the world wait addresses...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>116</td>\n","      <td>1_climate_season_tropical_summer</td>\n","      <td>[climate, season, tropical, summer, temperatur...</td>\n","      <td>[climates, subtropical, climate, kerala, monso...</td>\n","      <td>[climate, season, tropical, summer, temperatur...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>105</td>\n","      <td>2_heat_air_people_skin</td>\n","      <td>[heat, air, people, skin, temperature, health,...</td>\n","      <td>[climate, weather, temperature, summers, summe...</td>\n","      <td>[heat, air, people, skin, temperature, health,...</td>\n","      <td>[quite different from the other countries the ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>105</td>\n","      <td>3_climate_change_global_adaptation</td>\n","      <td>[climate, change, global, adaptation, warming,...</td>\n","      <td>[climate, droughts, adaptation, agriculture, f...</td>\n","      <td>[climate, change, global, adaptation, warming,...</td>\n","      <td>[and climate change this report published part...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2091807d-74bb-4c67-9940-d108d84de483')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2091807d-74bb-4c67-9940-d108d84de483 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2091807d-74bb-4c67-9940-d108d84de483');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1a633d44-b238-42cb-86c5-aef0b4b814f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a633d44-b238-42cb-86c5-aef0b4b814f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1a633d44-b238-42cb-86c5-aef0b4b814f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":227}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7vvzVEfr3E1A"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ab1d2Mka3E1A"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ga-NfyWF3E1A"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I2RrBSLS3E1A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111816377,"user_tz":-330,"elapsed":1156,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"41996f9c-88ee-44be-a684-71c6f69e3f31"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6718427503725364\n","c_umass 0.6718427503725364\n","c_npmi 0.07613135910964411\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"ygzawcMK3E1A"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bz8wABQt3E1B"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f4B3F1uU3E1B"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OCNOOR9H3E1B","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["e5b98b6c1d1c4b3697d35d5a464df4fd","755d60029eae4d9aa74bed566c008780","731d28e24fb848a5ab30b451092743ff","c4e2e09ab7694886944ae2063373bc30","f8988912289e4a228a80f35ec4b30b5c","a4e0e76d6b2d4941b657a7db9d0c3ccc","23514f66c9f1481cab58e9b0626b4015","d441175084c645128c5fd1e5a5d63a01","957ff93a208c462f9123611385cbd9da","743e8be767c64a7baa01c57199bf57b6","0c262869c5a54ef2a2bee7b458228092"]},"executionInfo":{"status":"ok","timestamp":1706111821797,"user_tz":-330,"elapsed":5422,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1e54d0bf-355d-4edc-cdab-f94d61e7d2bd"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e5b98b6c1d1c4b3697d35d5a464df4fd"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:01,062 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:01,119 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:01,125 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:01,153 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:01,167 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:01,740 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RUy6X3DJ3E1B","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111821798,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"afb1ac2e-b114-47ca-d52b-29b42508b4a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    189  0_defence_forces_government_ministry   \n","1      1    124     1_minister_pakistan_china_defence   \n","2      2     94        2_army_forces_kashmir_pakistan   \n","3      3     93        3_minister_visit_defence_singh   \n","\n","                                      Representation  \\\n","0  [defence, forces, government, ministry, new, m...   \n","1  [minister, pakistan, china, defence, country, ...   \n","2  [army, forces, kashmir, pakistan, soldiers, si...   \n","3  [minister, visit, defence, singh, meeting, tal...   \n","\n","                                             KeyBERT  \\\n","0  [crore, procurement, spending, budget, delhi, ...   \n","1  [pakistan, pakistani, kashmir, terrorism, bjp,...   \n","2  [jammu, kashmir, pakistan, pradesh, pakistani,...   \n","3  [islamabad, pakistan, pakistani, modi, rajnath...   \n","\n","                                                 MMR  \\\n","0  [defence, forces, government, ministry, new, m...   \n","1  [minister, pakistan, china, defence, country, ...   \n","2  [army, forces, kashmir, pakistan, soldiers, si...   \n","3  [minister, visit, defence, singh, meeting, tal...   \n","\n","                                 Representative_Docs  \n","0  [budget here detailed list all the new weapon ...  \n","1  [minister nirmala sitharaman has the country c...  \n","2  [minister rajnath singh who visited the line c...  \n","3  [minister rajnath singh islamabad meet his pak...  "],"text/html":["\n","  <div id=\"df-d25b65f9-0d05-4730-b287-b80dfea7b642\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>0_defence_forces_government_ministry</td>\n","      <td>[defence, forces, government, ministry, new, m...</td>\n","      <td>[crore, procurement, spending, budget, delhi, ...</td>\n","      <td>[defence, forces, government, ministry, new, m...</td>\n","      <td>[budget here detailed list all the new weapon ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>124</td>\n","      <td>1_minister_pakistan_china_defence</td>\n","      <td>[minister, pakistan, china, defence, country, ...</td>\n","      <td>[pakistan, pakistani, kashmir, terrorism, bjp,...</td>\n","      <td>[minister, pakistan, china, defence, country, ...</td>\n","      <td>[minister nirmala sitharaman has the country c...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>94</td>\n","      <td>2_army_forces_kashmir_pakistan</td>\n","      <td>[army, forces, kashmir, pakistan, soldiers, si...</td>\n","      <td>[jammu, kashmir, pakistan, pradesh, pakistani,...</td>\n","      <td>[army, forces, kashmir, pakistan, soldiers, si...</td>\n","      <td>[minister rajnath singh who visited the line c...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>93</td>\n","      <td>3_minister_visit_defence_singh</td>\n","      <td>[minister, visit, defence, singh, meeting, tal...</td>\n","      <td>[islamabad, pakistan, pakistani, modi, rajnath...</td>\n","      <td>[minister, visit, defence, singh, meeting, tal...</td>\n","      <td>[minister rajnath singh islamabad meet his pak...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d25b65f9-0d05-4730-b287-b80dfea7b642')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d25b65f9-0d05-4730-b287-b80dfea7b642 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d25b65f9-0d05-4730-b287-b80dfea7b642');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b400e8ec-1737-4724-b752-1ff39a423399\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b400e8ec-1737-4724-b752-1ff39a423399')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b400e8ec-1737-4724-b752-1ff39a423399 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":235}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LCUy2Lq53E1B"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K5_0qMjd3E1B"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Lk0DwnVd3E1B"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B802B8rP3E1B","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111822537,"user_tz":-330,"elapsed":752,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a880576f-436d-4ef3-e205-388e13b489e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.45998188031991694\n","c_umass 0.45998188031991694\n","c_npmi 0.02940449037785098\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"8CQacrJn3E1B"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CaCO3av_3E1C"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"frZGSGLk3E1C"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KwT_ktSN3E1C"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ft1VzfqI3E1C","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["4fdc8d75993a42d3868b27745ea600ce","a783c30c7a0949e6b01f0e872a7acec8","7eb85b9361c94d71acd33d5ef2a8c484","84c5e25b29d44db0ae645ef8a2e3b6c3","cbaf1be8a1a94088b69b710859b54009","d139bd84938543ab8d88edd35608db01","5ab5684b0c214a50ae197ba98e788ed4","d3f914fe3f6242b682fd99027c5da881","670e7bde18e04048b59ae3e69ab96be1","f9bfa8a85f0b426f9e1c9da8c421c977","68b2e8e018b54d5e92ee8f91a776da71"]},"executionInfo":{"status":"ok","timestamp":1706111827946,"user_tz":-330,"elapsed":5411,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"edb8680c-0176-42f1-8c12-b83c583682d5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4fdc8d75993a42d3868b27745ea600ce"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:07,003 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:07,229 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:07,234 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:07,283 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:07,296 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:07,997 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gC6t2qKS3E1C","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111827946,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3187e0c6-056f-4a2a-c7f6-344907dd83f0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0      0    177          0_growth_percent_grow_fiscal   \n","1      1    169        1_growth_economy_world_growing   \n","2      2    102  2_growth_economy_government_economic   \n","3      3     52             3_quarter_growth_grew_gdp   \n","\n","                                      Representation  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [growth, economy, world, growing, sector, year...   \n","2  [growth, economy, government, economic, fiscal...   \n","3  [quarter, growth, grew, gdp, year, data, perce...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, fiscal, economies, growth, esti...   \n","1  [gdp, economy, economies, economic, growth, as...   \n","2  [recession, gdp, economy, fiscal, economic, ru...   \n","3  [gdp, economy, growth, fiscal, economic, quart...   \n","\n","                                                 MMR  \\\n","0  [growth, percent, grow, fiscal, year, economy,...   \n","1  [growth, economy, world, growing, sector, year...   \n","2  [growth, economy, government, economic, fiscal...   \n","3  [quarter, growth, grew, gdp, year, data, perce...   \n","\n","                                 Representative_Docs  \n","0  [clock growth this fiscal economic survey the ...  \n","1  [has grown from small economy which based agri...  \n","2  [may contract the second quarter due the crisi...  \n","3  [grows period the economy grew double digits f...  "],"text/html":["\n","  <div id=\"df-0c208e7f-3321-46b9-9222-a306aac4d7e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>177</td>\n","      <td>0_growth_percent_grow_fiscal</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, esti...</td>\n","      <td>[growth, percent, grow, fiscal, year, economy,...</td>\n","      <td>[clock growth this fiscal economic survey the ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>169</td>\n","      <td>1_growth_economy_world_growing</td>\n","      <td>[growth, economy, world, growing, sector, year...</td>\n","      <td>[gdp, economy, economies, economic, growth, as...</td>\n","      <td>[growth, economy, world, growing, sector, year...</td>\n","      <td>[has grown from small economy which based agri...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>102</td>\n","      <td>2_growth_economy_government_economic</td>\n","      <td>[growth, economy, government, economic, fiscal...</td>\n","      <td>[recession, gdp, economy, fiscal, economic, ru...</td>\n","      <td>[growth, economy, government, economic, fiscal...</td>\n","      <td>[may contract the second quarter due the crisi...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>52</td>\n","      <td>3_quarter_growth_grew_gdp</td>\n","      <td>[quarter, growth, grew, gdp, year, data, perce...</td>\n","      <td>[gdp, economy, growth, fiscal, economic, quart...</td>\n","      <td>[quarter, growth, grew, gdp, year, data, perce...</td>\n","      <td>[grows period the economy grew double digits f...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c208e7f-3321-46b9-9222-a306aac4d7e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c208e7f-3321-46b9-9222-a306aac4d7e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c208e7f-3321-46b9-9222-a306aac4d7e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-751be9d7-5df4-4d64-acaa-ae380acef3a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-751be9d7-5df4-4d64-acaa-ae380acef3a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-751be9d7-5df4-4d64-acaa-ae380acef3a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":243}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xUfRu-ce3E1C"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HhWU6lWR3E1C"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iprdipcQ3E1C"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7M2QPvbi3E1C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111829141,"user_tz":-330,"elapsed":1207,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"69461087-4afd-42a2-d7a0-aeb946d3ca02"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.4252261258922052\n","c_umass 0.4252261258922052\n","c_npmi 0.04722291023033978\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"aTj4X04l3E1C"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d2OgE7uZ3E1D"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zPAj9jjI3E1D"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C-j81jhv3E1D"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"z6i0cpZl3E1D","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["f641bfd161a440c59b9909a14520ba44","d996e27dc53a4189bd884cceac23db70","6f674ba03a8a40408567602e2768d23a","edcf84d7d60b4b90865c52dc2206198a","50d66880503d4186b534d2f81ae217ac","83e3234b4f0449d9a25c99c78737b89c","7232c49537794a378508d24a5295ba80","1c8c503400a24b63a634f9c2c6361c1b","aef591c683cf4fabab95bbe8d6e8e3d6","326043f71c1d4684845eabe71ff03daa","b67823e82e7c4d2eb28b5e244f97ce7d"]},"executionInfo":{"status":"ok","timestamp":1706111834335,"user_tz":-330,"elapsed":5196,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b0d18a2b-de3b-4ffe-bfe1-522d637aa200"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f641bfd161a440c59b9909a14520ba44"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:13,795 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:13,966 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:13,972 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:14,008 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:14,021 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:14,577 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-FIEaO5G3E1D","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706111834335,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a5ab42cb-c833-47c5-d94f-23bef96937a1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0      0    218  0_infrastructure_sector_government_investment   \n","1      1    176                  1_company_project_power_solar   \n","2      2     56                  2_larsen_toubro_company_crore   \n","3      3     50              3_airport_gmr_stake_international   \n","\n","                                      Representation  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, solar, construction,...   \n","2  [larsen, toubro, company, crore, power, major,...   \n","3  [airport, gmr, stake, international, airports,...   \n","\n","                                             KeyBERT  \\\n","0  [infrastructure, railways, construction, secto...   \n","1  [gujarat, renewable, adani, maharashtra, infra...   \n","2  [larsens, larsen, toubro, companies, company, ...   \n","3  [gmr, gml, gmm, airport, gurgaon, mumbai, hyde...   \n","\n","                                                 MMR  \\\n","0  [infrastructure, sector, government, investmen...   \n","1  [company, project, power, solar, construction,...   \n","2  [larsen, toubro, company, crore, power, major,...   \n","3  [airport, gmr, stake, international, airports,...   \n","\n","                                 Representative_Docs  \n","0  [not just sector but the backbone the growth a...  \n","1  [company gmr energy ltd tuesday has signed agr...  \n","2  [major larsen toubro engineering and construct...  \n","3  [firm gmr infrastructure has won engineering p...  "],"text/html":["\n","  <div id=\"df-c134d420-25c9-40a1-abe0-64446279df08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>218</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, secto...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[not just sector but the backbone the growth a...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>176</td>\n","      <td>1_company_project_power_solar</td>\n","      <td>[company, project, power, solar, construction,...</td>\n","      <td>[gujarat, renewable, adani, maharashtra, infra...</td>\n","      <td>[company, project, power, solar, construction,...</td>\n","      <td>[company gmr energy ltd tuesday has signed agr...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>56</td>\n","      <td>2_larsen_toubro_company_crore</td>\n","      <td>[larsen, toubro, company, crore, power, major,...</td>\n","      <td>[larsens, larsen, toubro, companies, company, ...</td>\n","      <td>[larsen, toubro, company, crore, power, major,...</td>\n","      <td>[major larsen toubro engineering and construct...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>50</td>\n","      <td>3_airport_gmr_stake_international</td>\n","      <td>[airport, gmr, stake, international, airports,...</td>\n","      <td>[gmr, gml, gmm, airport, gurgaon, mumbai, hyde...</td>\n","      <td>[airport, gmr, stake, international, airports,...</td>\n","      <td>[firm gmr infrastructure has won engineering p...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c134d420-25c9-40a1-abe0-64446279df08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c134d420-25c9-40a1-abe0-64446279df08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c134d420-25c9-40a1-abe0-64446279df08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f6e957e0-297d-4466-8ddf-a1c2588a15b4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f6e957e0-297d-4466-8ddf-a1c2588a15b4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f6e957e0-297d-4466-8ddf-a1c2588a15b4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":251}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"--_VWRXV3E1D"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JIvSHxF93E1D"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RdXSrJ843E1D"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DjSdERD93E1D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111835496,"user_tz":-330,"elapsed":1176,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c0f9ee86-4bb3-426a-a187-60b6b15daa57"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5007327174816149\n","c_umass 0.5007327174816149\n","c_npmi 0.06441685909528398\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"Ne25kMc13E1D"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mlsPDNZq3E1D"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i1rBLZBT3E1D"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ucbqPVPQ3E1E","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117658450,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"614726bd-65e6-423e-d731-6ffc2bf16adb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-1d5e4862-8c44-4168-ab91-4309cf1a541d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d5e4862-8c44-4168-ab91-4309cf1a541d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1d5e4862-8c44-4168-ab91-4309cf1a541d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1d5e4862-8c44-4168-ab91-4309cf1a541d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f73aff5f-482a-47c9-a467-81df86cfbefa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f73aff5f-482a-47c9-a467-81df86cfbefa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f73aff5f-482a-47c9-a467-81df86cfbefa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ad1e6fba-e5f0-4c16-b9d6-62abd3fdee70\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ad1e6fba-e5f0-4c16-b9d6-62abd3fdee70 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":182}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bdyk1CW73E1E","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["8797c3f1e2914343bfff1f8f36fa84bf","2538dfb61c96469d9ec2b6392601c6f9","095d44f63e144ea2a75ebab061421664","3fd5edfacfbf4273baa35ea770453e1a","f7d80b2d43ba447086332fa55885cabe","115b69cfc89b4b9489d8c9592134aaec","4be7dbbad8404869b97f3aecaaaee3f1","c05d17cd29b84d78ab6eedc34c764b9e","8ed895a7ef46421983c6ee9213225967","3d93e9eba3db42b38507e8c37c3d9ad1","05f89e4e5ddd46f88685a79f15bc0d80"]},"executionInfo":{"status":"ok","timestamp":1706117675953,"user_tz":-330,"elapsed":17506,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4823a766-41c2-4c33-fb66-f5e96fdc9a0b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8797c3f1e2914343bfff1f8f36fa84bf"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:34:32,988 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:34:33,193 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:34:33,201 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:34:33,427 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:34:33,434 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:34:34,192 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6LJMG0zg3E1E","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706117675953,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0d40c57b-3be9-47c3-c186-ff75a7948948"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                    Name  \\\n","0      0    542           0_growth_economy_year_percent   \n","1      1    502  1_infrastructure_company_power_project   \n","2      2    490        2_defence_minister_army_pakistan   \n","3      3    466    3_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [growth, economy, year, percent, fiscal, econo...   \n","1  [infrastructure, company, power, project, proj...   \n","2  [defence, minister, army, pakistan, forces, si...   \n","3  [climate, change, temperature, weather, season...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, economies, growth, fiscal, infl...   \n","1  [infrastructure, sector, industry, constructio...   \n","2  [jammu, parrikar, singh, pakistan, modi, kashm...   \n","3  [climate, climatic, weather, monsoons, monsoon...   \n","\n","                                                 MMR  \\\n","0  [growth, economy, year, percent, fiscal, econo...   \n","1  [infrastructure, company, power, project, proj...   \n","2  [defence, minister, army, pakistan, forces, si...   \n","3  [climate, change, temperature, weather, season...   \n","\n","                                 Representative_Docs  \n","0  [grow next fiscal rbi the growth expected driv...  \n","1  [companies have been the main beneficiary the ...  \n","2  [minister rajnath singh wednesday the armed fo...  \n","3  [the climate includes range climate types and ...  "],"text/html":["\n","  <div id=\"df-569be3ed-b8dc-4041-8d82-95543e5e8931\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>542</td>\n","      <td>0_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, infl...</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[grow next fiscal rbi the growth expected driv...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>[infrastructure, company, power, project, proj...</td>\n","      <td>[infrastructure, sector, industry, constructio...</td>\n","      <td>[infrastructure, company, power, project, proj...</td>\n","      <td>[companies have been the main beneficiary the ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>490</td>\n","      <td>2_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[jammu, parrikar, singh, pakistan, modi, kashm...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[minister rajnath singh wednesday the armed fo...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>466</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, season...</td>\n","      <td>[climate, climatic, weather, monsoons, monsoon...</td>\n","      <td>[climate, change, temperature, weather, season...</td>\n","      <td>[the climate includes range climate types and ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-569be3ed-b8dc-4041-8d82-95543e5e8931')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-569be3ed-b8dc-4041-8d82-95543e5e8931 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-569be3ed-b8dc-4041-8d82-95543e5e8931');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b55b3bd2-215c-4d49-a93e-53877106afa7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b55b3bd2-215c-4d49-a93e-53877106afa7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b55b3bd2-215c-4d49-a93e-53877106afa7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":184}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"__KJw9n13E1E"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EL-rv9nP3E1E"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J7WaNmJA3E1E"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gL2apc7W3E1E"},"outputs":[],"source":["# import csv\n","\n","# # Get the values\n","# c_v_value = get_c_v(topic_model, df, topics)\n","# c_umass_value = get_c_umass(topic_model, df, topics)\n","# c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","# print('c_v', c_v_value)\n","# print('c_umass', c_v_value)\n","# print('c_npmi', c_npmi_value)\n","\n","# # Specify the file path\n","# csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# # Write values\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","# writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","# print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"UgvqWMmfiUMG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117675953,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c551c4da-8b14-48e2-f8ec-f5a81f5c961f","id":"B0-BfjcwiUMG"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                    Name  \\\n","0            Indian climate  1_infrastructure_company_power_project   \n","1            Indian climate    3_climate_change_temperature_weather   \n","2            Indian climate    3_climate_change_temperature_weather   \n","3            Indian climate    3_climate_change_temperature_weather   \n","4            Indian climate    3_climate_change_temperature_weather   \n","...                     ...                                     ...   \n","1995  Indian infrastructure  1_infrastructure_company_power_project   \n","1996  Indian infrastructure  1_infrastructure_company_power_project   \n","1997  Indian infrastructure  1_infrastructure_company_power_project   \n","1998  Indian infrastructure  1_infrastructure_company_power_project   \n","1999  Indian infrastructure  1_infrastructure_company_power_project   \n","\n","               Topic          Actual  \n","0     infrastructure         climate  \n","1            climate         climate  \n","2            climate         climate  \n","3            climate         climate  \n","4            climate         climate  \n","...              ...             ...  \n","1995  infrastructure  infrastructure  \n","1996  infrastructure  infrastructure  \n","1997  infrastructure  infrastructure  \n","1998  infrastructure  infrastructure  \n","1999  infrastructure  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-7b3b7655-ffdb-4931-9050-9d4994dc4491\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_temperature_weather</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>1_infrastructure_company_power_project</td>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b3b7655-ffdb-4931-9050-9d4994dc4491')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b3b7655-ffdb-4931-9050-9d4994dc4491 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b3b7655-ffdb-4931-9050-9d4994dc4491');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34fc3a70-c926-43b3-914d-904a4a9b5154\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34fc3a70-c926-43b3-914d-904a4a9b5154')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34fc3a70-c926-43b3-914d-904a4a9b5154 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_29539685-0cfc-4b85-9c49-41e398cdce69\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_29539685-0cfc-4b85-9c49-41e398cdce69 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":190}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":19,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1781fa70-ce02-40cf-d1de-e9652b65c609","id":"D821yLktiUMG"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-ae6bdd37-df5d-4ba7-b73a-fad4bb7b70de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae6bdd37-df5d-4ba7-b73a-fad4bb7b70de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae6bdd37-df5d-4ba7-b73a-fad4bb7b70de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae6bdd37-df5d-4ba7-b73a-fad4bb7b70de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-331e83f0-25e3-43af-ac43-b9d000e1b52c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-331e83f0-25e3-43af-ac43-b9d000e1b52c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-331e83f0-25e3-43af-ac43-b9d000e1b52c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7d43c394-bec9-4bf1-9368-5dbff16e404e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7d43c394-bec9-4bf1-9368-5dbff16e404e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":191}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"PcBAbsKjiUMH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"OKBDl4HViUMH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"952a774a-3ecb-43f5-8bdc-c5368303c2ec","id":"CuerITp7iUMH"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['infrastructure', 'climate', 'defence', 'growth'], dtype=object))"]},"metadata":{},"execution_count":194}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b6f425b9-0434-4072-fde9-5245a3d99a2d","id":"8dvj74p7iUMH"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual           Topic\n","0            climate  infrastructure\n","1            climate         climate\n","2            climate         climate\n","3            climate         climate\n","4            climate         climate\n","...              ...             ...\n","1995  infrastructure  infrastructure\n","1996  infrastructure  infrastructure\n","1997  infrastructure  infrastructure\n","1998  infrastructure  infrastructure\n","1999  infrastructure  infrastructure\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-56d2ee99-26c6-4d14-9fd0-5fee71478d2b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56d2ee99-26c6-4d14-9fd0-5fee71478d2b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-56d2ee99-26c6-4d14-9fd0-5fee71478d2b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-56d2ee99-26c6-4d14-9fd0-5fee71478d2b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5a11f22-6119-43fa-8cb5-61500a4639c3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5a11f22-6119-43fa-8cb5-61500a4639c3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5a11f22-6119-43fa-8cb5-61500a4639c3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_afc24a66-2b0d-4088-8cf4-454c5d6d56aa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_afc24a66-2b0d-4088-8cf4-454c5d6d56aa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":195}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"41122f58-d165-4bf3-b482-775a6117e190","id":"S6XuWlrLiUMH"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[465,   3,  21,  11],\n","       [  0, 482,  11,   7],\n","       [  1,   4, 485,  10],\n","       [  0,   1,  25, 474]])"]},"metadata":{},"execution_count":196}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a945e569-5e6c-41a5-abd0-8c06e0d5fb3d","id":"564aZulZiUMH"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117675954,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"bac278a9-6aeb-4b88-bca7-a19129e9650c","id":"RIb69tDziUMH"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       1.00      0.93      0.96       500\n","       defence       0.98      0.96      0.97       500\n","        growth       0.89      0.97      0.93       500\n","infrastructure       0.94      0.95      0.95       500\n","\n","      accuracy                           0.95      2000\n","     macro avg       0.96      0.95      0.95      2000\n","  weighted avg       0.96      0.95      0.95      2000\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q4zDHhLG3E1E"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"ucxo1bjx421J"},"source":["## HDBSCAN"]},{"cell_type":"markdown","metadata":{"id":"nxCPpBi_421Y"},"source":["### PCA-HDBSCAN"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QMi_Zk-S421Y"},"outputs":[],"source":["from hdbscan import HDBSCAN\n","experiment = 'PCA/HDBSCAN'\n","umap_model = PCA()\n","hdbscan_model = HDBSCAN(min_cluster_size=5, prediction_data=True)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qZARm6iU6OaE","colab":{"base_uri":"https://localhost:8080/","height":75},"executionInfo":{"status":"ok","timestamp":1706111855380,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a592a59f-103d-480a-a1e2-efad7c362b3c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["HDBSCAN(prediction_data=True)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>HDBSCAN(prediction_data=True)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">HDBSCAN</label><div class=\"sk-toggleable__content\"><pre>HDBSCAN(prediction_data=True)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":265}],"source":["topic_model.hdbscan_model"]},{"cell_type":"markdown","metadata":{"id":"WXwrSxZz421Y"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q4Iwm2OB421Z"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v_EslsVs421Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111855380,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"27a8d613-350c-49b0-cd52-e245e64bf21a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-a5dfd812-277b-40eb-9d92-3fbb9a396e3c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5dfd812-277b-40eb-9d92-3fbb9a396e3c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5dfd812-277b-40eb-9d92-3fbb9a396e3c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5dfd812-277b-40eb-9d92-3fbb9a396e3c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b896707f-1257-4148-b863-c010fe58a926\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b896707f-1257-4148-b863-c010fe58a926')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b896707f-1257-4148-b863-c010fe58a926 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_925b760d-8fa4-4f41-be2d-52c56f8ffe03\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_925b760d-8fa4-4f41-be2d-52c56f8ffe03 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":267}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VEWKwua9421Z","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["96bddc833d1843eeafdddc1b636b346f","3c1211b35f1a4287bf57c125f59238df","a6ba65e1491647a79316f6094705802f","8e6a587621cc40e1a3fd8e873e7c000a","b02025d0bec543618aa104b5a16efe0c","0e9fbbefb89248d6a3a94613d6c85c3b","0b120be325a74d639aeac594eab49a45","9f7c6ea23f8a474aa180ecfd43425216","0147bd9cdc0e4a8099f2a68cbdbd0625","c1aee148bf2742ae92b7013e56bf211c","ae39f6f657034d5aa95c9bd5a0b95532"]},"executionInfo":{"status":"ok","timestamp":1706111861385,"user_tz":-330,"elapsed":6011,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a69cc3e3-3743-4117-989d-cc369d870b0e"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"96bddc833d1843eeafdddc1b636b346f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:40,239 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:40,341 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:40,345 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:40,908 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:40,915 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:41,488 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wQWCHAPv421a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111861386,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"189c2a24-2bae-4ed1-cd72-d190d5620f2e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                     Name  \\\n","0     -1    361           -1_climate_change_world_people   \n","1      0     65        0_climate_tropical_season_monsoon   \n","2      1     60       1_climate_change_policy_adaptation   \n","3      2     14  2_sexual_pachauri_allegations_scientist   \n","\n","                                      Representation  \\\n","0  [climate, change, world, people, global, tempe...   \n","1  [climate, tropical, season, monsoon, north, re...   \n","2  [climate, change, policy, adaptation, plan, na...   \n","3  [sexual, pachauri, allegations, scientist, pan...   \n","\n","                                             KeyBERT  \\\n","0  [climate, weather, environmental, pollution, w...   \n","1  [climates, subtropical, kerala, climate, monso...   \n","2  [climate, adaptation, droughts, agriculture, w...   \n","3  [pachauri, pachouri, pachuuri, allegations, pa...   \n","\n","                                                 MMR  \\\n","0  [climate, change, world, people, global, tempe...   \n","1  [climate, tropical, season, monsoon, north, re...   \n","2  [climate, change, policy, adaptation, plan, na...   \n","3  [sexual, pachauri, allegations, scientist, pan...   \n","\n","                                 Representative_Docs  \n","0  [and climate change this report published part...  \n","1  [being country located south asia has very div...  \n","2  [change policy the national action plan climat...  \n","3  [scientist pachauri the head the intergovernme...  "],"text/html":["\n","  <div id=\"df-c5f97106-6482-4dde-9b87-926b41257d44\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>361</td>\n","      <td>-1_climate_change_world_people</td>\n","      <td>[climate, change, world, people, global, tempe...</td>\n","      <td>[climate, weather, environmental, pollution, w...</td>\n","      <td>[climate, change, world, people, global, tempe...</td>\n","      <td>[and climate change this report published part...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>65</td>\n","      <td>0_climate_tropical_season_monsoon</td>\n","      <td>[climate, tropical, season, monsoon, north, re...</td>\n","      <td>[climates, subtropical, kerala, climate, monso...</td>\n","      <td>[climate, tropical, season, monsoon, north, re...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>1_climate_change_policy_adaptation</td>\n","      <td>[climate, change, policy, adaptation, plan, na...</td>\n","      <td>[climate, adaptation, droughts, agriculture, w...</td>\n","      <td>[climate, change, policy, adaptation, plan, na...</td>\n","      <td>[change policy the national action plan climat...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>2_sexual_pachauri_allegations_scientist</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[pachauri, pachouri, pachuuri, allegations, pa...</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[scientist pachauri the head the intergovernme...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5f97106-6482-4dde-9b87-926b41257d44')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c5f97106-6482-4dde-9b87-926b41257d44 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c5f97106-6482-4dde-9b87-926b41257d44');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7a567f7-b6e9-48bd-8e4c-d5d533a4e51f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7a567f7-b6e9-48bd-8e4c-d5d533a4e51f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7a567f7-b6e9-48bd-8e4c-d5d533a4e51f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":269}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hp1xqn6A421a"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JG7UCzDu421a"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7Rc-DKCf421b"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"npmzy0E6421b","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111862078,"user_tz":-330,"elapsed":703,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"deba90d1-a2b0-475c-eccf-5dfa5f7232ae"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.7074282903905408\n","c_umass 0.7074282903905408\n","c_npmi 0.19300694139756103\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"fPj3axEk421b"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rmEZuHUT421b"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IdceMbkJ421b"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N95ByGNc421c","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["d37d306d3aa1449b852e4ff70569c2d6","596ce6772e6b43a986d6223a06f11834","d9ec00f2eabf4408998434465b28a9a1","f74a40ea1ed04e1e9768a74ff375b4cd","8cfd9fbf13ea4eea9f11e8ac0d8f266b","b1e27d1110a74fe4bf370b46e9ee083d","68160eea217e4309b9b5c523787bacfd","f288e8d2db96440d934099a49bacb586","55531a1968784c449691455587837f6d","7d5ef61fb48f44068af4d8f6d5682f8c","157017d724a243f5ae9cf25489238f70"]},"executionInfo":{"status":"ok","timestamp":1706111868418,"user_tz":-330,"elapsed":6343,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"07c709b5-0773-4dd5-9329-d5cbc418ee0b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d37d306d3aa1449b852e4ff70569c2d6"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:46,854 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:47,045 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:47,049 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:47,744 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:47,750 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:48,362 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p5YHjvfL421c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111868419,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a09c23ae-84f3-4d82-da45-3a400a7f82e0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                Name  \\\n","0     -1    367     -1_defence_minister_army_forces   \n","1      0     90      0_pakistan_minister_army_singh   \n","2      1     23   1_budget_defence_crore_government   \n","3      2     12     2_fighter_jets_aircraft_defence   \n","4      3      8  3_drones_surveillance_air_unmanned   \n","\n","                                      Representation  \\\n","0  [defence, minister, army, forces, singh, new, ...   \n","1  [pakistan, minister, army, singh, kashmir, def...   \n","2  [budget, defence, crore, government, spending,...   \n","3  [fighter, jets, aircraft, defence, deal, frenc...   \n","4  [drones, surveillance, air, unmanned, armed, s...   \n","\n","                                             KeyBERT  \\\n","0  [military, army, pakistan, singh, weapons, arm...   \n","1  [pakistan, islamabad, pakistani, kashmir, jamm...   \n","2  [crore, budgets, fiscal, expenditure, spending...   \n","3  [rafales, rafale, aircraft, procurement, rafal...   \n","4  [uavs, uav, drone, drones, unmanned, missiles,...   \n","\n","                                                 MMR  \\\n","0  [defence, minister, army, forces, singh, new, ...   \n","1  [pakistan, minister, army, singh, kashmir, def...   \n","2  [budget, defence, crore, government, spending,...   \n","3  [fighter, jets, aircraft, defence, deal, frenc...   \n","4  [drones, surveillance, air, unmanned, armed, s...   \n","\n","                                 Representative_Docs  \n","0  [minister rajnath calls for cooperation war ag...  \n","1  [minister rajnath singh has the military will ...  \n","2  [budget all you need know new delhi jan saturd...  \n","3  [ministry has given green signal for procuring...  \n","4  [minister manohar parrikar today that his mini...  "],"text/html":["\n","  <div id=\"df-679b9ffc-4101-4fd4-94d5-fe006d24b686\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>367</td>\n","      <td>-1_defence_minister_army_forces</td>\n","      <td>[defence, minister, army, forces, singh, new, ...</td>\n","      <td>[military, army, pakistan, singh, weapons, arm...</td>\n","      <td>[defence, minister, army, forces, singh, new, ...</td>\n","      <td>[minister rajnath calls for cooperation war ag...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>90</td>\n","      <td>0_pakistan_minister_army_singh</td>\n","      <td>[pakistan, minister, army, singh, kashmir, def...</td>\n","      <td>[pakistan, islamabad, pakistani, kashmir, jamm...</td>\n","      <td>[pakistan, minister, army, singh, kashmir, def...</td>\n","      <td>[minister rajnath singh has the military will ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>23</td>\n","      <td>1_budget_defence_crore_government</td>\n","      <td>[budget, defence, crore, government, spending,...</td>\n","      <td>[crore, budgets, fiscal, expenditure, spending...</td>\n","      <td>[budget, defence, crore, government, spending,...</td>\n","      <td>[budget all you need know new delhi jan saturd...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>12</td>\n","      <td>2_fighter_jets_aircraft_defence</td>\n","      <td>[fighter, jets, aircraft, defence, deal, frenc...</td>\n","      <td>[rafales, rafale, aircraft, procurement, rafal...</td>\n","      <td>[fighter, jets, aircraft, defence, deal, frenc...</td>\n","      <td>[ministry has given green signal for procuring...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>3_drones_surveillance_air_unmanned</td>\n","      <td>[drones, surveillance, air, unmanned, armed, s...</td>\n","      <td>[uavs, uav, drone, drones, unmanned, missiles,...</td>\n","      <td>[drones, surveillance, air, unmanned, armed, s...</td>\n","      <td>[minister manohar parrikar today that his mini...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-679b9ffc-4101-4fd4-94d5-fe006d24b686')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-679b9ffc-4101-4fd4-94d5-fe006d24b686 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-679b9ffc-4101-4fd4-94d5-fe006d24b686');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6487008c-354b-4056-a0ae-896474062955\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6487008c-354b-4056-a0ae-896474062955')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6487008c-354b-4056-a0ae-896474062955 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":277}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fSGWQMxv421c"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-JvAHG6J421c"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5cxMAOvZ421d"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KQPgHeb_421d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111869100,"user_tz":-330,"elapsed":693,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a66a90e4-11b8-4720-e467-3eab82ade7e1"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6301410408462036\n","c_umass 0.6301410408462036\n","c_npmi 0.16546789321074895\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"IujyFKKs421d"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F_Ivo8NA421d"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rngRTn62421d"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qWGkJcVG421e"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0FeAzwnF421e","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["fdb86b7e95df4d13b8048063536f31c6","050305fbfe724017a28cf5973313f34e","f2c6d484fbf846818c8ab721ae2966e5","418845c1be7d4858b06509d8b4aeb7cf","865838f76b4b4ab0a911d046d986c8a6","afdd02ceb5334408a79a4e8428fb7443","3c7c6daaa9f7432f853fd028de616fd5","5c9ef567d93d4c13b1309b0dcf1ea6df","cf928f2f62d642f98f93eed6b0ac4838","990275f073ac4c349a849aab037bdcfd","65bf683cd62a4b0a8e9e7629a05836c4"]},"executionInfo":{"status":"ok","timestamp":1706111874504,"user_tz":-330,"elapsed":5406,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"7df4829c-9ed4-4fc8-bd2a-dcc4d94a3547"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fdb86b7e95df4d13b8048063536f31c6"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:53,501 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:57:53,614 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:57:53,618 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:57:54,220 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:57:54,226 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:57:54,599 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TcJ_m7R-421e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111874504,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ef9e782a-6fe2-4d07-e414-a283652ccdb1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                            Name  \\\n","0     -1    459  -1_growth_economy_year_percent   \n","1      0     35  0_growth_fiscal_projected_year   \n","2      1      6      1_quarter_growth_data_grew   \n","\n","                                      Representation  \\\n","0  [growth, economy, year, percent, economic, gdp...   \n","1  [growth, fiscal, projected, year, grow, percen...   \n","2  [quarter, growth, data, grew, sector, gdp, low...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, economies, growth, fiscal, infl...   \n","1  [gdp, economy, fiscal, economies, growth, econ...   \n","2  [gdp, economy, growth, economic, agriculture, ...   \n","\n","                                                 MMR  \\\n","0  [growth, economy, year, percent, economic, gdp...   \n","1  [growth, fiscal, projected, year, grow, percen...   \n","2  [quarter, growth, data, grew, sector, gdp, low...   \n","\n","                                 Representative_Docs  \n","0  [projected grow percent and reach trillion the...  \n","1  [will grow and the growth rate will reach the ...  \n","2  [grew percent for the quarter this was the sec...  "],"text/html":["\n","  <div id=\"df-245776af-f96d-4a8b-af88-a36bc4b34f0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>459</td>\n","      <td>-1_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, economic, gdp...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, infl...</td>\n","      <td>[growth, economy, year, percent, economic, gdp...</td>\n","      <td>[projected grow percent and reach trillion the...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>35</td>\n","      <td>0_growth_fiscal_projected_year</td>\n","      <td>[growth, fiscal, projected, year, grow, percen...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, econ...</td>\n","      <td>[growth, fiscal, projected, year, grow, percen...</td>\n","      <td>[will grow and the growth rate will reach the ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>1_quarter_growth_data_grew</td>\n","      <td>[quarter, growth, data, grew, sector, gdp, low...</td>\n","      <td>[gdp, economy, growth, economic, agriculture, ...</td>\n","      <td>[quarter, growth, data, grew, sector, gdp, low...</td>\n","      <td>[grew percent for the quarter this was the sec...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-245776af-f96d-4a8b-af88-a36bc4b34f0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-245776af-f96d-4a8b-af88-a36bc4b34f0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-245776af-f96d-4a8b-af88-a36bc4b34f0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04927133-2bd0-4ccb-8a6f-4f5cd781827c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04927133-2bd0-4ccb-8a6f-4f5cd781827c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04927133-2bd0-4ccb-8a6f-4f5cd781827c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":285}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uM3dSTgj421f"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KPwd3xMg421f"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iESoDMp7421f"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UFXJcfGC421f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111875467,"user_tz":-330,"elapsed":974,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"138c5a87-ca11-4b96-b06a-9350a3ac6caf"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5163304017653414\n","c_umass 0.5163304017653414\n","c_npmi 0.08420918806429441\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"sBgKKZGP421f"},"source":["#### Indian infrastructure"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZyCSzAF3421f"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4kCToOJZ421f"},"outputs":[],"source":["topic = 'Indian infra'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2djUizms421f"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wa__vAYb421f","colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["bbd1166f4fce4f308890778aa87aa268","4e3f8f56b162426997951b503a5cc2b9","17ce4f7579814ad49fca7d392413eadf","fdfdc7aef69b4abcb204502e317158b8","47587a6acf30498f9788f6144cdad676","952c5f8a493a4d2a9cf7015bd5e67a96","918f8e41d2b546bb9bc67f7512beedd2","ea04ef906e1b44bf98cab034b4d421ed","c55da8d0a6fd4040849816c0b7115a05","5a7ab91057f34d669b9c227f9d6c2af6","89275614c88c4e3bb7b811ad628fe817"]},"executionInfo":{"status":"ok","timestamp":1706111881307,"user_tz":-330,"elapsed":5842,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3d714ce0-18ab-411d-a46a-c69887a6e6af"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bbd1166f4fce4f308890778aa87aa268"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:57:59,784 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:58:00,017 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:58:00,024 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:58:00,695 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:58:00,701 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:58:01,468 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"giVwy9lN421g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111881307,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"cf6f358d-018c-4496-e6eb-57cca4ccc514"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0     -1    255                 -1_company_project_power_crore   \n","1      0    165  0_infrastructure_sector_government_investment   \n","2      1     29                    1_larsen_toubro_crore_power   \n","3      2     26                   2_airport_gmr_stake_airports   \n","4      3     10               3_highway_irb_developers_company   \n","5      4     10                        4_power_plant_gmr_solar   \n","6      5      5                    5_solar_power_adani_company   \n","\n","                                      Representation  \\\n","0  [company, project, power, crore, construction,...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [larsen, toubro, crore, power, company, order,...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [highway, irb, developers, company, expressway...   \n","5  [power, plant, gmr, solar, company, state, ene...   \n","6  [solar, power, adani, company, adanis, signed,...   \n","\n","                                             KeyBERT  \\\n","0  [crore, gujarat, infrastructure, investment, c...   \n","1  [infrastructure, railways, construction, gdp, ...   \n","2  [toubro, larsens, larsen, toubros, procurement...   \n","3  [gmr, gml, gmm, airport, goa, gurgaon, mumbai,...   \n","4  [expressway, irbi, irda, highways, irb, infras...   \n","5  [gmr, gujarat, maharashtra, solar, renewable, ...   \n","6  [adani, adansi, powergrid, aditi, adanis, adi,...   \n","\n","                                                 MMR  \\\n","0  [company, project, power, crore, construction,...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [larsen, toubro, crore, power, company, order,...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [highway, irb, developers, company, expressway...   \n","5  [power, plant, gmr, solar, company, state, ene...   \n","6  [solar, power, adani, company, adanis, signed,...   \n","\n","                                 Representative_Docs  \n","0  [and services company larsen toubro has been a...  \n","1  [key driver for economic growth and developmen...  \n","2  [major larsen toubro wednesday its consolidate...  \n","3  [major gmr group has bagged crore contract bui...  \n","4  [company irb infrastructure developers has sig...  \n","5  [company gmr energy ltd tuesday has signed agr...  \n","6  [giant adani group will invest billion its fir...  "],"text/html":["\n","  <div id=\"df-e4502a59-61fd-42ff-b9eb-ff1e63d806eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>255</td>\n","      <td>-1_company_project_power_crore</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[crore, gujarat, infrastructure, investment, c...</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[and services company larsen toubro has been a...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>165</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, gdp, ...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[key driver for economic growth and developmen...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>29</td>\n","      <td>1_larsen_toubro_crore_power</td>\n","      <td>[larsen, toubro, crore, power, company, order,...</td>\n","      <td>[toubro, larsens, larsen, toubros, procurement...</td>\n","      <td>[larsen, toubro, crore, power, company, order,...</td>\n","      <td>[major larsen toubro wednesday its consolidate...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>26</td>\n","      <td>2_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, goa, gurgaon, mumbai,...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>3_highway_irb_developers_company</td>\n","      <td>[highway, irb, developers, company, expressway...</td>\n","      <td>[expressway, irbi, irda, highways, irb, infras...</td>\n","      <td>[highway, irb, developers, company, expressway...</td>\n","      <td>[company irb infrastructure developers has sig...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>10</td>\n","      <td>4_power_plant_gmr_solar</td>\n","      <td>[power, plant, gmr, solar, company, state, ene...</td>\n","      <td>[gmr, gujarat, maharashtra, solar, renewable, ...</td>\n","      <td>[power, plant, gmr, solar, company, state, ene...</td>\n","      <td>[company gmr energy ltd tuesday has signed agr...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>5_solar_power_adani_company</td>\n","      <td>[solar, power, adani, company, adanis, signed,...</td>\n","      <td>[adani, adansi, powergrid, aditi, adanis, adi,...</td>\n","      <td>[solar, power, adani, company, adanis, signed,...</td>\n","      <td>[giant adani group will invest billion its fir...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4502a59-61fd-42ff-b9eb-ff1e63d806eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4502a59-61fd-42ff-b9eb-ff1e63d806eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4502a59-61fd-42ff-b9eb-ff1e63d806eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-56b6ba43-d43c-4e02-8c2f-19378ba8e631\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56b6ba43-d43c-4e02-8c2f-19378ba8e631')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-56b6ba43-d43c-4e02-8c2f-19378ba8e631 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":293}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jwQrEk_X421g"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZvMBsHld421g"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hXVA5f2_421g"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sAPMrek0421g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111882476,"user_tz":-330,"elapsed":1184,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"8749a869-081c-4ab7-e563-a67529a8ab5a"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6027883314031729\n","c_umass 0.6027883314031729\n","c_npmi 0.08856437805056684\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"_ssDvEe-421g"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zjkuiH4L421g"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eUqvgdGe421g"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AHbrSZo4421g","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117746727,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2514a357-582c-4189-ccf1-bf80c6c10886"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-21461bd6-1b78-43b3-9235-4ab71fe0c046\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21461bd6-1b78-43b3-9235-4ab71fe0c046')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-21461bd6-1b78-43b3-9235-4ab71fe0c046 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-21461bd6-1b78-43b3-9235-4ab71fe0c046');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1746f809-6f9a-47a2-8ca9-f26254f58272\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1746f809-6f9a-47a2-8ca9-f26254f58272')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1746f809-6f9a-47a2-8ca9-f26254f58272 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3df610e8-55d8-42f4-a003-5d87e2f12654\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3df610e8-55d8-42f4-a003-5d87e2f12654 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":201}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3iiCERqN421h","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["6c844f00a9914981a5c114085ab6a7ca","24a8e81f6fb64821b759ee876bfcfccc","4d6dfc2c7c064d2595b2007804df81cd","5bafa857edce43b69d502ddfbbdfaa45","03a1c009c35845e39707123e61c22496","e08d2b2ebed841f09d5dbaf7bcf8a8fe","993ce358094742a6b4a2d6bc12c82b6b","62ca9555489c41cf8d4a11e6a8bac43a","7ac1a85d4dcd4d648b238b943b64980f","45bcda51a8cb4281bbde856d976bebe8","16ae7baca23d4d35b361011345e55799"]},"executionInfo":{"status":"ok","timestamp":1706117776854,"user_tz":-330,"elapsed":30131,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"751d12ad-fbf8-48e2-d56e-16a6b078ad0c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6c844f00a9914981a5c114085ab6a7ca"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 17:36:01,287 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 17:36:01,657 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 17:36:01,671 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 17:36:13,861 - BERTopic - Cluster - Completed ✓\n","2024-01-24 17:36:13,868 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 17:36:15,745 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4moBIXeF421h","colab":{"base_uri":"https://localhost:8080/","height":780},"executionInfo":{"status":"ok","timestamp":1706117776854,"user_tz":-330,"elapsed":30,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"383fa1d2-b715-402b-ef88-43a898a5b7ba"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Topic  Count                                     Name  \\\n","0      -1   1141       -1_climate_minister_defence_change   \n","1       0    503  0_growth_infrastructure_economy_percent   \n","2       1     90           1_pakistan_minister_army_singh   \n","3       2     65        2_climate_tropical_season_monsoon   \n","4       3     61       3_climate_change_policy_adaptation   \n","5       4     30              4_larsen_toubro_crore_power   \n","6       5     23          5_defence_budget_crore_spending   \n","7       6     23             6_airport_gmr_stake_airports   \n","8       7     14  7_sexual_pachauri_allegations_scientist   \n","9       8     12          8_fighter_jets_aircraft_defence   \n","10      9     11               9_highway_irb_road_project   \n","11     10      9               10_power_gmr_solar_company   \n","12     11      8    11_drones_surveillance_unmanned_armed   \n","13     12      5        12_estate_real_projects_companies   \n","14     13      5             13_solar_power_adani_company   \n","\n","                                       Representation  \\\n","0   [climate, minister, defence, change, company, ...   \n","1   [growth, infrastructure, economy, percent, gdp...   \n","2   [pakistan, minister, army, singh, defence, kas...   \n","3   [climate, tropical, season, monsoon, summer, n...   \n","4   [climate, change, policy, adaptation, plan, ac...   \n","5   [larsen, toubro, crore, power, company, order,...   \n","6   [defence, budget, crore, spending, allocation,...   \n","7   [airport, gmr, stake, airports, international,...   \n","8   [sexual, pachauri, allegations, scientist, pan...   \n","9   [fighter, jets, aircraft, defence, french, pro...   \n","10  [highway, irb, road, project, company, develop...   \n","11  [power, gmr, solar, company, plant, project, s...   \n","12  [drones, surveillance, unmanned, armed, air, s...   \n","13  [estate, real, projects, companies, growth, be...   \n","14  [solar, power, adani, company, adanis, project...   \n","\n","                                              KeyBERT  \\\n","0   [climate, emissions, infrastructure, pakistan,...   \n","1   [gdp, economy, economies, growth, fiscal, fina...   \n","2   [pakistan, islamabad, pakistani, kashmir, jamm...   \n","3   [climates, subtropical, kerala, climate, monso...   \n","4   [climate, adaptation, droughts, agriculture, w...   \n","5   [toubro, larsenal, larsens, toubros, larsen, p...   \n","6   [budgets, procurements, expenditure, fiscal, s...   \n","7   [gmr, gml, gmm, gurgaon, gmmg, airport, ahmeda...   \n","8   [ipcc, pachauri, pachuuri, pachouri, pachiuri,...   \n","9   [squadrons, rafales, rafale, aircraft, procure...   \n","10  [expressway, irbi, irda, highways, irb, infras...   \n","11  [gmr, gmi, gujarat, maharashtra, solar, renewa...   \n","12  [uavs, uav, drone, drones, unmanned, missiles,...   \n","13  [realty, urbanization, housing, investments, r...   \n","14  [adani, adansi, powergrid, aditi, adanis, adi,...   \n","\n","                                                  MMR  \\\n","0   [climate, minister, defence, change, company, ...   \n","1   [growth, infrastructure, economy, percent, gdp...   \n","2   [pakistan, minister, army, singh, defence, kas...   \n","3   [climate, tropical, season, monsoon, summer, n...   \n","4   [climate, change, policy, adaptation, plan, ac...   \n","5   [larsen, toubro, crore, power, company, order,...   \n","6   [defence, budget, crore, spending, allocation,...   \n","7   [airport, gmr, stake, airports, international,...   \n","8   [sexual, pachauri, allegations, scientist, pan...   \n","9   [fighter, jets, aircraft, defence, french, pro...   \n","10  [highway, irb, road, project, company, develop...   \n","11  [power, gmr, solar, company, plant, project, s...   \n","12  [drones, surveillance, unmanned, armed, air, s...   \n","13  [estate, real, projects, companies, growth, be...   \n","14  [solar, power, adani, company, adanis, project...   \n","\n","                                  Representative_Docs  \n","0   [change the government has been the middle deb...  \n","1   [clock growth this fiscal economic survey the ...  \n","2   [minister rajnath singh has the military will ...  \n","3   [being country located south asia has very div...  \n","4   [change policy the national action plan climat...  \n","5   [major larsen toubro friday bagged two orders ...  \n","6   [budget what new business news largest ever de...  \n","7   [major gmr group has bagged crore contract bui...  \n","8   [scientist pachauri the head the intergovernme...  \n","9   [ministry has cleared proposal procure additio...  \n","10  [company irb infrastructure developers has sig...  \n","11  [company gmr group plans invest billion rupees...  \n","12  [minister manohar parrikar today that his mini...  \n","13  [has been growing rapid pace over the last one...  \n","14  [giant adani group will invest billion its fir...  "],"text/html":["\n","  <div id=\"df-4ca5c6d3-6dec-4b37-a020-5acee1594ca4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>1141</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>[climate, minister, defence, change, company, ...</td>\n","      <td>[climate, emissions, infrastructure, pakistan,...</td>\n","      <td>[climate, minister, defence, change, company, ...</td>\n","      <td>[change the government has been the middle deb...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>503</td>\n","      <td>0_growth_infrastructure_economy_percent</td>\n","      <td>[growth, infrastructure, economy, percent, gdp...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, fina...</td>\n","      <td>[growth, infrastructure, economy, percent, gdp...</td>\n","      <td>[clock growth this fiscal economic survey the ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>90</td>\n","      <td>1_pakistan_minister_army_singh</td>\n","      <td>[pakistan, minister, army, singh, defence, kas...</td>\n","      <td>[pakistan, islamabad, pakistani, kashmir, jamm...</td>\n","      <td>[pakistan, minister, army, singh, defence, kas...</td>\n","      <td>[minister rajnath singh has the military will ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>65</td>\n","      <td>2_climate_tropical_season_monsoon</td>\n","      <td>[climate, tropical, season, monsoon, summer, n...</td>\n","      <td>[climates, subtropical, kerala, climate, monso...</td>\n","      <td>[climate, tropical, season, monsoon, summer, n...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>61</td>\n","      <td>3_climate_change_policy_adaptation</td>\n","      <td>[climate, change, policy, adaptation, plan, ac...</td>\n","      <td>[climate, adaptation, droughts, agriculture, w...</td>\n","      <td>[climate, change, policy, adaptation, plan, ac...</td>\n","      <td>[change policy the national action plan climat...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>30</td>\n","      <td>4_larsen_toubro_crore_power</td>\n","      <td>[larsen, toubro, crore, power, company, order,...</td>\n","      <td>[toubro, larsenal, larsens, toubros, larsen, p...</td>\n","      <td>[larsen, toubro, crore, power, company, order,...</td>\n","      <td>[major larsen toubro friday bagged two orders ...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>23</td>\n","      <td>5_defence_budget_crore_spending</td>\n","      <td>[defence, budget, crore, spending, allocation,...</td>\n","      <td>[budgets, procurements, expenditure, fiscal, s...</td>\n","      <td>[defence, budget, crore, spending, allocation,...</td>\n","      <td>[budget what new business news largest ever de...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>23</td>\n","      <td>6_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, gurgaon, gmmg, airport, ahmeda...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>7</td>\n","      <td>14</td>\n","      <td>7_sexual_pachauri_allegations_scientist</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[ipcc, pachauri, pachuuri, pachouri, pachiuri,...</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[scientist pachauri the head the intergovernme...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>8_fighter_jets_aircraft_defence</td>\n","      <td>[fighter, jets, aircraft, defence, french, pro...</td>\n","      <td>[squadrons, rafales, rafale, aircraft, procure...</td>\n","      <td>[fighter, jets, aircraft, defence, french, pro...</td>\n","      <td>[ministry has cleared proposal procure additio...</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>9_highway_irb_road_project</td>\n","      <td>[highway, irb, road, project, company, develop...</td>\n","      <td>[expressway, irbi, irda, highways, irb, infras...</td>\n","      <td>[highway, irb, road, project, company, develop...</td>\n","      <td>[company irb infrastructure developers has sig...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10_power_gmr_solar_company</td>\n","      <td>[power, gmr, solar, company, plant, project, s...</td>\n","      <td>[gmr, gmi, gujarat, maharashtra, solar, renewa...</td>\n","      <td>[power, gmr, solar, company, plant, project, s...</td>\n","      <td>[company gmr group plans invest billion rupees...</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>11_drones_surveillance_unmanned_armed</td>\n","      <td>[drones, surveillance, unmanned, armed, air, s...</td>\n","      <td>[uavs, uav, drone, drones, unmanned, missiles,...</td>\n","      <td>[drones, surveillance, unmanned, armed, air, s...</td>\n","      <td>[minister manohar parrikar today that his mini...</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>12</td>\n","      <td>5</td>\n","      <td>12_estate_real_projects_companies</td>\n","      <td>[estate, real, projects, companies, growth, be...</td>\n","      <td>[realty, urbanization, housing, investments, r...</td>\n","      <td>[estate, real, projects, companies, growth, be...</td>\n","      <td>[has been growing rapid pace over the last one...</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>13_solar_power_adani_company</td>\n","      <td>[solar, power, adani, company, adanis, project...</td>\n","      <td>[adani, adansi, powergrid, aditi, adanis, adi,...</td>\n","      <td>[solar, power, adani, company, adanis, project...</td>\n","      <td>[giant adani group will invest billion its fir...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ca5c6d3-6dec-4b37-a020-5acee1594ca4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4ca5c6d3-6dec-4b37-a020-5acee1594ca4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4ca5c6d3-6dec-4b37-a020-5acee1594ca4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-081d6010-5cd4-4b7a-91c2-f772713ceb44\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-081d6010-5cd4-4b7a-91c2-f772713ceb44')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-081d6010-5cd4-4b7a-91c2-f772713ceb44 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":203}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TIxYRmjb421h"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QL9TqU_q421h"},"outputs":[],"source":["# topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dm77k7hg421h"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1Bo7U_y9421h"},"outputs":[],"source":["# import csv\n","\n","# # Get the values\n","# c_v_value = get_c_v(topic_model, df, topics)\n","# c_umass_value = get_c_umass(topic_model, df, topics)\n","# c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","# print('c_v', c_v_value)\n","# print('c_umass', c_v_value)\n","# print('c_npmi', c_npmi_value)\n","\n","# # Specify the file path\n","# csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# # Write values\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","# writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","# writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","# print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","source":["cm_df = topic_model.get_document_info(df['Category'])[[\"Document\", 'Name']]"],"metadata":{"id":"GaltXR09ip3G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Topic'] = cm_df['Name'].apply(lambda x: x.split('_')[1])\n","cm_df['Actual'] = cm_df['Document'].apply(lambda x: x.split(' ')[-1])\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117776856,"user_tz":-330,"elapsed":28,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"af0b6d3c-1ed5-481b-d37e-817954854dfa","id":"r_aKc_g9ip3G"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Document                                     Name    Topic  \\\n","0            Indian climate       -1_climate_minister_defence_change  climate   \n","1            Indian climate        2_climate_tropical_season_monsoon  climate   \n","2            Indian climate       -1_climate_minister_defence_change  climate   \n","3            Indian climate        2_climate_tropical_season_monsoon  climate   \n","4            Indian climate       3_climate_change_policy_adaptation  climate   \n","...                     ...                                      ...      ...   \n","1995  Indian infrastructure       -1_climate_minister_defence_change  climate   \n","1996  Indian infrastructure       -1_climate_minister_defence_change  climate   \n","1997  Indian infrastructure       -1_climate_minister_defence_change  climate   \n","1998  Indian infrastructure       -1_climate_minister_defence_change  climate   \n","1999  Indian infrastructure  0_growth_infrastructure_economy_percent   growth   \n","\n","              Actual  \n","0            climate  \n","1            climate  \n","2            climate  \n","3            climate  \n","4            climate  \n","...              ...  \n","1995  infrastructure  \n","1996  infrastructure  \n","1997  infrastructure  \n","1998  infrastructure  \n","1999  infrastructure  \n","\n","[2000 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-c43a3928-572e-478d-920a-4acc7fdf0411\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Document</th>\n","      <th>Name</th>\n","      <th>Topic</th>\n","      <th>Actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_tropical_season_monsoon</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>2_climate_tropical_season_monsoon</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>3_climate_change_policy_adaptation</td>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>-1_climate_minister_defence_change</td>\n","      <td>climate</td>\n","      <td>infrastructure</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>0_growth_infrastructure_economy_percent</td>\n","      <td>growth</td>\n","      <td>infrastructure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c43a3928-572e-478d-920a-4acc7fdf0411')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c43a3928-572e-478d-920a-4acc7fdf0411 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c43a3928-572e-478d-920a-4acc7fdf0411');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-45c45d36-ed57-4a4a-bf14-fc600c42051d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-45c45d36-ed57-4a4a-bf14-fc600c42051d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-45c45d36-ed57-4a4a-bf14-fc600c42051d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c9fc5048-39e5-4e3e-81d9-a9d7489d954b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c9fc5048-39e5-4e3e-81d9-a9d7489d954b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":209}]},{"cell_type":"code","source":["cm_df = cm_df[['Actual', 'Topic']]\n","cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117776856,"user_tz":-330,"elapsed":27,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5c37dd3b-4e6f-4948-d2e3-c17c2c51047c","id":"r8eCq2JWip3G"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual    Topic\n","0            climate  climate\n","1            climate  climate\n","2            climate  climate\n","3            climate  climate\n","4            climate  climate\n","...              ...      ...\n","1995  infrastructure  climate\n","1996  infrastructure  climate\n","1997  infrastructure  climate\n","1998  infrastructure  climate\n","1999  infrastructure   growth\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-42e404ef-f054-45b2-8cb8-59e5db6c0b83\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>growth</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42e404ef-f054-45b2-8cb8-59e5db6c0b83')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42e404ef-f054-45b2-8cb8-59e5db6c0b83 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42e404ef-f054-45b2-8cb8-59e5db6c0b83');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2ffb0925-ac90-4c0f-b25d-6d1bfb35eb61\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ffb0925-ac90-4c0f-b25d-6d1bfb35eb61')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2ffb0925-ac90-4c0f-b25d-6d1bfb35eb61 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3b64b460-8bfd-457e-bbe2-b0eaa6c27d33\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3b64b460-8bfd-457e-bbe2-b0eaa6c27d33 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":210}]},{"cell_type":"code","source":["cm_df['Actual'] = cm_df['Actual'].replace('defense', 'defence')\n","cm_df['Actual'] = cm_df['Actual'].replace('economy', 'growth')"],"metadata":{"id":"Miodi7OZip3H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["classes = cm_df['Actual'].unique()"],"metadata":{"id":"An5uY_5Pip3H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cm_df['Actual'].unique(), cm_df['Topic'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117776856,"user_tz":-330,"elapsed":26,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"dff9e1cc-07bd-4c92-c1a0-49b5450bd836","id":"oH5qVbfJip3H"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array(['climate', 'defence', 'growth', 'infrastructure'], dtype=object),\n"," array(['climate', 'sexual', 'pakistan', 'defence', 'fighter', 'drones',\n","        'growth', 'estate', 'airport', 'larsen', 'highway', 'solar',\n","        'power'], dtype=object))"]},"metadata":{},"execution_count":213}]},{"cell_type":"code","source":["cm_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706117776856,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"837bd395-f561-4b05-8832-789aed399c92","id":"xP5-aR6zip3H"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Actual    Topic\n","0            climate  climate\n","1            climate  climate\n","2            climate  climate\n","3            climate  climate\n","4            climate  climate\n","...              ...      ...\n","1995  infrastructure  climate\n","1996  infrastructure  climate\n","1997  infrastructure  climate\n","1998  infrastructure  climate\n","1999  infrastructure   growth\n","\n","[2000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-d4536c2a-5623-4805-b506-3f4ea44156de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Topic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>climate</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>infrastructure</td>\n","      <td>climate</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>infrastructure</td>\n","      <td>growth</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4536c2a-5623-4805-b506-3f4ea44156de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d4536c2a-5623-4805-b506-3f4ea44156de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d4536c2a-5623-4805-b506-3f4ea44156de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7696ea77-7afb-400e-9d28-badf59d0e92a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7696ea77-7afb-400e-9d28-badf59d0e92a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7696ea77-7afb-400e-9d28-badf59d0e92a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b3e99ba9-0dcd-430f-b85a-f74ade9da6c0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cm_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b3e99ba9-0dcd-430f-b85a-f74ade9da6c0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cm_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":214}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","cm = confusion_matrix(cm_df['Actual'], cm_df['Topic'])\n","cm\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117776856,"user_tz":-330,"elapsed":21,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a7f87066-bd76-42cc-f6be-ab15146de7fb","id":"S74O69KHip3H"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0, 486,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  14,\n","          0],\n","       [  0, 367,  23,   8,   0,  12,   0,   0,   0,   0,  90,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0, 157,   0,   0,   4,   0, 339,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [ 23, 257,   0,   0,   1,   0, 164,  11,   0,  30,   0,   9,   0,\n","          5],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0]])"]},"metadata":{},"execution_count":215}]},{"cell_type":"code","source":["cm_display = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)\n","cm_display.plot()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":784},"executionInfo":{"status":"error","timestamp":1706117777926,"user_tz":-330,"elapsed":1089,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"cd96a017-50c2-4473-d8f4-c34032ddb82b","id":"LjSmWPJTip3H"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"The number of FixedLocator locations (14), usually from a call to set_ticks, does not match the number of labels (4).","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-216-cac10359d0ab>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mcm_display\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mConfusionMatrixDisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfusion_matrix\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdisplay_labels\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcm_display\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_plot/confusion_matrix.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, include_values, cmap, xticks_rotation, values_format, ax, colorbar, im_kw, text_kw)\u001b[0m\n\u001b[1;32m    179\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcolorbar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m             \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolorbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mim_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m         ax.set(\n\u001b[0m\u001b[1;32m    182\u001b[0m             \u001b[0mxticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m             \u001b[0myticks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_classes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    145\u001b[0m             \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    146\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 147\u001b[0;31m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mArtist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    148\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m         \u001b[0mcls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__qualname__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"{cls.__qualname__}.set\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mset\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m   1229\u001b[0m         \u001b[0;31m# Artist._update_set_signature_and_docstring() at the end of the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1230\u001b[0m         \u001b[0;31m# module.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1231\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_internal_update\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_kwargs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1232\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1233\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mcontextlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontextmanager\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_internal_update\u001b[0;34m(self, kwargs)\u001b[0m\n\u001b[1;32m   1221\u001b[0m         \u001b[0mThe\u001b[0m \u001b[0mlack\u001b[0m \u001b[0mof\u001b[0m \u001b[0mprenormalization\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mto\u001b[0m \u001b[0mmaintain\u001b[0m \u001b[0mbackcompatibility\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1222\u001b[0m         \"\"\"\n\u001b[0;32m-> 1223\u001b[0;31m         return self._update_props(\n\u001b[0m\u001b[1;32m   1224\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"{cls.__name__}.set() got an unexpected keyword argument \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1225\u001b[0m             \"{prop_name!r}\")\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36m_update_props\u001b[0;34m(self, props, errfmt)\u001b[0m\n\u001b[1;32m   1197\u001b[0m                         raise AttributeError(\n\u001b[1;32m   1198\u001b[0m                             errfmt.format(cls=type(self), prop_name=k))\n\u001b[0;32m-> 1199\u001b[0;31m                     \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1200\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1201\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpchanged\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m     72\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0;32mdef\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 74\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mget_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m         \u001b[0mwrapper\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__module__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mowner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__module__\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/_api/deprecation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    295\u001b[0m                 f\"for the old name will be dropped %(removal)s.\")\n\u001b[1;32m    296\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mold\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 297\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    298\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m     \u001b[0;31m# wrapper() must keep the same documented signature as func(): if we\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/axis.py\u001b[0m in \u001b[0;36mset_ticklabels\u001b[0;34m(self, labels, minor, fontdict, **kwargs)\u001b[0m\n\u001b[1;32m   1967\u001b[0m             \u001b[0;31m# remove all tick labels, so only error for > 0 labels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1968\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlocator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlocs\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1969\u001b[0;31m                 raise ValueError(\n\u001b[0m\u001b[1;32m   1970\u001b[0m                     \u001b[0;34m\"The number of FixedLocator locations\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1971\u001b[0m                     \u001b[0;34mf\" ({len(locator.locs)}), usually from a call to\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: The number of FixedLocator locations (14), usually from a call to set_ticks, does not match the number of labels (4)."]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","print(classification_report(cm_df['Actual'], cm_df['Topic'], labels=classes))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706117854426,"user_tz":-330,"elapsed":415,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"e740ff22-808a-4773-fd3b-648bc032c0a7","id":"-9q2DBetip3H"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                precision    recall  f1-score   support\n","\n","       climate       0.38      0.97      0.55       500\n","       defence       1.00      0.05      0.09       500\n","        growth       0.67      0.68      0.68       500\n","infrastructure       0.00      0.00      0.00       500\n","\n","     micro avg       0.47      0.42      0.45      2000\n","     macro avg       0.51      0.42      0.33      2000\n","  weighted avg       0.51      0.42      0.33      2000\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9uRXr9yt421h"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"HMVKkghx421i"},"source":["### UMAP-HDBSCAN"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qixLsSis421i"},"outputs":[],"source":["from hdbscan import HDBSCAN\n","from umap import UMAP\n","experiment='UMAP/HDBSCAN'\n","umap_model = UMAP(n_neighbors=180, n_components=50, metric='cosine')\n","hdbscan_model = HDBSCAN(min_cluster_size=5, prediction_data=True)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"HFDzvEuh421i"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HDMU5v7K421i"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KbI1iJ-4421i","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111915242,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3aec0257-bdad-4adb-b68b-08e6d8409de1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-de4939a5-c1e6-466a-9299-92188673325d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de4939a5-c1e6-466a-9299-92188673325d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de4939a5-c1e6-466a-9299-92188673325d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de4939a5-c1e6-466a-9299-92188673325d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b2ea893-3686-4f4e-92bd-0d3d8d0877da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b2ea893-3686-4f4e-92bd-0d3d8d0877da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b2ea893-3686-4f4e-92bd-0d3d8d0877da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_90bea816-862d-42a3-8dd2-3f2f81775640\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_90bea816-862d-42a3-8dd2-3f2f81775640 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":308}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0yLG2JsX421i","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["71c5f2c0b3fc4c7a841568b678697959","6399e69e84424151abf24c413401c1cd","dabcb26a3c034ec9a23921993daae193","4e877fc9f4604ddf80563bc2d38f6773","0583ce6755344fa8b5aead1f61a9ec50","fb99440ebd7b49c1a4a4173b0c2bd769","485ec014bb7d4524ae2177956c1e3899","3c0927f1f21f4281a9a4887656c415e7","0de7862e1bba44d9a7351223f6624784","d0d2bdd912ea493fbdbb04c173a0d058","38a14aa08cc64efeb124f6ddd06e0ab5"]},"executionInfo":{"status":"ok","timestamp":1706111925003,"user_tz":-330,"elapsed":9772,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ff9c83bc-bf3f-446a-e5d2-956b5483fa97"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"71c5f2c0b3fc4c7a841568b678697959"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:58:40,317 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:58:44,617 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:58:44,619 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:58:44,673 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:58:44,678 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:58:45,206 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vIcIZAhF421j","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1706111925003,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"0c91adac-b779-406a-df98-d3e84b3cd4f9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                              Name  \\\n","0     -1     12       -1_climate_water_use_plants   \n","1      0    348     0_climate_change_policy_world   \n","2      1    140  1_climate_tropical_season_summer   \n","\n","                                      Representation  \\\n","0  [climate, water, use, plants, heavy, change, s...   \n","1  [climate, change, policy, world, global, new, ...   \n","2  [climate, tropical, season, summer, winter, te...   \n","\n","                                             KeyBERT  \\\n","0  [climate, weather, warming, floods, thundersto...   \n","1  [climate, greenhouse, warming, emissions, envi...   \n","2  [climates, subtropical, monsoons, climate, mon...   \n","\n","                                                 MMR  \\\n","0  [climate, water, use, plants, heavy, change, s...   \n","1  [climate, change, policy, world, global, new, ...   \n","2  [climate, tropical, season, summer, winter, te...   \n","\n","                                 Representative_Docs  \n","0  [changing says imd the meteorological departme...  \n","1  [changing fast new delhi the world celebrating...  \n","2  [being country located south asia has very div...  "],"text/html":["\n","  <div id=\"df-89038aa4-1d43-42bf-8349-6a17ae082457\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>12</td>\n","      <td>-1_climate_water_use_plants</td>\n","      <td>[climate, water, use, plants, heavy, change, s...</td>\n","      <td>[climate, weather, warming, floods, thundersto...</td>\n","      <td>[climate, water, use, plants, heavy, change, s...</td>\n","      <td>[changing says imd the meteorological departme...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>348</td>\n","      <td>0_climate_change_policy_world</td>\n","      <td>[climate, change, policy, world, global, new, ...</td>\n","      <td>[climate, greenhouse, warming, emissions, envi...</td>\n","      <td>[climate, change, policy, world, global, new, ...</td>\n","      <td>[changing fast new delhi the world celebrating...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>140</td>\n","      <td>1_climate_tropical_season_summer</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[climates, subtropical, monsoons, climate, mon...</td>\n","      <td>[climate, tropical, season, summer, winter, te...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89038aa4-1d43-42bf-8349-6a17ae082457')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89038aa4-1d43-42bf-8349-6a17ae082457 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89038aa4-1d43-42bf-8349-6a17ae082457');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b7e1afd-b3b9-42f0-bc47-7d188a15c3ba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b7e1afd-b3b9-42f0-bc47-7d188a15c3ba')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b7e1afd-b3b9-42f0-bc47-7d188a15c3ba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":310}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oMmjVcqk421j"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M991q_fa421j"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J8w3F28z421j"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jm1J0NHE421j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111926392,"user_tz":-330,"elapsed":1393,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"dff93eb5-d8dc-45ed-849f-9451cead86c0"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6301516626521249\n","c_umass 0.6301516626521249\n","c_npmi 0.07364935638232441\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"SL4QV1Ee421j"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x5Y7RSnr421k"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pAsDwrLL421k"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lzpkvefW421k","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["d97beecf85ae4a579001b5207cebf2f3","dbd64cef258e471f87f907aed4b19718","6e6b2d1d50ca4fcebf5b8e6e4efc4ffe","3d0a0042802e4f10b6aed98922a30262","113a7c2b63fb4866a3a28eda080138eb","2d8390897a544e498e654341e7c2a48f","29d34a57969f489ebf8a970a7029f30a","4222d6abc66b426bad5a2abeea205022","664f9cf945654f6d9ba29fc7829cadf1","3f558a72bd6346eeb829f8118d855baf","5e6b324d8b9b4c2984699c14979025db"]},"executionInfo":{"status":"ok","timestamp":1706111936642,"user_tz":-330,"elapsed":10253,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f53ae815-36b2-41f6-91b0-ade8591ab272"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d97beecf85ae4a579001b5207cebf2f3"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:58:50,490 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:58:55,402 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:58:55,404 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:58:55,473 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:58:55,478 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:58:56,688 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y0UVvFsM421k","colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"status":"ok","timestamp":1706111936642,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"51be72c7-9c9e-426d-add4-34e4127e655b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Topic  Count                                 Name  \\\n","0      -1    198    -1_defence_minister_army_military   \n","1       0    104       0_pakistan_army_forces_kashmir   \n","2       1     32      1_minister_pakistan_visit_kabul   \n","3       2     28         2_fighter_deal_aircraft_jets   \n","4       3     27   3_china_chinese_minister_territory   \n","5       4     27         4_china_minister_visit_singh   \n","6       5     26         5_drones_missile_used_weapon   \n","7       6     24          6_budget_defence_crore_year   \n","8       7     20  7_defence_sector_electronics_bharat   \n","9       8      9  8_visit_nirmala_sitharaman_pakistan   \n","10      9      5         9_ready_singh_fully_prepared   \n","\n","                                       Representation  \\\n","0   [defence, minister, army, military, forces, ne...   \n","1   [pakistan, army, forces, kashmir, terrorists, ...   \n","2   [minister, pakistan, visit, kabul, defence, af...   \n","3   [fighter, deal, aircraft, jets, ministry, defe...   \n","4   [china, chinese, minister, territory, border, ...   \n","5   [china, minister, visit, singh, chinese, myanm...   \n","6   [drones, missile, used, weapon, air, surveilla...   \n","7   [budget, defence, crore, year, spending, gover...   \n","8   [defence, sector, electronics, bharat, develop...   \n","9   [visit, nirmala, sitharaman, pakistan, ministe...   \n","10  [ready, singh, fully, prepared, attack, milita...   \n","\n","                                              KeyBERT  \\\n","0   [army, military, modi, parrikar, troops, pakis...   \n","1   [kashmir, jammu, troops, militants, pakistan, ...   \n","2   [islamabad, pakistan, parrikar, pakistani, kab...   \n","3   [rafale, rafales, aircraft, procurement, dassa...   \n","4   [china, asean, beijing, war, pradesh, peaceful...   \n","5   [beijing, liang, china, wuhan, myanmar, fenghe...   \n","6   [drone, drones, uav, unmanned, missiles, aircr...   \n","7   [crore, fiscal, expenditure, spending, procure...   \n","8   [electronics, aerospace, technologies, industr...   \n","9   [sitharaman, nirmala, sithraam, islamabad, pak...   \n","10  [militaries, preparedness, army, prepare, prep...   \n","\n","                                                  MMR  \\\n","0   [defence, minister, army, military, forces, ne...   \n","1   [pakistan, army, forces, kashmir, terrorists, ...   \n","2   [minister, pakistan, visit, kabul, defence, af...   \n","3   [fighter, deal, aircraft, jets, ministry, defe...   \n","4   [china, chinese, minister, territory, border, ...   \n","5   [china, minister, visit, singh, chinese, myanm...   \n","6   [drones, missile, used, weapon, air, surveilla...   \n","7   [budget, defence, crore, year, spending, gover...   \n","8   [defence, sector, electronics, bharat, develop...   \n","9   [visit, nirmala, sitharaman, pakistan, ministe...   \n","10  [ready, singh, fully, prepared, attack, milita...   \n","\n","                                  Representative_Docs  \n","0   [minister nirmala sitharaman has announced num...  \n","1   [minister rajnath singh has expressed concern ...  \n","2   [minister rajnath singh islamabad meet his pak...  \n","3   [minister nirmala sitharaman has announced tue...  \n","4   [minister antony thursday would not take china...  \n","5   [minister antony was beijing for the defence d...  \n","6   [minister manohar parrikar today that his mini...  \n","7   [budget all you need know new delhi jan saturd...  \n","8   [and aerospace company bharat electronics limi...  \n","9   [minister nirmala sitharaman will visiting pak...  \n","10  [minister manohar parrikar has that the army r...  "],"text/html":["\n","  <div id=\"df-f7e3708d-fa45-4f14-9e1f-b78eb5131e62\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>198</td>\n","      <td>-1_defence_minister_army_military</td>\n","      <td>[defence, minister, army, military, forces, ne...</td>\n","      <td>[army, military, modi, parrikar, troops, pakis...</td>\n","      <td>[defence, minister, army, military, forces, ne...</td>\n","      <td>[minister nirmala sitharaman has announced num...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>104</td>\n","      <td>0_pakistan_army_forces_kashmir</td>\n","      <td>[pakistan, army, forces, kashmir, terrorists, ...</td>\n","      <td>[kashmir, jammu, troops, militants, pakistan, ...</td>\n","      <td>[pakistan, army, forces, kashmir, terrorists, ...</td>\n","      <td>[minister rajnath singh has expressed concern ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>32</td>\n","      <td>1_minister_pakistan_visit_kabul</td>\n","      <td>[minister, pakistan, visit, kabul, defence, af...</td>\n","      <td>[islamabad, pakistan, parrikar, pakistani, kab...</td>\n","      <td>[minister, pakistan, visit, kabul, defence, af...</td>\n","      <td>[minister rajnath singh islamabad meet his pak...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>28</td>\n","      <td>2_fighter_deal_aircraft_jets</td>\n","      <td>[fighter, deal, aircraft, jets, ministry, defe...</td>\n","      <td>[rafale, rafales, aircraft, procurement, dassa...</td>\n","      <td>[fighter, deal, aircraft, jets, ministry, defe...</td>\n","      <td>[minister nirmala sitharaman has announced tue...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>3_china_chinese_minister_territory</td>\n","      <td>[china, chinese, minister, territory, border, ...</td>\n","      <td>[china, asean, beijing, war, pradesh, peaceful...</td>\n","      <td>[china, chinese, minister, territory, border, ...</td>\n","      <td>[minister antony thursday would not take china...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>27</td>\n","      <td>4_china_minister_visit_singh</td>\n","      <td>[china, minister, visit, singh, chinese, myanm...</td>\n","      <td>[beijing, liang, china, wuhan, myanmar, fenghe...</td>\n","      <td>[china, minister, visit, singh, chinese, myanm...</td>\n","      <td>[minister antony was beijing for the defence d...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>26</td>\n","      <td>5_drones_missile_used_weapon</td>\n","      <td>[drones, missile, used, weapon, air, surveilla...</td>\n","      <td>[drone, drones, uav, unmanned, missiles, aircr...</td>\n","      <td>[drones, missile, used, weapon, air, surveilla...</td>\n","      <td>[minister manohar parrikar today that his mini...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>24</td>\n","      <td>6_budget_defence_crore_year</td>\n","      <td>[budget, defence, crore, year, spending, gover...</td>\n","      <td>[crore, fiscal, expenditure, spending, procure...</td>\n","      <td>[budget, defence, crore, year, spending, gover...</td>\n","      <td>[budget all you need know new delhi jan saturd...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>7</td>\n","      <td>20</td>\n","      <td>7_defence_sector_electronics_bharat</td>\n","      <td>[defence, sector, electronics, bharat, develop...</td>\n","      <td>[electronics, aerospace, technologies, industr...</td>\n","      <td>[defence, sector, electronics, bharat, develop...</td>\n","      <td>[and aerospace company bharat electronics limi...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>8_visit_nirmala_sitharaman_pakistan</td>\n","      <td>[visit, nirmala, sitharaman, pakistan, ministe...</td>\n","      <td>[sitharaman, nirmala, sithraam, islamabad, pak...</td>\n","      <td>[visit, nirmala, sitharaman, pakistan, ministe...</td>\n","      <td>[minister nirmala sitharaman will visiting pak...</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>9_ready_singh_fully_prepared</td>\n","      <td>[ready, singh, fully, prepared, attack, milita...</td>\n","      <td>[militaries, preparedness, army, prepare, prep...</td>\n","      <td>[ready, singh, fully, prepared, attack, milita...</td>\n","      <td>[minister manohar parrikar has that the army r...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7e3708d-fa45-4f14-9e1f-b78eb5131e62')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7e3708d-fa45-4f14-9e1f-b78eb5131e62 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7e3708d-fa45-4f14-9e1f-b78eb5131e62');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8eb498d-d3fe-4a31-90e7-7cc0e761e7aa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8eb498d-d3fe-4a31-90e7-7cc0e761e7aa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8eb498d-d3fe-4a31-90e7-7cc0e761e7aa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":318}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aQM23DLR421k"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yOYJO3a8421k"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hp5YRu3r421k"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NU9ij4WO421k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111937801,"user_tz":-330,"elapsed":1171,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"f3155631-329b-4311-88fe-71547001fec0"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.57869829315396\n","c_umass 0.57869829315396\n","c_npmi 0.0832339268352157\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"H_UotBSa421k"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"12sliOU2421k"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l4koGaY0421k"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XCmIhiOk421l"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3wEBXrub421l","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["81baa61e35934c2d8efb209388191a6d","a24679342bdd45fb986b86b6a00891f5","fde683fcade14b4890ad9e949620bf22","0b40f46a53654df18c6c10838239a38f","6d20fe4ecdf543c5a51ad0fc51687306","45bae07a56bf4d69be4a1374c1a936e3","4b382c3e01f54df2aa4dc098fbab5df3","0f2219d80b314474b5cefacaf2c568fb","2e79a65be5cd45c2b0aaf46aeb5e2317","2a5ae7803fba48c78f141351bc72a625","e5984c40e13b490991aa9c0d9c6cf3b3"]},"executionInfo":{"status":"ok","timestamp":1706111948038,"user_tz":-330,"elapsed":10238,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"6261faf7-19ba-4e7b-b9c2-a0b07b57df9b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"81baa61e35934c2d8efb209388191a6d"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:59:02,249 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:59:07,682 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:59:07,683 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:59:07,743 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:59:07,748 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:59:08,254 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wANBveY-421l","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1706111948038,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1c2c4570-12c4-4626-f0b9-3eb88a32fa2c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                           Name  \\\n","0     -1     13    -1_gold_economy_growth_year   \n","1      0    478  0_growth_economy_year_percent   \n","2      1      9  1_real_estate_property_sector   \n","\n","                                      Representation  \\\n","0  [gold, economy, growth, year, foreign, quarter...   \n","1  [growth, economy, year, percent, economic, fis...   \n","2  [real, estate, property, sector, housing, dema...   \n","\n","                                             KeyBERT  \\\n","0  [economy, gdp, investment, crore, economic, in...   \n","1  [gdp, economy, economies, growth, fiscal, infl...   \n","2  [realty, housing, economy, property, investmen...   \n","\n","                                                 MMR  \\\n","0  [gold, economy, growth, year, foreign, quarter...   \n","1  [growth, economy, year, percent, economic, fis...   \n","2  [real, estate, property, sector, housing, dema...   \n","\n","                                 Representative_Docs  \n","0  [after the global crisis has bounced back very...  \n","1  [will the third fastest growing economy the wo...  \n","2  [may see slowdown and that concern are electio...  "],"text/html":["\n","  <div id=\"df-19230ca1-258f-449b-bb24-af3427675323\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>13</td>\n","      <td>-1_gold_economy_growth_year</td>\n","      <td>[gold, economy, growth, year, foreign, quarter...</td>\n","      <td>[economy, gdp, investment, crore, economic, in...</td>\n","      <td>[gold, economy, growth, year, foreign, quarter...</td>\n","      <td>[after the global crisis has bounced back very...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>478</td>\n","      <td>0_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, economic, fis...</td>\n","      <td>[gdp, economy, economies, growth, fiscal, infl...</td>\n","      <td>[growth, economy, year, percent, economic, fis...</td>\n","      <td>[will the third fastest growing economy the wo...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>1_real_estate_property_sector</td>\n","      <td>[real, estate, property, sector, housing, dema...</td>\n","      <td>[realty, housing, economy, property, investmen...</td>\n","      <td>[real, estate, property, sector, housing, dema...</td>\n","      <td>[may see slowdown and that concern are electio...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19230ca1-258f-449b-bb24-af3427675323')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-19230ca1-258f-449b-bb24-af3427675323 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-19230ca1-258f-449b-bb24-af3427675323');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-93b4858f-a0e3-43fb-a8e8-6d55cd5a5a6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-93b4858f-a0e3-43fb-a8e8-6d55cd5a5a6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-93b4858f-a0e3-43fb-a8e8-6d55cd5a5a6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":326}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y1VL56Va421l"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PyeBN-Xw421l"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rpqORKSP421l"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jnNnlM0W421l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111949231,"user_tz":-330,"elapsed":1196,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"40a7e094-3c6f-408b-ac3b-4570801b7115"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5589705752413324\n","c_umass 0.5589705752413324\n","c_npmi 0.07096082282648641\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"V3mtbD-m421l"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KFcZVDxZ421m"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9YZzS2a2421m"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6UM-oU5D421m"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oDAXxjfk421m","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["02b05e7f21634613bd256325ab53bf69","bc130a1ff2144f81a36fb3f6c15b4f0c","61e0449ff6c7488e97433f7eb9664994","7245704d05994cefbfb4d72750cf803c","142c6951f9f24c91b2fbad7f0f25071c","9b5048cd32db4abc8223511f355ee238","dbc9b25040524be6be4dae42bfe91491","055ea4cf6e384b11811130fcac665f69","a5e8988f408c466cbc8d8d1d6dc4e61c","8eef806f7c1945019783f63f54830e3d","744429d2de4243cb892f31a4a47705ef"]},"executionInfo":{"status":"ok","timestamp":1706111960407,"user_tz":-330,"elapsed":10442,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d3e3ffcc-3b0b-4faf-f689-3fd73ce5847c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"02b05e7f21634613bd256325ab53bf69"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:59:13,917 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:59:19,332 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:59:19,333 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:59:19,389 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:59:19,394 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:59:20,495 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vhNQPe7H421m","colab":{"base_uri":"https://localhost:8080/","height":536},"executionInfo":{"status":"ok","timestamp":1706111960407,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"5af350df-82a0-4db5-9e82-1f389e4b2fde"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0     -1     92                -1_company_crore_projects_power   \n","1      0    237  0_infrastructure_sector_government_investment   \n","2      1     57                  1_larsen_toubro_company_power   \n","3      2     46                   2_airport_gmr_stake_airports   \n","4      3     21                   3_solar_power_project_energy   \n","5      4     16                      4_power_plant_gmr_company   \n","6      5     11                  5_energy_power_renewable_coal   \n","7      6      8          6_company_deal_acquisition_subsidiary   \n","8      7      7             7_road_construction_gammon_project   \n","9      8      5                   8_metro_delhi_stations_built   \n","\n","                                      Representation  \\\n","0  [company, crore, projects, power, major, infra...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [larsen, toubro, company, power, crore, order,...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [solar, power, project, energy, adani, company...   \n","5  [power, plant, gmr, company, project, state, e...   \n","6  [energy, power, renewable, coal, government, g...   \n","7  [company, deal, acquisition, subsidiary, limit...   \n","8  [road, construction, gammon, project, contract...   \n","9  [metro, delhi, stations, built, project, eleva...   \n","\n","                                             KeyBERT  \\\n","0  [investment, crore, companies, infrastructure,...   \n","1  [infrastructure, railways, construction, gdp, ...   \n","2  [procurement, larsens, toubro, larsen, crore, ...   \n","3  [gmr, gml, gmm, airport, ggm, gurgaon, mumbai,...   \n","4  [solar, adani, rajasthan, renewable, adansi, m...   \n","5  [gmr, maharashtra, gujarat, gml, gmi, gms, meg...   \n","6  [renewable, megawatts, power, electricity, coa...   \n","7  [company, acquisition, acquire, firm, subsidia...   \n","8  [construction, gammon, gammond, gammong, infra...   \n","9  [delhi, metro, nagar, constructed, rail, dwark...   \n","\n","                                                 MMR  \\\n","0  [company, crore, projects, power, major, infra...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [larsen, toubro, company, power, crore, order,...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [solar, power, project, energy, adani, company...   \n","5  [power, plant, gmr, company, project, state, e...   \n","6  [energy, power, renewable, coal, government, g...   \n","7  [company, deal, acquisition, subsidiary, limit...   \n","8  [road, construction, gammon, project, contract...   \n","9  [metro, delhi, stations, built, project, eleva...   \n","\n","                                 Representative_Docs  \n","0  [major reliance infrastructure ltd has announc...  \n","1  [key driver for economic growth and developmen...  \n","2  [company larsen and toubro has announced that ...  \n","3  [developer and operator gmr group has won the ...  \n","4  [major adani group power subsidiary adanis has...  \n","5  [company gmr group plans invest billion rupees...  \n","6  [the throes crisis with power generation and t...  \n","7  [major has announced the acquisition interest ...  \n","8  [developer gammon infrastructure has been awar...  \n","9  [company larsen toubro limited has bagged orde...  "],"text/html":["\n","  <div id=\"df-2dc8c49b-6f8c-407b-a095-63c472b35ebc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>92</td>\n","      <td>-1_company_crore_projects_power</td>\n","      <td>[company, crore, projects, power, major, infra...</td>\n","      <td>[investment, crore, companies, infrastructure,...</td>\n","      <td>[company, crore, projects, power, major, infra...</td>\n","      <td>[major reliance infrastructure ltd has announc...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>237</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, construction, gdp, ...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[key driver for economic growth and developmen...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>57</td>\n","      <td>1_larsen_toubro_company_power</td>\n","      <td>[larsen, toubro, company, power, crore, order,...</td>\n","      <td>[procurement, larsens, toubro, larsen, crore, ...</td>\n","      <td>[larsen, toubro, company, power, crore, order,...</td>\n","      <td>[company larsen and toubro has announced that ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>46</td>\n","      <td>2_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, ggm, gurgaon, mumbai,...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[developer and operator gmr group has won the ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>3_solar_power_project_energy</td>\n","      <td>[solar, power, project, energy, adani, company...</td>\n","      <td>[solar, adani, rajasthan, renewable, adansi, m...</td>\n","      <td>[solar, power, project, energy, adani, company...</td>\n","      <td>[major adani group power subsidiary adanis has...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>16</td>\n","      <td>4_power_plant_gmr_company</td>\n","      <td>[power, plant, gmr, company, project, state, e...</td>\n","      <td>[gmr, maharashtra, gujarat, gml, gmi, gms, meg...</td>\n","      <td>[power, plant, gmr, company, project, state, e...</td>\n","      <td>[company gmr group plans invest billion rupees...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>5_energy_power_renewable_coal</td>\n","      <td>[energy, power, renewable, coal, government, g...</td>\n","      <td>[renewable, megawatts, power, electricity, coa...</td>\n","      <td>[energy, power, renewable, coal, government, g...</td>\n","      <td>[the throes crisis with power generation and t...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>6_company_deal_acquisition_subsidiary</td>\n","      <td>[company, deal, acquisition, subsidiary, limit...</td>\n","      <td>[company, acquisition, acquire, firm, subsidia...</td>\n","      <td>[company, deal, acquisition, subsidiary, limit...</td>\n","      <td>[major has announced the acquisition interest ...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7_road_construction_gammon_project</td>\n","      <td>[road, construction, gammon, project, contract...</td>\n","      <td>[construction, gammon, gammond, gammong, infra...</td>\n","      <td>[road, construction, gammon, project, contract...</td>\n","      <td>[developer gammon infrastructure has been awar...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>8_metro_delhi_stations_built</td>\n","      <td>[metro, delhi, stations, built, project, eleva...</td>\n","      <td>[delhi, metro, nagar, constructed, rail, dwark...</td>\n","      <td>[metro, delhi, stations, built, project, eleva...</td>\n","      <td>[company larsen toubro limited has bagged orde...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2dc8c49b-6f8c-407b-a095-63c472b35ebc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2dc8c49b-6f8c-407b-a095-63c472b35ebc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2dc8c49b-6f8c-407b-a095-63c472b35ebc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2586f040-abe8-47a6-a62d-e5f01e0603d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2586f040-abe8-47a6-a62d-e5f01e0603d5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2586f040-abe8-47a6-a62d-e5f01e0603d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":334}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i_b6dWXU421m"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dGkraEMv421m"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"g0MSm9YF421m"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pl_Skt7A421m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111962035,"user_tz":-330,"elapsed":1641,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"83ca800d-fe8b-46f5-d5aa-11ca735c17e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.57934398599641\n","c_umass 0.57934398599641\n","c_npmi 0.0963675886122479\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"VUDQ6sTW421n"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-9dFBEHA421n"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"puljDcVR421n"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9-2kQNb4421n","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111962036,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"d6f35803-257b-4b23-b83e-9fbdf528a441"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-60e9232c-5ccc-4bf6-b47e-f47f14184959\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60e9232c-5ccc-4bf6-b47e-f47f14184959')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-60e9232c-5ccc-4bf6-b47e-f47f14184959 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-60e9232c-5ccc-4bf6-b47e-f47f14184959');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d989b856-627b-45e3-8016-97357364427c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d989b856-627b-45e3-8016-97357364427c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d989b856-627b-45e3-8016-97357364427c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bcc5ecbf-72cb-42b6-822b-3ee23ee1a9ee\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bcc5ecbf-72cb-42b6-822b-3ee23ee1a9ee button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":340}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SIYc5U_K421n","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["571bd8458e0949039f9f0e698ec006df","bed08164093b418386a2a3deb64a081f","0091328000a345f49aeea9715d4ff646","a6c222618c914f12b106d6adf82f3ae1","8ff121a5e12c43e996b324352e9ee6ac","876031bde29741df9033f47a3eb50260","653511748d86499689814afe952f69b0","d1a97b8ca46344d4bb900193fc99824c","e71b0d23f6114c9ea2f298b9e54b3168","e8587c14029243fb844f1446b3c19b94","d4a01af24973410dbe60b5ba4b2204b2"]},"executionInfo":{"status":"ok","timestamp":1706111992623,"user_tz":-330,"elapsed":30592,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a61a8f8f-32c5-4be1-8861-7c300424bd48"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"571bd8458e0949039f9f0e698ec006df"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 15:59:35,904 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 15:59:52,086 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 15:59:52,088 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 15:59:52,337 - BERTopic - Cluster - Completed ✓\n","2024-01-24 15:59:52,344 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 15:59:53,025 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mzd0iupP421n","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1706111993344,"user_tz":-330,"elapsed":729,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"c7467385-9f8c-411b-a28e-1266d692ef74"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                        Name  \\\n","0      0   1017  0_growth_infrastructure_economy_government   \n","1      1    502            1_defence_minister_army_pakistan   \n","2      2    481        2_climate_change_temperature_weather   \n","\n","                                      Representation  \\\n","0  [growth, infrastructure, economy, government, ...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [climate, change, temperature, weather, world,...   \n","\n","                                             KeyBERT  \\\n","0  [gdp, economy, growth, infrastructure, finance...   \n","1  [modi, parrikar, jammu, pakistan, kashmir, sin...   \n","2  [climate, climatic, weather, monsoons, monsoon...   \n","\n","                                                 MMR  \\\n","0  [growth, infrastructure, economy, government, ...   \n","1  [defence, minister, army, pakistan, forces, si...   \n","2  [climate, change, temperature, weather, world,...   \n","\n","                                 Representative_Docs  \n","0  [expected grow over per cent and reach gdp tri...  \n","1  [minister antony has called meeting the chiefs...  \n","2  [change adaptation the government has set out ...  "],"text/html":["\n","  <div id=\"df-3e5b4f3e-a730-45cf-85df-4de03818983d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1017</td>\n","      <td>0_growth_infrastructure_economy_government</td>\n","      <td>[growth, infrastructure, economy, government, ...</td>\n","      <td>[gdp, economy, growth, infrastructure, finance...</td>\n","      <td>[growth, infrastructure, economy, government, ...</td>\n","      <td>[expected grow over per cent and reach gdp tri...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>502</td>\n","      <td>1_defence_minister_army_pakistan</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[modi, parrikar, jammu, pakistan, kashmir, sin...</td>\n","      <td>[defence, minister, army, pakistan, forces, si...</td>\n","      <td>[minister antony has called meeting the chiefs...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>481</td>\n","      <td>2_climate_change_temperature_weather</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[climate, climatic, weather, monsoons, monsoon...</td>\n","      <td>[climate, change, temperature, weather, world,...</td>\n","      <td>[change adaptation the government has set out ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e5b4f3e-a730-45cf-85df-4de03818983d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e5b4f3e-a730-45cf-85df-4de03818983d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e5b4f3e-a730-45cf-85df-4de03818983d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84676829-ee0a-43e5-a136-7a8fa2aa8718\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84676829-ee0a-43e5-a136-7a8fa2aa8718')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84676829-ee0a-43e5-a136-7a8fa2aa8718 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":342}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nJA2dnOi421n"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pu08mnxN421n"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QX8ZFIH8421n"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r8Qz-khH421o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706111996722,"user_tz":-330,"elapsed":3381,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"4ccd43a7-ca61-493e-e61d-7acfb8dda7fb"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.7150234145194994\n","c_umass 0.7150234145194994\n","c_npmi 0.10338581107577927\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uBAxuYCI421o"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"9Yr0YfCm421o"},"source":["### SVD-HDBSCAN"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YzlwmMoN421o"},"outputs":[],"source":["from hdbscan import HDBSCAN\n","from sklearn.decomposition import TruncatedSVD\n","experiment='SVD/HDBSCAN'\n","umap_model = TruncatedSVD(n_components=100, random_state=42)\n","hdbscan_model = HDBSCAN(min_cluster_size=5, prediction_data=True)\n","topic_model = get_topic_model(umap_model, hdbscan_model)"]},{"cell_type":"markdown","metadata":{"id":"hZ_m0TD8421o"},"source":["#### Indian climate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MVV2gt4n421o"},"outputs":[],"source":["topic = 'Indian climate'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uznvrEkM421o","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706111997458,"user_tz":-330,"elapsed":749,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"34a7f5c0-bc87-46ff-ec94-97a8743ab2ef"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Category                                             Prompt  \\\n","0    Indian climate  Indian climate scientists have long complained...   \n","1    Indian climate  Indian climate is characterized by great varia...   \n","2    Indian climate  Indian climate is very hot, dry and humid. Peo...   \n","3    Indian climate  Indian climate\\nFrom Wikipedia, the free encyc...   \n","4    Indian climate  Indian climate change adaptation strategy\\nThe...   \n","..              ...                                                ...   \n","495  Indian climate  Indian climate has been always unpredictable. ...   \n","496  Indian climate  Indian climate change activists on hunger stri...   \n","497  Indian climate  Indian climate is hot and humid. During summer...   \n","498  Indian climate  Indian climate is very variable and changes fr...   \n","499  Indian climate  Indian climate:\\nIndia experiences four differ...   \n","\n","     Generated Text    i  MAX_LEN  \\\n","0                 0  189      NaN   \n","1                 1  200      NaN   \n","2                 2  186      NaN   \n","3                 3  193      NaN   \n","4                 4  185      NaN   \n","..              ...  ...      ...   \n","495             495  183      NaN   \n","496             496  185      NaN   \n","497             497  200      NaN   \n","498             498  192      NaN   \n","499             499  200      NaN   \n","\n","                                        Processed Text  \n","0    scientists have long complained lack adequate ...  \n","1    characterized great variability has wide varie...  \n","2    very hot dry and humid people here have face d...  \n","3    from wikipedia the free encyclopedia the clima...  \n","4    change adaptation strategy the government rele...  \n","..                                                 ...  \n","495  has been always unpredictable has many extreme...  \n","496  change activists hunger strike demand action d...  \n","497  hot and humid during summer months temperature...  \n","498  very variable and changes from one season anot...  \n","499  experiences four different climates depending ...  \n","\n","[500 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b70e0f12-a6c4-412f-8374-28e0745e15d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate has been always unpredictable. ...</td>\n","      <td>495</td>\n","      <td>183</td>\n","      <td>NaN</td>\n","      <td>has been always unpredictable has many extreme...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change activists on hunger stri...</td>\n","      <td>496</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change activists hunger strike demand action d...</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is hot and humid. During summer...</td>\n","      <td>497</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>hot and humid during summer months temperature...</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very variable and changes fr...</td>\n","      <td>498</td>\n","      <td>192</td>\n","      <td>NaN</td>\n","      <td>very variable and changes from one season anot...</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate:\\nIndia experiences four differ...</td>\n","      <td>499</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>experiences four different climates depending ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b70e0f12-a6c4-412f-8374-28e0745e15d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b70e0f12-a6c4-412f-8374-28e0745e15d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b70e0f12-a6c4-412f-8374-28e0745e15d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0eae41f9-53a1-4dd9-8f60-c80a05d28bd7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0eae41f9-53a1-4dd9-8f60-c80a05d28bd7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0eae41f9-53a1-4dd9-8f60-c80a05d28bd7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9b8befd8-37e1-450d-be2b-dfda533c238b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9b8befd8-37e1-450d-be2b-dfda533c238b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":349}],"source":["df = dfs[0]\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KEXt6Udw421o","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["dc050e71e240472780dd61c34d66b051","6ba79323a294443a84ea07dcfc9d417a","a3bee79b29744c35bf51a13e2968a7d0","35085dc7c81f4b63be410f7220a8d77c","0e7925f9bb4e472fb342bb5df251fd76","14eb9b22bb914c27adda23a60238a625","7c9d928c98784732ba5a535a38a87656","0805dd517086460fb2eed351b1da12d6","aa38f0f67d9c467db0c775dc99c5ae9c","8814eb41b301406ebd74458f3d805dd1","aa0e41c57e454ea18a925c42a0bcccdb"]},"executionInfo":{"status":"ok","timestamp":1706112002695,"user_tz":-330,"elapsed":5240,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"3d0c1665-75dc-491e-db40-cfe47e3a03e6"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dc050e71e240472780dd61c34d66b051"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 16:00:01,792 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 16:00:01,938 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 16:00:01,941 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 16:00:02,119 - BERTopic - Cluster - Completed ✓\n","2024-01-24 16:00:02,124 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 16:00:02,700 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d98keJtK421p","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"ok","timestamp":1706112002696,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"bfda7156-9650-44b2-d5d2-df3f02aaba83"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                     Name  \\\n","0     -1    328           -1_climate_change_world_people   \n","1      0     83        0_climate_change_policy_emissions   \n","2      1     75         1_climate_tropical_season_winter   \n","3      2     14  2_sexual_pachauri_allegations_scientist   \n","\n","                                      Representation  \\\n","0  [climate, change, world, people, minister, glo...   \n","1  [climate, change, policy, emissions, plan, ada...   \n","2  [climate, tropical, season, winter, summer, so...   \n","3  [sexual, pachauri, allegations, scientist, pan...   \n","\n","                                             KeyBERT  \\\n","0  [climate, weather, warming, environmental, env...   \n","1  [climate, agriculture, adaptation, greenhouse,...   \n","2  [climates, subtropical, kerala, climate, monso...   \n","3  [pachauri, pachouri, pachuuri, allegations, pa...   \n","\n","                                                 MMR  \\\n","0  [climate, change, world, people, minister, glo...   \n","1  [climate, change, policy, emissions, plan, ada...   \n","2  [climate, tropical, season, winter, summer, so...   \n","3  [sexual, pachauri, allegations, scientist, pan...   \n","\n","                                 Representative_Docs  \n","0  [explore related topics climate chart for the ...  \n","1  [change policy the national action plan climat...  \n","2  [being country located south asia has very div...  \n","3  [scientist pachauri the head the intergovernme...  "],"text/html":["\n","  <div id=\"df-8c864201-2561-4c63-b38e-4843a00d88bf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>328</td>\n","      <td>-1_climate_change_world_people</td>\n","      <td>[climate, change, world, people, minister, glo...</td>\n","      <td>[climate, weather, warming, environmental, env...</td>\n","      <td>[climate, change, world, people, minister, glo...</td>\n","      <td>[explore related topics climate chart for the ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>83</td>\n","      <td>0_climate_change_policy_emissions</td>\n","      <td>[climate, change, policy, emissions, plan, ada...</td>\n","      <td>[climate, agriculture, adaptation, greenhouse,...</td>\n","      <td>[climate, change, policy, emissions, plan, ada...</td>\n","      <td>[change policy the national action plan climat...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>75</td>\n","      <td>1_climate_tropical_season_winter</td>\n","      <td>[climate, tropical, season, winter, summer, so...</td>\n","      <td>[climates, subtropical, kerala, climate, monso...</td>\n","      <td>[climate, tropical, season, winter, summer, so...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>2_sexual_pachauri_allegations_scientist</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[pachauri, pachouri, pachuuri, allegations, pa...</td>\n","      <td>[sexual, pachauri, allegations, scientist, pan...</td>\n","      <td>[scientist pachauri the head the intergovernme...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c864201-2561-4c63-b38e-4843a00d88bf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8c864201-2561-4c63-b38e-4843a00d88bf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8c864201-2561-4c63-b38e-4843a00d88bf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85f192db-8a42-4c56-b4a0-f6e4de41a3a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85f192db-8a42-4c56-b4a0-f6e4de41a3a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85f192db-8a42-4c56-b4a0-f6e4de41a3a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":351}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NKz9mlHO421p"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aGKU7sic421p"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FORsS2zY421p"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zUScISLE421p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706112003919,"user_tz":-330,"elapsed":1228,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"75dd3584-6fe4-4867-d962-3c8f969ca63c"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6989555040763819\n","c_umass 0.6989555040763819\n","c_npmi 0.18769874653832805\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"pGsrmipQ421p"},"source":["#### Indian defence"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6sWMF8SW421p"},"outputs":[],"source":["topic = 'Indian defense'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HzjP36Ag421p"},"outputs":[],"source":["df = dfs[1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eh0SmgnV421q","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["f3aa399773084008891be45095a5ad4c","e36b134664ff4cceb6aca3418a3339c4","9454fb7d14044beeabffddd2d49db154","93e95f40643e4b39b09632fdfa0bf5cc","774f2c3de8d742b8a510f9a47a3123f0","89e011ef2e6e4edc902a5458ebe5eb9d","247d426a40a64610aa0774a49d9ab6e7","0476e9c8e6034cf98c5e735397245a6a","22107f467feb493cbd25a0ca49d6cb9e","22edf2023eb44e7f96c799c5195bcb1c","0e2be9c41f244274b0a0e84c9a5e879d"]},"executionInfo":{"status":"ok","timestamp":1706112009133,"user_tz":-330,"elapsed":5219,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"a0d6530f-12ad-448a-fe96-e9a731497b4c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f3aa399773084008891be45095a5ad4c"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 16:00:08,025 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 16:00:08,246 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 16:00:08,250 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 16:00:08,478 - BERTopic - Cluster - Completed ✓\n","2024-01-24 16:00:08,487 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 16:00:09,410 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uEELMtSi421q","colab":{"base_uri":"https://localhost:8080/","height":293},"executionInfo":{"status":"ok","timestamp":1706112009133,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b39a743b-64ae-4b5b-fac8-299197d40f93"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                Name  \\\n","0     -1    354     -1_defence_minister_army_forces   \n","1      0    100      0_pakistan_minister_singh_army   \n","2      1     26   1_budget_defence_crore_government   \n","3      2     14        2_fighter_jets_aircraft_deal   \n","4      3      6  3_unmanned_drones_surveillance_air   \n","\n","                                      Representation  \\\n","0  [defence, minister, army, forces, singh, new, ...   \n","1  [pakistan, minister, singh, army, kashmir, def...   \n","2  [budget, defence, crore, government, spending,...   \n","3  [fighter, jets, aircraft, deal, french, defenc...   \n","4  [unmanned, drones, surveillance, air, systems,...   \n","\n","                                             KeyBERT  \\\n","0  [procurement, military, pakistan, army, jammu,...   \n","1  [pakistan, islamabad, pakistani, kashmir, jamm...   \n","2  [crore, budgets, fiscal, expenditure, spending...   \n","3  [rafales, rafale, aircraft, rafals, dassault, ...   \n","4  [uavs, uav, drone, drones, unmanned, aircraft,...   \n","\n","                                                 MMR  \\\n","0  [defence, minister, army, forces, singh, new, ...   \n","1  [pakistan, minister, singh, army, kashmir, def...   \n","2  [budget, defence, crore, government, spending,...   \n","3  [fighter, jets, aircraft, deal, french, defenc...   \n","4  [unmanned, drones, surveillance, air, systems,...   \n","\n","                                 Representative_Docs  \n","0  [minister manohar parrikar has asked for more ...  \n","1  [chief visit pakistan discuss tiesseptember ic...  \n","2  [budget all you need know new delhi jan saturd...  \n","3  [ministry has given green signal for procuring...  \n","4  [forces are set deploy new type unmanned aircr...  "],"text/html":["\n","  <div id=\"df-15c71c60-40ff-4b15-98d8-d935d5c27d30\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>354</td>\n","      <td>-1_defence_minister_army_forces</td>\n","      <td>[defence, minister, army, forces, singh, new, ...</td>\n","      <td>[procurement, military, pakistan, army, jammu,...</td>\n","      <td>[defence, minister, army, forces, singh, new, ...</td>\n","      <td>[minister manohar parrikar has asked for more ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>0_pakistan_minister_singh_army</td>\n","      <td>[pakistan, minister, singh, army, kashmir, def...</td>\n","      <td>[pakistan, islamabad, pakistani, kashmir, jamm...</td>\n","      <td>[pakistan, minister, singh, army, kashmir, def...</td>\n","      <td>[chief visit pakistan discuss tiesseptember ic...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>1_budget_defence_crore_government</td>\n","      <td>[budget, defence, crore, government, spending,...</td>\n","      <td>[crore, budgets, fiscal, expenditure, spending...</td>\n","      <td>[budget, defence, crore, government, spending,...</td>\n","      <td>[budget all you need know new delhi jan saturd...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>2_fighter_jets_aircraft_deal</td>\n","      <td>[fighter, jets, aircraft, deal, french, defenc...</td>\n","      <td>[rafales, rafale, aircraft, rafals, dassault, ...</td>\n","      <td>[fighter, jets, aircraft, deal, french, defenc...</td>\n","      <td>[ministry has given green signal for procuring...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>3_unmanned_drones_surveillance_air</td>\n","      <td>[unmanned, drones, surveillance, air, systems,...</td>\n","      <td>[uavs, uav, drone, drones, unmanned, aircraft,...</td>\n","      <td>[unmanned, drones, surveillance, air, systems,...</td>\n","      <td>[forces are set deploy new type unmanned aircr...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15c71c60-40ff-4b15-98d8-d935d5c27d30')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-15c71c60-40ff-4b15-98d8-d935d5c27d30 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-15c71c60-40ff-4b15-98d8-d935d5c27d30');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18317197-4144-4f23-8872-5eef143bc1c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18317197-4144-4f23-8872-5eef143bc1c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18317197-4144-4f23-8872-5eef143bc1c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":359}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tUWPMrF0421q"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qq-BYeiH421q"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BHvsQcMC421q"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2ZdSr6c-421q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706112010300,"user_tz":-330,"elapsed":1179,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"9d389dd5-1c7d-4300-e122-b3aac4c4d4a9"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.6376810779310107\n","c_umass 0.6376810779310107\n","c_npmi 0.16375461050898255\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"QktLNKrF421q"},"source":["#### Indian economy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-Fw0MlOo421q"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wBnwAJVz421q"},"outputs":[],"source":["topic = 'Indian economy'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IXN4ABB2421q"},"outputs":[],"source":["df = dfs[2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aoUEQLFz421r","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["af566b0cf3c842f38c6a711fe4eed8ef","d8fcdb65755f4ef9b3f94e2e0fcb9cbb","1de8ed79dfd246a695069ddda21fc361","f3d01dcba0964372a0f45c1a2435bade","ea0a58302df94ea3be7f3c4fdef55051","350d08b18ab644a884c59b0491c7141d","acedd703da3c49a8aa2476d48d54c725","dad44ebb0bee4dbab25d556bc3226b36","f60a28afd24646688987046cc9826242","56c4f6ae07b8442bad6a9fc7023715fa","b71f3c01ed2640ebae2d9543d360262d"]},"executionInfo":{"status":"ok","timestamp":1706112015146,"user_tz":-330,"elapsed":4849,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"b3f01696-b0d7-465d-d97e-0d58664c1395"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"af566b0cf3c842f38c6a711fe4eed8ef"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 16:00:14,663 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 16:00:14,727 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 16:00:14,729 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 16:00:14,909 - BERTopic - Cluster - Completed ✓\n","2024-01-24 16:00:14,914 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 16:00:15,342 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jsedMsYL421r","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1706112015146,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ac0c1f4d-6b56-45f5-c18c-e5a0bf4753e2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                  Name  \\\n","0     -1    117  -1_government_business_economy_world   \n","1      0    378         0_growth_economy_year_percent   \n","2      1      5         1_estate_real_sector_projects   \n","\n","                                      Representation  \\\n","0  [government, business, economy, world, growth,...   \n","1  [growth, economy, year, percent, fiscal, econo...   \n","2  [estate, real, sector, projects, housing, best...   \n","\n","                                             KeyBERT  \\\n","0  [economy, economies, industry, china, business...   \n","1  [gdp, economy, growth, economies, fiscal, econ...   \n","2  [realty, housing, urbanization, investment, re...   \n","\n","                                                 MMR  \\\n","0  [government, business, economy, world, growth,...   \n","1  [growth, economy, year, percent, fiscal, econo...   \n","2  [estate, real, sector, projects, housing, best...   \n","\n","                                 Representative_Docs  \n","0  [the most important and the largest asia the m...  \n","1  [grow world bank new delhi economy expected ex...  \n","2  [one the most promising markets the world the ...  "],"text/html":["\n","  <div id=\"df-ed91937a-9e2b-4679-b69e-5f12dc5116de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>117</td>\n","      <td>-1_government_business_economy_world</td>\n","      <td>[government, business, economy, world, growth,...</td>\n","      <td>[economy, economies, industry, china, business...</td>\n","      <td>[government, business, economy, world, growth,...</td>\n","      <td>[the most important and the largest asia the m...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>378</td>\n","      <td>0_growth_economy_year_percent</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[gdp, economy, growth, economies, fiscal, econ...</td>\n","      <td>[growth, economy, year, percent, fiscal, econo...</td>\n","      <td>[grow world bank new delhi economy expected ex...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1_estate_real_sector_projects</td>\n","      <td>[estate, real, sector, projects, housing, best...</td>\n","      <td>[realty, housing, urbanization, investment, re...</td>\n","      <td>[estate, real, sector, projects, housing, best...</td>\n","      <td>[one the most promising markets the world the ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed91937a-9e2b-4679-b69e-5f12dc5116de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed91937a-9e2b-4679-b69e-5f12dc5116de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed91937a-9e2b-4679-b69e-5f12dc5116de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a41e9e1-5a4a-40f6-bcba-6e49e1351bd5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a41e9e1-5a4a-40f6-bcba-6e49e1351bd5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a41e9e1-5a4a-40f6-bcba-6e49e1351bd5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":367}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MmBE2od5421r"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4Sgc8XCx421r"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xk-tSWXT421r"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x-hegVkB421r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706112016109,"user_tz":-330,"elapsed":968,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"048708dc-6ca7-49ac-8b9c-772b4ee985fb"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.5055367382129166\n","c_umass 0.5055367382129166\n","c_npmi 0.05639944973186676\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"qJQl7Onj421s"},"source":["#### Indian infra"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MK_UkJ0S421u"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wdS0aody421v"},"outputs":[],"source":["topic = 'Indian infrastructure'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dIDO3tb2421v"},"outputs":[],"source":["df = dfs[3]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y9pzFNgR421v","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["a9df3b3e78e44a12b2afeda7471f5be1","89a24e1e64354f3994aa2174e921c8df","be02c450400247ea84e90cc92d4654ea","b6b702341aa642c883c7334afc0575a4","53fc14824955422a889b3ad496e70d2e","8b0f62ec91094885b4275533df8e007d","30fa9f482305416980b5a2db5fc9c8f3","f7d31f80302b44298a70313ab2b13b95","77131b797e884d6b9e6017085ca1baf3","19f4893d2037403393e5c7489e2a3033","1727dc17ddf5400b94cb3386a4c73c13"]},"executionInfo":{"status":"ok","timestamp":1706112021897,"user_tz":-330,"elapsed":5790,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"1e398a00-e10f-490c-fdcb-01c9ad97e72d"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/16 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a9df3b3e78e44a12b2afeda7471f5be1"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 16:00:20,607 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 16:00:20,767 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 16:00:20,773 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 16:00:21,011 - BERTopic - Cluster - Completed ✓\n","2024-01-24 16:00:21,017 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 16:00:22,164 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5DTYrDpF421v","colab":{"base_uri":"https://localhost:8080/","height":439},"executionInfo":{"status":"ok","timestamp":1706112021898,"user_tz":-330,"elapsed":14,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"29fb3025-5bb9-40c9-9491-0567cceebd6d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Topic  Count                                           Name  \\\n","0     -1    245                 -1_company_project_power_crore   \n","1      0    175  0_infrastructure_sector_government_investment   \n","2      1     28                    1_crore_larsen_power_toubro   \n","3      2     27                   2_airport_gmr_stake_airports   \n","4      3      9                  3_irb_highway_developers_toll   \n","5      4      6                     4_solar_power_adani_adanis   \n","6      5      5                    5_metro_delhi_rail_stations   \n","7      6      5                      6_solar_power_gmr_project   \n","\n","                                      Representation  \\\n","0  [company, project, power, crore, construction,...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [crore, larsen, power, toubro, order, plant, c...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [irb, highway, developers, toll, company, expr...   \n","5  [solar, power, adani, adanis, group, company, ...   \n","6  [metro, delhi, rail, stations, line, project, ...   \n","7  [solar, power, gmr, project, company, state, g...   \n","\n","                                             KeyBERT  \\\n","0  [investment, companies, gujarat, infrastructur...   \n","1  [infrastructure, railways, sector, industry, g...   \n","2  [toubro, larsenal, larsens, larsen, toubros, p...   \n","3  [gmr, gml, gmm, airport, goa, gurgaon, mumbai,...   \n","4  [irbi, irb, irbt, irda, expressway, irbs, infr...   \n","5  [adani, adansi, solar, adanis, powergrid, adit...   \n","6  [metro, delhi, mumbai, rail, toubro, built, co...   \n","7  [gmr, gmi, gujarat, maharashtra, solar, uttar,...   \n","\n","                                                 MMR  \\\n","0  [company, project, power, crore, construction,...   \n","1  [infrastructure, sector, government, investmen...   \n","2  [crore, larsen, power, toubro, order, plant, c...   \n","3  [airport, gmr, stake, airports, international,...   \n","4  [irb, highway, developers, toll, company, expr...   \n","5  [solar, power, adani, adanis, group, company, ...   \n","6  [metro, delhi, rail, stations, line, project, ...   \n","7  [solar, power, gmr, project, company, state, g...   \n","\n","                                 Representative_Docs  \n","0  [company gmr group has acquired minority stake...  \n","1  [sector has strong pipeline projects the indus...  \n","2  [major larsen toubro wednesday its consolidate...  \n","3  [major gmr group has bagged crore contract bui...  \n","4  [company irb infrastructure developers irb has...  \n","5  [giant adani group will invest billion its fir...  \n","6  [and engineering major larsen toubro has won t...  \n","7  [company gmr energy plans spend billion additi...  "],"text/html":["\n","  <div id=\"df-ed1712ac-fd23-41e7-b3ba-9504160a66f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>245</td>\n","      <td>-1_company_project_power_crore</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[investment, companies, gujarat, infrastructur...</td>\n","      <td>[company, project, power, crore, construction,...</td>\n","      <td>[company gmr group has acquired minority stake...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>175</td>\n","      <td>0_infrastructure_sector_government_investment</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[infrastructure, railways, sector, industry, g...</td>\n","      <td>[infrastructure, sector, government, investmen...</td>\n","      <td>[sector has strong pipeline projects the indus...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>28</td>\n","      <td>1_crore_larsen_power_toubro</td>\n","      <td>[crore, larsen, power, toubro, order, plant, c...</td>\n","      <td>[toubro, larsenal, larsens, larsen, toubros, p...</td>\n","      <td>[crore, larsen, power, toubro, order, plant, c...</td>\n","      <td>[major larsen toubro wednesday its consolidate...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>27</td>\n","      <td>2_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, goa, gurgaon, mumbai,...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>3_irb_highway_developers_toll</td>\n","      <td>[irb, highway, developers, toll, company, expr...</td>\n","      <td>[irbi, irb, irbt, irda, expressway, irbs, infr...</td>\n","      <td>[irb, highway, developers, toll, company, expr...</td>\n","      <td>[company irb infrastructure developers irb has...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>4_solar_power_adani_adanis</td>\n","      <td>[solar, power, adani, adanis, group, company, ...</td>\n","      <td>[adani, adansi, solar, adanis, powergrid, adit...</td>\n","      <td>[solar, power, adani, adanis, group, company, ...</td>\n","      <td>[giant adani group will invest billion its fir...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>5_metro_delhi_rail_stations</td>\n","      <td>[metro, delhi, rail, stations, line, project, ...</td>\n","      <td>[metro, delhi, mumbai, rail, toubro, built, co...</td>\n","      <td>[metro, delhi, rail, stations, line, project, ...</td>\n","      <td>[and engineering major larsen toubro has won t...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>6_solar_power_gmr_project</td>\n","      <td>[solar, power, gmr, project, company, state, g...</td>\n","      <td>[gmr, gmi, gujarat, maharashtra, solar, uttar,...</td>\n","      <td>[solar, power, gmr, project, company, state, g...</td>\n","      <td>[company gmr energy plans spend billion additi...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed1712ac-fd23-41e7-b3ba-9504160a66f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed1712ac-fd23-41e7-b3ba-9504160a66f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed1712ac-fd23-41e7-b3ba-9504160a66f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2b514aac-b7e2-46f5-aefa-da19572e9e2c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2b514aac-b7e2-46f5-aefa-da19572e9e2c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2b514aac-b7e2-46f5-aefa-da19572e9e2c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":375}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2T7zmd3H421v"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"87jdMIYr421v"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-nCnjU-L421w"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CiZW-Szs421w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706112023296,"user_tz":-330,"elapsed":548,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"377befbb-0bc3-4da4-cdef-e326af3f41da"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.595380305108267\n","c_umass 0.595380305108267\n","c_npmi 0.09091026965363593\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"markdown","metadata":{"id":"IZ70L-a9421w"},"source":["#### Combined"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AKrT8wg-421w"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eCYaadIP421w"},"outputs":[],"source":["topic = 'Combined'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OMaaJVkn421w","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1706112023296,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"ce36bab7-ddba-4247-d83c-406a9b7ad908"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Category  \\\n","0            Indian climate   \n","1            Indian climate   \n","2            Indian climate   \n","3            Indian climate   \n","4            Indian climate   \n","...                     ...   \n","1995  Indian infrastructure   \n","1996  Indian infrastructure   \n","1997  Indian infrastructure   \n","1998  Indian infrastructure   \n","1999  Indian infrastructure   \n","\n","                                                 Prompt  Generated Text    i  \\\n","0     Indian climate scientists have long complained...               0  189   \n","1     Indian climate is characterized by great varia...               1  200   \n","2     Indian climate is very hot, dry and humid. Peo...               2  186   \n","3     Indian climate\\nFrom Wikipedia, the free encyc...               3  193   \n","4     Indian climate change adaptation strategy\\nThe...               4  185   \n","...                                                 ...             ...  ...   \n","1995  Indian infrastructure company L&T is all set t...             495  186   \n","1996  Indian infrastructure is facing an unprecedent...             496  200   \n","1997  Indian infrastructure giant GVK Power and Infr...             497  190   \n","1998  Indian infrastructure company GMR Group has be...             498  184   \n","1999  Indian infrastructure is in poor shape, a fact...             499  181   \n","\n","      MAX_LEN                                     Processed Text  \n","0         NaN  scientists have long complained lack adequate ...  \n","1         NaN  characterized great variability has wide varie...  \n","2         NaN  very hot dry and humid people here have face d...  \n","3         NaN  from wikipedia the free encyclopedia the clima...  \n","4         NaN  change adaptation strategy the government rele...  \n","...       ...                                                ...  \n","1995      NaN  company all set acquire french engineering pro...  \n","1996      NaN  facing unprecedented pressure meeting the incr...  \n","1997      NaN  giant gvk power and infrastructure limited has...  \n","1998      NaN  company gmr group has been accused illegally a...  \n","1999      NaN  poor shape fact that was recently confirmed th...  \n","\n","[2000 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-50027ec7-7d1c-4c1e-bf14-a97b3ddd4bfc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>Prompt</th>\n","      <th>Generated Text</th>\n","      <th>i</th>\n","      <th>MAX_LEN</th>\n","      <th>Processed Text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate scientists have long complained...</td>\n","      <td>0</td>\n","      <td>189</td>\n","      <td>NaN</td>\n","      <td>scientists have long complained lack adequate ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is characterized by great varia...</td>\n","      <td>1</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>characterized great variability has wide varie...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate is very hot, dry and humid. Peo...</td>\n","      <td>2</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>very hot dry and humid people here have face d...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate\\nFrom Wikipedia, the free encyc...</td>\n","      <td>3</td>\n","      <td>193</td>\n","      <td>NaN</td>\n","      <td>from wikipedia the free encyclopedia the clima...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Indian climate</td>\n","      <td>Indian climate change adaptation strategy\\nThe...</td>\n","      <td>4</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>change adaptation strategy the government rele...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company L&amp;T is all set t...</td>\n","      <td>495</td>\n","      <td>186</td>\n","      <td>NaN</td>\n","      <td>company all set acquire french engineering pro...</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is facing an unprecedent...</td>\n","      <td>496</td>\n","      <td>200</td>\n","      <td>NaN</td>\n","      <td>facing unprecedented pressure meeting the incr...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure giant GVK Power and Infr...</td>\n","      <td>497</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>giant gvk power and infrastructure limited has...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure company GMR Group has be...</td>\n","      <td>498</td>\n","      <td>184</td>\n","      <td>NaN</td>\n","      <td>company gmr group has been accused illegally a...</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Indian infrastructure</td>\n","      <td>Indian infrastructure is in poor shape, a fact...</td>\n","      <td>499</td>\n","      <td>181</td>\n","      <td>NaN</td>\n","      <td>poor shape fact that was recently confirmed th...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50027ec7-7d1c-4c1e-bf14-a97b3ddd4bfc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50027ec7-7d1c-4c1e-bf14-a97b3ddd4bfc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50027ec7-7d1c-4c1e-bf14-a97b3ddd4bfc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e392f9eb-85ec-4015-afe9-2effb3eddfb1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e392f9eb-85ec-4015-afe9-2effb3eddfb1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e392f9eb-85ec-4015-afe9-2effb3eddfb1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_818ffbef-3213-4efd-af7c-f0881b7b7268\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_818ffbef-3213-4efd-af7c-f0881b7b7268 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":381}],"source":["df = df_combined\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c04HFn6l421w","colab":{"base_uri":"https://localhost:8080/","height":159,"referenced_widgets":["ce1407e2343e4599a7232c895cf04095","24339df8681e4a938836b3630c0409f4","dafd41cff25c41be93ade1d2f5b52cf4","38419404a39b4fdabd4eb2e43ba984bb","6615d640761045098f89ec6f9d638c46","e52ae0b013cd4d02b8a234656a3d2a44","7fbc9a3925f2470aa1011f85c47dfe09","8034f20a6fc44ceea30ec14207735c11","da37e1e3658c4bda9910998ec0657777","75b21426f3ad47a2bde7d4513f31ac1d","ad9bfd3ff79f4b339c0b2b78ccc17e54"]},"executionInfo":{"status":"ok","timestamp":1706112041288,"user_tz":-330,"elapsed":17995,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"8dea5084-f2bf-45b4-cc6d-5b45d547ec23"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Batches:   0%|          | 0/63 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ce1407e2343e4599a7232c895cf04095"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["2024-01-24 16:00:37,539 - BERTopic - Dimensionality - Fitting the dimensionality reduction algorithm\n","2024-01-24 16:00:37,838 - BERTopic - Dimensionality - Completed ✓\n","2024-01-24 16:00:37,845 - BERTopic - Cluster - Start clustering the reduced embeddings\n","2024-01-24 16:00:39,394 - BERTopic - Cluster - Completed ✓\n","2024-01-24 16:00:39,400 - BERTopic - Representation - Extracting topics from clusters using representation models.\n","2024-01-24 16:00:41,324 - BERTopic - Representation - Completed ✓\n"]}],"source":["embedding_model = SentenceTransformer(\"all-mpnet-base-v2\")\n","embeddings = embedding_model.encode(df['Processed Text'], show_progress_bar=True)\n","topics, probs = topic_model.fit_transform(df['Processed Text'], embeddings)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5i__fn37421w","colab":{"base_uri":"https://localhost:8080/","height":829},"executionInfo":{"status":"ok","timestamp":1706112041289,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2d92244f-ecb6-4bf5-ff2b-f802a664f359"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Topic  Count                                     Name  \\\n","0      -1    979      -1_climate_minister_defence_company   \n","1       0    522  0_growth_infrastructure_economy_percent   \n","2       1    164           1_pakistan_minister_singh_army   \n","3       2     83         2_climate_tropical_season_winter   \n","4       3     80           3_climate_change_policy_action   \n","5       4     31            4_larsen_toubro_company_power   \n","6       5     29             5_airport_gmr_stake_airports   \n","7       6     26          6_defence_budget_crore_spending   \n","8       7     18          7_fighter_jets_aircraft_defence   \n","9       8     14  8_sexual_pachauri_allegations_scientist   \n","10      9     14                9_power_gmr_company_plant   \n","11     10     13             10_irb_highway_company_crore   \n","12     11     10          11_heat_body_summer_temperature   \n","13     12      6      12_drones_surveillance_unmanned_air   \n","14     13      6              13_solar_power_adani_adanis   \n","15     14      5        14_estate_real_projects_companies   \n","\n","                                       Representation  \\\n","0   [climate, minister, defence, company, change, ...   \n","1   [growth, infrastructure, economy, percent, fis...   \n","2   [pakistan, minister, singh, army, kashmir, def...   \n","3   [climate, tropical, season, winter, summer, te...   \n","4   [climate, change, policy, action, adaptation, ...   \n","5   [larsen, toubro, company, power, crore, order,...   \n","6   [airport, gmr, stake, airports, international,...   \n","7   [defence, budget, crore, spending, allocation,...   \n","8   [fighter, jets, aircraft, defence, deal, rafal...   \n","9   [sexual, pachauri, allegations, scientist, sex...   \n","10  [power, gmr, company, plant, project, solar, s...   \n","11  [irb, highway, company, crore, developers, con...   \n","12  [heat, body, summer, temperature, strokes, hot...   \n","13  [drones, surveillance, unmanned, air, armed, s...   \n","14  [solar, power, adani, adanis, company, project...   \n","15  [estate, real, projects, companies, growth, be...   \n","\n","                                              KeyBERT  \\\n","0   [climate, crore, emissions, solar, infrastruct...   \n","1   [gdp, economy, fiscal, economies, growth, econ...   \n","2   [pakistan, islamabad, pakistani, kashmir, jamm...   \n","3   [climates, subtropical, kerala, climate, monso...   \n","4   [climate, adaptation, droughts, agriculture, g...   \n","5   [procurement, toubro, larsens, larsen, compani...   \n","6   [gmr, gml, gmm, airport, gurgaon, mumbai, gmmg...   \n","7   [budgets, procurements, expenditure, fiscal, s...   \n","8   [rafales, rafale, aircraft, procurement, boein...   \n","9   [pachauri, pachuuri, pachouri, allegations, pa...   \n","10  [gmr, maharashtra, gujarat, gsr, gmi, gms, meg...   \n","11  [expressway, irbi, irb, irbt, irbs, highways, ...   \n","12  [heatstroke, temperature, summers, summer, tem...   \n","13  [uavs, uav, drone, drones, unmanned, aircraft,...   \n","14  [adani, adansi, solar, adanis, powergrid, adit...   \n","15  [realty, urbanization, housing, investments, r...   \n","\n","                                                  MMR  \\\n","0   [climate, minister, defence, company, change, ...   \n","1   [growth, infrastructure, economy, percent, fis...   \n","2   [pakistan, minister, singh, army, kashmir, def...   \n","3   [climate, tropical, season, winter, summer, te...   \n","4   [climate, change, policy, action, adaptation, ...   \n","5   [larsen, toubro, company, power, crore, order,...   \n","6   [airport, gmr, stake, airports, international,...   \n","7   [defence, budget, crore, spending, allocation,...   \n","8   [fighter, jets, aircraft, defence, deal, rafal...   \n","9   [sexual, pachauri, allegations, scientist, sex...   \n","10  [power, gmr, company, plant, project, solar, s...   \n","11  [irb, highway, company, crore, developers, con...   \n","12  [heat, body, summer, temperature, strokes, hot...   \n","13  [drones, surveillance, unmanned, air, armed, s...   \n","14  [solar, power, adani, adanis, company, project...   \n","15  [estate, real, projects, companies, growth, be...   \n","\n","                                  Representative_Docs  \n","0   [change adaptation fund new source funding the...  \n","1   [projected grow percent and reach trillion the...  \n","2   [chief visit pakistan discuss tiesseptember ic...  \n","3   [being country located south asia has very div...  \n","4   [change policy the national action plan climat...  \n","5   [major larsen toubro friday bagged two orders ...  \n","6   [major gmr group has bagged crore contract bui...  \n","7   [budget what new business news largest ever de...  \n","8   [ministry decision procure fighter jets from f...  \n","9   [scientist pachauri the head the intergovernme...  \n","10  [company gmr group has acquired minority stake...  \n","11  [company irb infrastructure developers has sig...  \n","12  [changing and the summers are getting hotter a...  \n","13  [forces are using unmanned aerial vehicle for ...  \n","14  [major adani group power subsidiary adanis has...  \n","15  [has been growing rapid pace over the last one...  "],"text/html":["\n","  <div id=\"df-bdca9ab9-f40c-4be7-b384-261ec8b32b87\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Topic</th>\n","      <th>Count</th>\n","      <th>Name</th>\n","      <th>Representation</th>\n","      <th>KeyBERT</th>\n","      <th>MMR</th>\n","      <th>Representative_Docs</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1</td>\n","      <td>979</td>\n","      <td>-1_climate_minister_defence_company</td>\n","      <td>[climate, minister, defence, company, change, ...</td>\n","      <td>[climate, crore, emissions, solar, infrastruct...</td>\n","      <td>[climate, minister, defence, company, change, ...</td>\n","      <td>[change adaptation fund new source funding the...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>522</td>\n","      <td>0_growth_infrastructure_economy_percent</td>\n","      <td>[growth, infrastructure, economy, percent, fis...</td>\n","      <td>[gdp, economy, fiscal, economies, growth, econ...</td>\n","      <td>[growth, infrastructure, economy, percent, fis...</td>\n","      <td>[projected grow percent and reach trillion the...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>164</td>\n","      <td>1_pakistan_minister_singh_army</td>\n","      <td>[pakistan, minister, singh, army, kashmir, def...</td>\n","      <td>[pakistan, islamabad, pakistani, kashmir, jamm...</td>\n","      <td>[pakistan, minister, singh, army, kashmir, def...</td>\n","      <td>[chief visit pakistan discuss tiesseptember ic...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>83</td>\n","      <td>2_climate_tropical_season_winter</td>\n","      <td>[climate, tropical, season, winter, summer, te...</td>\n","      <td>[climates, subtropical, kerala, climate, monso...</td>\n","      <td>[climate, tropical, season, winter, summer, te...</td>\n","      <td>[being country located south asia has very div...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>80</td>\n","      <td>3_climate_change_policy_action</td>\n","      <td>[climate, change, policy, action, adaptation, ...</td>\n","      <td>[climate, adaptation, droughts, agriculture, g...</td>\n","      <td>[climate, change, policy, action, adaptation, ...</td>\n","      <td>[change policy the national action plan climat...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4</td>\n","      <td>31</td>\n","      <td>4_larsen_toubro_company_power</td>\n","      <td>[larsen, toubro, company, power, crore, order,...</td>\n","      <td>[procurement, toubro, larsens, larsen, compani...</td>\n","      <td>[larsen, toubro, company, power, crore, order,...</td>\n","      <td>[major larsen toubro friday bagged two orders ...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5</td>\n","      <td>29</td>\n","      <td>5_airport_gmr_stake_airports</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[gmr, gml, gmm, airport, gurgaon, mumbai, gmmg...</td>\n","      <td>[airport, gmr, stake, airports, international,...</td>\n","      <td>[major gmr group has bagged crore contract bui...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>6</td>\n","      <td>26</td>\n","      <td>6_defence_budget_crore_spending</td>\n","      <td>[defence, budget, crore, spending, allocation,...</td>\n","      <td>[budgets, procurements, expenditure, fiscal, s...</td>\n","      <td>[defence, budget, crore, spending, allocation,...</td>\n","      <td>[budget what new business news largest ever de...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>7</td>\n","      <td>18</td>\n","      <td>7_fighter_jets_aircraft_defence</td>\n","      <td>[fighter, jets, aircraft, defence, deal, rafal...</td>\n","      <td>[rafales, rafale, aircraft, procurement, boein...</td>\n","      <td>[fighter, jets, aircraft, defence, deal, rafal...</td>\n","      <td>[ministry decision procure fighter jets from f...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>8_sexual_pachauri_allegations_scientist</td>\n","      <td>[sexual, pachauri, allegations, scientist, sex...</td>\n","      <td>[pachauri, pachuuri, pachouri, allegations, pa...</td>\n","      <td>[sexual, pachauri, allegations, scientist, sex...</td>\n","      <td>[scientist pachauri the head the intergovernme...</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>9_power_gmr_company_plant</td>\n","      <td>[power, gmr, company, plant, project, solar, s...</td>\n","      <td>[gmr, maharashtra, gujarat, gsr, gmi, gms, meg...</td>\n","      <td>[power, gmr, company, plant, project, solar, s...</td>\n","      <td>[company gmr group has acquired minority stake...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>10_irb_highway_company_crore</td>\n","      <td>[irb, highway, company, crore, developers, con...</td>\n","      <td>[expressway, irbi, irb, irbt, irbs, highways, ...</td>\n","      <td>[irb, highway, company, crore, developers, con...</td>\n","      <td>[company irb infrastructure developers has sig...</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>11_heat_body_summer_temperature</td>\n","      <td>[heat, body, summer, temperature, strokes, hot...</td>\n","      <td>[heatstroke, temperature, summers, summer, tem...</td>\n","      <td>[heat, body, summer, temperature, strokes, hot...</td>\n","      <td>[changing and the summers are getting hotter a...</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>12_drones_surveillance_unmanned_air</td>\n","      <td>[drones, surveillance, unmanned, air, armed, s...</td>\n","      <td>[uavs, uav, drone, drones, unmanned, aircraft,...</td>\n","      <td>[drones, surveillance, unmanned, air, armed, s...</td>\n","      <td>[forces are using unmanned aerial vehicle for ...</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>13</td>\n","      <td>6</td>\n","      <td>13_solar_power_adani_adanis</td>\n","      <td>[solar, power, adani, adanis, company, project...</td>\n","      <td>[adani, adansi, solar, adanis, powergrid, adit...</td>\n","      <td>[solar, power, adani, adanis, company, project...</td>\n","      <td>[major adani group power subsidiary adanis has...</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>14</td>\n","      <td>5</td>\n","      <td>14_estate_real_projects_companies</td>\n","      <td>[estate, real, projects, companies, growth, be...</td>\n","      <td>[realty, urbanization, housing, investments, r...</td>\n","      <td>[estate, real, projects, companies, growth, be...</td>\n","      <td>[has been growing rapid pace over the last one...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdca9ab9-f40c-4be7-b384-261ec8b32b87')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bdca9ab9-f40c-4be7-b384-261ec8b32b87 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bdca9ab9-f40c-4be7-b384-261ec8b32b87');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb4168dd-f328-4249-81c7-e1e66a3cfbfd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb4168dd-f328-4249-81c7-e1e66a3cfbfd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb4168dd-f328-4249-81c7-e1e66a3cfbfd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":383}],"source":["topic_model.get_topic_info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7FIljfMY421x"},"outputs":[],"source":["# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2\"\n","# !mkdir -p \"drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/falcon\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y3qy9h66421x"},"outputs":[],"source":["topic_model.save('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch-' + topic, serialization=\"pytorch\", save_ctfidf=True, save_embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GH-clLaO421x"},"outputs":[],"source":["# topic_model = BERTopic.load('drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/pca-kmeans.pytorch', embedding_model=embedding_model)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gyq0230B421x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706112046218,"user_tz":-330,"elapsed":4941,"user":{"displayName":"Sudipto Ghosh","userId":"03418805914953425556"}},"outputId":"2c193a4b-e997-40a0-cce4-ee820e5d2f8b"},"outputs":[{"output_type":"stream","name":"stdout","text":["c_v 0.7916405227829438\n","c_umass 0.7916405227829438\n","c_npmi 0.20992882558892803\n","Values written to drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv\n"]}],"source":["import csv\n","\n","# Get the values\n","c_v_value = get_c_v(topic_model, df, topics)\n","c_umass_value = get_c_umass(topic_model, df, topics)\n","c_npmi_value = get_c_npmi(topic_model, df, topics)\n","\n","print('c_v', c_v_value)\n","print('c_umass', c_v_value)\n","print('c_npmi', c_npmi_value)\n","\n","# Specify the file path\n","csv_file_path = 'drive/MyDrive/DUCSResearch/Bias in LLMs/colab_notebooks/bias_llm/models/same_prompts/llama2/topic_metrics_same.csv'\n","\n","# Write values\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_v', 'Value': c_v_value})\n","writer.writerow({'Experiment': experiment, 'Topic': topic, 'Metric': 'c_umass', 'Value': c_umass_value})\n","writer.writerow({'Experiment': experiment,'Topic': topic, 'Metric': 'c_npmi', 'Value': c_npmi_value})\n","\n","print(f\"Values written to {csv_file_path}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xFazDrMS421x"},"outputs":[],"source":["csvfile.close()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c8Ekbn3Ra-uv"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["y9BokIULx6fl","pD2U7oTWzs6f","Vx_77vtZzs6g","Zq9LTAcRzs6i","UxvvxrT011F3","nxCPpBi_421Y","WXwrSxZz421Y","fPj3axEk421b","IujyFKKs421d","sBgKKZGP421f","_ssDvEe-421g"],"provenance":[{"file_id":"1sGR5IQftdCnA7lcWIUBvQIaCaIExIFqM","timestamp":1706100680097},{"file_id":"1X5mf-Vifi9cKhbopChvYNS1TjEn3-e2n","timestamp":1699547471446},{"file_id":"1Pjdg81wVuzlW9s-zypZPSJleSGJ8afsT","timestamp":1697092505328}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"5d6d63b110234219828182ec7bb8bb3e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4f89a0ed8e1d40ecb1a8d2b7332ede83","IPY_MODEL_263059aa1a254b4eb314d9ba2153f9d9","IPY_MODEL_257546363b374a7f9179b1e18f9c1eda"],"layout":"IPY_MODEL_7423c387e4724d2faaa03be1da131129"}},"4f89a0ed8e1d40ecb1a8d2b7332ede83":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bbf4608f5f8e481b9f4bbf251c7c9642","placeholder":"​","style":"IPY_MODEL_f978e43cc2174e68a7bd6c3d66a92bfd","value":".gitattributes: 100%"}},"263059aa1a254b4eb314d9ba2153f9d9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_18ecb401dfb44fcf82cc6f1bb3d0f055","max":1175,"min":0,"orientation":"horizontal","style":"IPY_MODEL_56a19e3b760549eb9f015383a00726cf","value":1175}},"257546363b374a7f9179b1e18f9c1eda":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_888ced8add9243748bb934c1661bf22a","placeholder":"​","style":"IPY_MODEL_460b2856ab8943cb97a72d3fa8d7fa81","value":" 1.18k/1.18k [00:00&lt;00:00, 73.1kB/s]"}},"7423c387e4724d2faaa03be1da131129":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bbf4608f5f8e481b9f4bbf251c7c9642":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f978e43cc2174e68a7bd6c3d66a92bfd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"18ecb401dfb44fcf82cc6f1bb3d0f055":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"56a19e3b760549eb9f015383a00726cf":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"888ced8add9243748bb934c1661bf22a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"460b2856ab8943cb97a72d3fa8d7fa81":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"da3e2d14963e4c389f08b6d107006484":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_28acb0639bc54d3f8808464519afdb09","IPY_MODEL_dcb2260ae1e44c8e904abd914c0a0d8f","IPY_MODEL_2dad5cf4ab7b4891a36f444a3055d6de"],"layout":"IPY_MODEL_4909d05968dc48b2a13a0dcb969855f2"}},"28acb0639bc54d3f8808464519afdb09":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bbe4bad8802642d49aebc5949944f3fe","placeholder":"​","style":"IPY_MODEL_db3cf535c6274d8f8c00332a7bd14ec8","value":"1_Pooling/config.json: 100%"}},"dcb2260ae1e44c8e904abd914c0a0d8f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e859971d2cb6492e889b8c8812cc06fd","max":190,"min":0,"orientation":"horizontal","style":"IPY_MODEL_92ded5c4ae8e45dbbcb6c7237d307db3","value":190}},"2dad5cf4ab7b4891a36f444a3055d6de":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1b41e8052d55471795a2a15f4f994964","placeholder":"​","style":"IPY_MODEL_81cc709eeda343509a197911c85ffda0","value":" 190/190 [00:00&lt;00:00, 10.8kB/s]"}},"4909d05968dc48b2a13a0dcb969855f2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bbe4bad8802642d49aebc5949944f3fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"db3cf535c6274d8f8c00332a7bd14ec8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e859971d2cb6492e889b8c8812cc06fd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92ded5c4ae8e45dbbcb6c7237d307db3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1b41e8052d55471795a2a15f4f994964":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"81cc709eeda343509a197911c85ffda0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c00966af081f43d590ce20b5f5ec04cb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a1fdb6e44cb54349bd10d512c3c376de","IPY_MODEL_d16ebc1991c441e993305637445953a9","IPY_MODEL_7e1b4c435d264037bf5316a83bc2afb6"],"layout":"IPY_MODEL_636ba990581149539b1994e95c008bfe"}},"a1fdb6e44cb54349bd10d512c3c376de":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bf3192b0d8ab4953a83b799821fc1f4e","placeholder":"​","style":"IPY_MODEL_51e8a67a0d894dcf901feae12eb3596a","value":"README.md: 100%"}},"d16ebc1991c441e993305637445953a9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_db5b664f91a64a97aa2af2698616297a","max":10571,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e2b3870e8adf4a41a92e972b7da2028f","value":10571}},"7e1b4c435d264037bf5316a83bc2afb6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5973d7f6894940a6bcfde216a58475f0","placeholder":"​","style":"IPY_MODEL_d278e761c0f74c21b5cd03f123c8e50a","value":" 10.6k/10.6k [00:00&lt;00:00, 668kB/s]"}},"636ba990581149539b1994e95c008bfe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bf3192b0d8ab4953a83b799821fc1f4e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"51e8a67a0d894dcf901feae12eb3596a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"db5b664f91a64a97aa2af2698616297a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e2b3870e8adf4a41a92e972b7da2028f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5973d7f6894940a6bcfde216a58475f0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d278e761c0f74c21b5cd03f123c8e50a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b6e17b4fd85b4baaa92bf0d968b45466":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2b7d44c9eead49128387a29381500258","IPY_MODEL_a61ac9f629be430084a32956808fbf92","IPY_MODEL_33da8b4ed4b14e8ba595bc27f1f5c6ee"],"layout":"IPY_MODEL_06d8faea546640da876ef0c1a90acc19"}},"2b7d44c9eead49128387a29381500258":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7c549d2495874de6ba2ce9f380e84a57","placeholder":"​","style":"IPY_MODEL_549b33d1be5644ea8ebfe2a81ea277f8","value":"config.json: 100%"}},"a61ac9f629be430084a32956808fbf92":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_91b35a8addda4b9786f6c70a0344d1b6","max":571,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e01e3a184f264f4394bb9201d7d622e9","value":571}},"33da8b4ed4b14e8ba595bc27f1f5c6ee":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_82b97f0ac2b144b992ec7fe01fdcea36","placeholder":"​","style":"IPY_MODEL_4fa6d9ccc4ad494da871a32ae7193046","value":" 571/571 [00:00&lt;00:00, 29.7kB/s]"}},"06d8faea546640da876ef0c1a90acc19":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7c549d2495874de6ba2ce9f380e84a57":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"549b33d1be5644ea8ebfe2a81ea277f8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"91b35a8addda4b9786f6c70a0344d1b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e01e3a184f264f4394bb9201d7d622e9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"82b97f0ac2b144b992ec7fe01fdcea36":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4fa6d9ccc4ad494da871a32ae7193046":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d18e2d9f033c4f2f891d59b19d8cfc51":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_efea4c67d1324ac082fced4f6028b5ec","IPY_MODEL_d558fcc018ae4c59936d67c14c1985ed","IPY_MODEL_9ac7408e4299401ea453e335570e9f78"],"layout":"IPY_MODEL_50072e20ac79420882f4fe02faa04c8d"}},"efea4c67d1324ac082fced4f6028b5ec":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bb71576205254abbaa03adb5cb47382f","placeholder":"​","style":"IPY_MODEL_d67ebee007db47748c66f59ba2f1d863","value":"config_sentence_transformers.json: 100%"}},"d558fcc018ae4c59936d67c14c1985ed":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b0f33469447c44d999d856ce38532b84","max":116,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aab15d61be254036a683c24bfe8e7f0a","value":116}},"9ac7408e4299401ea453e335570e9f78":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6d134d4d420547d39744db475f296176","placeholder":"​","style":"IPY_MODEL_1df0546e590a4b019cc773151a19be5f","value":" 116/116 [00:00&lt;00:00, 7.51kB/s]"}},"50072e20ac79420882f4fe02faa04c8d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bb71576205254abbaa03adb5cb47382f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d67ebee007db47748c66f59ba2f1d863":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b0f33469447c44d999d856ce38532b84":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aab15d61be254036a683c24bfe8e7f0a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6d134d4d420547d39744db475f296176":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1df0546e590a4b019cc773151a19be5f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"704e6b334a844923b95de7fd7637f3a6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_eba2cc6fa5be4ae085756db385eea04b","IPY_MODEL_3826a4efba2b496eb78a2f1f2486132a","IPY_MODEL_f07749020d2647d2bc6cfefb77dbcda4"],"layout":"IPY_MODEL_41f905239891413eb328e05c85be6a82"}},"eba2cc6fa5be4ae085756db385eea04b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_53299c2f3e314dcd9d26112ae36a5d74","placeholder":"​","style":"IPY_MODEL_f077e194427b416c9a788ec4d09743ac","value":"data_config.json: 100%"}},"3826a4efba2b496eb78a2f1f2486132a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6525b5c1de4e4146b29eaf631e4260a3","max":39265,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f539751227fc4544bf8f3a6f3e7ea6c4","value":39265}},"f07749020d2647d2bc6cfefb77dbcda4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ddd85888784a41ff9024da9a90ab2365","placeholder":"​","style":"IPY_MODEL_5df6170731834b98a1ea62f4db0b1a22","value":" 39.3k/39.3k [00:00&lt;00:00, 664kB/s]"}},"41f905239891413eb328e05c85be6a82":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"53299c2f3e314dcd9d26112ae36a5d74":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f077e194427b416c9a788ec4d09743ac":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6525b5c1de4e4146b29eaf631e4260a3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f539751227fc4544bf8f3a6f3e7ea6c4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ddd85888784a41ff9024da9a90ab2365":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5df6170731834b98a1ea62f4db0b1a22":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"67d787fd997c4b3ea316bfc9644d73c0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_217e7255363e44e1a77219cdd338554a","IPY_MODEL_919cf895f10d40058ad1e85adb5bf446","IPY_MODEL_a0a266fbd7e74abeaf708ed1339b9b22"],"layout":"IPY_MODEL_f7d52530291841f483964603aa2de35c"}},"217e7255363e44e1a77219cdd338554a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a0487ad962a147ec9b32ab13b0b794e5","placeholder":"​","style":"IPY_MODEL_3d361ca2ea6f4c98be907de6e6c345db","value":"pytorch_model.bin: 100%"}},"919cf895f10d40058ad1e85adb5bf446":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_62a10ad5b97c4a70ad285fe242371f4a","max":438011953,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ccb9707ba14f4bb88e3f00f39e3f4878","value":438011953}},"a0a266fbd7e74abeaf708ed1339b9b22":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_95e99be11b304ef19d6f5f66238fb192","placeholder":"​","style":"IPY_MODEL_ae09ff2d8c374c85a2fa056cb8ea0c90","value":" 438M/438M [00:01&lt;00:00, 251MB/s]"}},"f7d52530291841f483964603aa2de35c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a0487ad962a147ec9b32ab13b0b794e5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d361ca2ea6f4c98be907de6e6c345db":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"62a10ad5b97c4a70ad285fe242371f4a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ccb9707ba14f4bb88e3f00f39e3f4878":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"95e99be11b304ef19d6f5f66238fb192":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ae09ff2d8c374c85a2fa056cb8ea0c90":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a2e9c3e6f50c4b60bcb5c17b3953fe53":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_beb991d9279b4fb1a273e0fda740ce43","IPY_MODEL_2846ff30c4d54b9c8e15a64c757678b3","IPY_MODEL_d627549bbdab41b497d65efa44ed7137"],"layout":"IPY_MODEL_c2d2d1c4a7e94a99b594cd1fd3b2958d"}},"beb991d9279b4fb1a273e0fda740ce43":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5737eaeeede7458abc37759b38eb2350","placeholder":"​","style":"IPY_MODEL_2a610580ffb9492491054afe47221740","value":"sentence_bert_config.json: 100%"}},"2846ff30c4d54b9c8e15a64c757678b3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5be65f898cde4311b3d11a2b61013942","max":53,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f6daab96aec94b1cbbcb746f24c14f14","value":53}},"d627549bbdab41b497d65efa44ed7137":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2ab1927afb494f5c95da8564572ca760","placeholder":"​","style":"IPY_MODEL_d53011b0ae104f649e8c76130fd8b112","value":" 53.0/53.0 [00:00&lt;00:00, 3.57kB/s]"}},"c2d2d1c4a7e94a99b594cd1fd3b2958d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5737eaeeede7458abc37759b38eb2350":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2a610580ffb9492491054afe47221740":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5be65f898cde4311b3d11a2b61013942":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f6daab96aec94b1cbbcb746f24c14f14":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2ab1927afb494f5c95da8564572ca760":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d53011b0ae104f649e8c76130fd8b112":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"03c83cdffc0d45d4bd2ff4821e49400d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4419cec1b8f94a09b27b1a098f7da5db","IPY_MODEL_db80d09907b0409ab979ed1ac2f201e8","IPY_MODEL_3ccb46ade89d4ffea59bc0645add454f"],"layout":"IPY_MODEL_90bf2a2769fe4afea55d557f92ecce57"}},"4419cec1b8f94a09b27b1a098f7da5db":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_57ca5e76a6ee4757b0bce8d84ba736dd","placeholder":"​","style":"IPY_MODEL_1e69f8f5285e4cc2bd5af077858552e9","value":"special_tokens_map.json: 100%"}},"db80d09907b0409ab979ed1ac2f201e8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4f297d94367348d9a9b8ee9a908b8727","max":239,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a9c6f35f8c78413086746ff0c330555c","value":239}},"3ccb46ade89d4ffea59bc0645add454f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a000db651bce4db09ecb8182aba050c5","placeholder":"​","style":"IPY_MODEL_02903e2b43504241a1cca621303e5b4b","value":" 239/239 [00:00&lt;00:00, 17.9kB/s]"}},"90bf2a2769fe4afea55d557f92ecce57":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"57ca5e76a6ee4757b0bce8d84ba736dd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1e69f8f5285e4cc2bd5af077858552e9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4f297d94367348d9a9b8ee9a908b8727":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a9c6f35f8c78413086746ff0c330555c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a000db651bce4db09ecb8182aba050c5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02903e2b43504241a1cca621303e5b4b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2f77f728657f41ff92bd1da03c7b9712":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2f7ab23b01444448b492d6833e4633ba","IPY_MODEL_bfcb92eee9194f47a1adaaa59a85c8e3","IPY_MODEL_8eca5791ebce485996525ed4cc5b62e3"],"layout":"IPY_MODEL_cf6597c88e50454c9e85f20112881379"}},"2f7ab23b01444448b492d6833e4633ba":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_82a7cececa524ac8aa315091123be52a","placeholder":"​","style":"IPY_MODEL_7b0c9299ec7344afb2d15265afe79fcb","value":"tokenizer.json: 100%"}},"bfcb92eee9194f47a1adaaa59a85c8e3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_662d1f0b1db742658d73a403fea3ded8","max":466021,"min":0,"orientation":"horizontal","style":"IPY_MODEL_698b228d3a9d4b84884f34a648f716a7","value":466021}},"8eca5791ebce485996525ed4cc5b62e3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ce21c65af34b4d3da44c6f1935318615","placeholder":"​","style":"IPY_MODEL_48d179baa4b7403782a171e357a7a524","value":" 466k/466k [00:00&lt;00:00, 3.76MB/s]"}},"cf6597c88e50454c9e85f20112881379":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"82a7cececa524ac8aa315091123be52a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7b0c9299ec7344afb2d15265afe79fcb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"662d1f0b1db742658d73a403fea3ded8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"698b228d3a9d4b84884f34a648f716a7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ce21c65af34b4d3da44c6f1935318615":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"48d179baa4b7403782a171e357a7a524":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0aa5aff75b594636b445fe03b36d0be7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9ef662f16d0c4e33af079d0bc4511d8c","IPY_MODEL_c5a80b29cdd14f5a832eb3ec75648130","IPY_MODEL_bd337534434f4f228f9b5378b733a43b"],"layout":"IPY_MODEL_cadbd401576b4b6783d25b7658f99e6a"}},"9ef662f16d0c4e33af079d0bc4511d8c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_28585f9b36eb416aa62cb0a87c34b92e","placeholder":"​","style":"IPY_MODEL_1d1187a01246499c9a1d286c8267bf4a","value":"tokenizer_config.json: 100%"}},"c5a80b29cdd14f5a832eb3ec75648130":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_159b7b7d907147ca9972acf2966b19bd","max":363,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b21eb0f73da44e169ad09bbd3c05cbc0","value":363}},"bd337534434f4f228f9b5378b733a43b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8b190dee8fb0498789706f450f50fc7d","placeholder":"​","style":"IPY_MODEL_845ffaaf08e046c9bd462be8e3b8b145","value":" 363/363 [00:00&lt;00:00, 8.00kB/s]"}},"cadbd401576b4b6783d25b7658f99e6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"28585f9b36eb416aa62cb0a87c34b92e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1d1187a01246499c9a1d286c8267bf4a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"159b7b7d907147ca9972acf2966b19bd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b21eb0f73da44e169ad09bbd3c05cbc0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8b190dee8fb0498789706f450f50fc7d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"845ffaaf08e046c9bd462be8e3b8b145":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bc7cefefc4de40b088cc694f76b1ea68":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_284ab2a6b636495f81a79c7e11400976","IPY_MODEL_0967776e69e34cfbb6fea9fa5dd2bbf5","IPY_MODEL_a8ae1ab3ab59407d89c987185b2f7be1"],"layout":"IPY_MODEL_6dbd0fbf39154a71aa6fe6d9fefbaef9"}},"284ab2a6b636495f81a79c7e11400976":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca173b97428a4f1eb9734d91624c3f84","placeholder":"​","style":"IPY_MODEL_93e913c463944627b8c8c90c0c77d1f4","value":"train_script.py: 100%"}},"0967776e69e34cfbb6fea9fa5dd2bbf5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7cc82c055ca340dfb00c52f959b6d7f7","max":13123,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c821c547d5214685a42194be3cf93bb7","value":13123}},"a8ae1ab3ab59407d89c987185b2f7be1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5d9f14af2a6d4515ad50a20d6033039c","placeholder":"​","style":"IPY_MODEL_5c396d282fa84cad942e313f0afb4aa1","value":" 13.1k/13.1k [00:00&lt;00:00, 320kB/s]"}},"6dbd0fbf39154a71aa6fe6d9fefbaef9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca173b97428a4f1eb9734d91624c3f84":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"93e913c463944627b8c8c90c0c77d1f4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7cc82c055ca340dfb00c52f959b6d7f7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c821c547d5214685a42194be3cf93bb7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5d9f14af2a6d4515ad50a20d6033039c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5c396d282fa84cad942e313f0afb4aa1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c25a658ab16340a7a047b3e0d36426ae":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_624aa8ad5cf44e1490790cd235728f1a","IPY_MODEL_3f1bc9ed007940b6abc0186df987e145","IPY_MODEL_8cf57e3e4d7f45cb9b22d12d8eac3bea"],"layout":"IPY_MODEL_d4b9244f7a5146cca02940fd26b06b7f"}},"624aa8ad5cf44e1490790cd235728f1a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5d42353ca07e4aba8f8055c975ac1763","placeholder":"​","style":"IPY_MODEL_f79f3fa1a4314f0886ed92dd2e5d4bc6","value":"vocab.txt: 100%"}},"3f1bc9ed007940b6abc0186df987e145":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b77f26178fba42519a507ca6831314f2","max":231536,"min":0,"orientation":"horizontal","style":"IPY_MODEL_89f993ea53c549669d6f02ffa1cc4d68","value":231536}},"8cf57e3e4d7f45cb9b22d12d8eac3bea":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d703842497d5452d864e1bb922dc3ed5","placeholder":"​","style":"IPY_MODEL_771c5f08bacb40a994f7c01cf450de31","value":" 232k/232k [00:00&lt;00:00, 3.65MB/s]"}},"d4b9244f7a5146cca02940fd26b06b7f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5d42353ca07e4aba8f8055c975ac1763":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f79f3fa1a4314f0886ed92dd2e5d4bc6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b77f26178fba42519a507ca6831314f2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89f993ea53c549669d6f02ffa1cc4d68":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d703842497d5452d864e1bb922dc3ed5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"771c5f08bacb40a994f7c01cf450de31":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"300fb7406bad40abab93282f4f4c2321":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_17bbd0f640b84a0cb9e7f38942e83146","IPY_MODEL_f68fc11270c04005aab2fd99d78351b0","IPY_MODEL_b9162371a1a247cf85a554d89cc5cce5"],"layout":"IPY_MODEL_cb77e5c665af4e4c806bb57e97adf1e0"}},"17bbd0f640b84a0cb9e7f38942e83146":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0322ce42f3be4f7f8dd7db25a5f5901c","placeholder":"​","style":"IPY_MODEL_15a369f6096c4f40a4f78df52eba6d02","value":"modules.json: 100%"}},"f68fc11270c04005aab2fd99d78351b0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_db2833a220eb4b77aba2f5edede8f83a","max":349,"min":0,"orientation":"horizontal","style":"IPY_MODEL_422123452d56459e95aa980a5783ef08","value":349}},"b9162371a1a247cf85a554d89cc5cce5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_50c717d0bc204704bf6bb80969668751","placeholder":"​","style":"IPY_MODEL_bbff7c0e328f4968998ee5ba317cf18b","value":" 349/349 [00:00&lt;00:00, 16.2kB/s]"}},"cb77e5c665af4e4c806bb57e97adf1e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0322ce42f3be4f7f8dd7db25a5f5901c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"15a369f6096c4f40a4f78df52eba6d02":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"db2833a220eb4b77aba2f5edede8f83a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"422123452d56459e95aa980a5783ef08":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"50c717d0bc204704bf6bb80969668751":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bbff7c0e328f4968998ee5ba317cf18b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6b7377a7cac74168844456aa84680799":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_50aee3610eec4fbf8035d9a534c7646b","IPY_MODEL_d6894ce8c0304dd5b012643298f8ea08","IPY_MODEL_8052fe53208842dd9ef3f94e06066579"],"layout":"IPY_MODEL_aeb443bb1b204563a9e68fcd54d5d5a6"}},"50aee3610eec4fbf8035d9a534c7646b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2f756f22c4845dbb83ae96a4a9da9df","placeholder":"​","style":"IPY_MODEL_007b38848b75493da0f3e965e8eec7a8","value":"Batches: 100%"}},"d6894ce8c0304dd5b012643298f8ea08":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_fef16fa3fd824750ad74ba478e5f687d","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0d39f69353924dcca4bee4c8bb535638","value":16}},"8052fe53208842dd9ef3f94e06066579":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_20ca3e98cdd2465693de1fc5362b8703","placeholder":"​","style":"IPY_MODEL_cd6bda40dea44bf88a10cbad3395ed97","value":" 16/16 [00:05&lt;00:00,  5.39it/s]"}},"aeb443bb1b204563a9e68fcd54d5d5a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2f756f22c4845dbb83ae96a4a9da9df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"007b38848b75493da0f3e965e8eec7a8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fef16fa3fd824750ad74ba478e5f687d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0d39f69353924dcca4bee4c8bb535638":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"20ca3e98cdd2465693de1fc5362b8703":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cd6bda40dea44bf88a10cbad3395ed97":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8804e5df8e8f436d8ef125541ca7103e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_041c580c1c9d4c25a886e585ce485707","IPY_MODEL_839dc728fa7d40ac8e227c4b482fb02d","IPY_MODEL_e5b45d16d14c4b75beaa31e882f386cb"],"layout":"IPY_MODEL_4573e1107e6b4d00b4d40bcfa5e91c6e"}},"041c580c1c9d4c25a886e585ce485707":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a11469e9f1f2489eb91a5e06a77ceff5","placeholder":"​","style":"IPY_MODEL_532f027a70b7440da77e95bbbbec98fb","value":"Batches: 100%"}},"839dc728fa7d40ac8e227c4b482fb02d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_296e707c4e97495ab64d0ba4b2f32b97","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ca7c90bb0a7241ed879b614196600a14","value":16}},"e5b45d16d14c4b75beaa31e882f386cb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_abea3779e1614fbea31a43672a2642c1","placeholder":"​","style":"IPY_MODEL_e312dc7e92d24bcdb7785958f64c06a7","value":" 16/16 [00:02&lt;00:00,  8.79it/s]"}},"4573e1107e6b4d00b4d40bcfa5e91c6e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a11469e9f1f2489eb91a5e06a77ceff5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"532f027a70b7440da77e95bbbbec98fb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"296e707c4e97495ab64d0ba4b2f32b97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca7c90bb0a7241ed879b614196600a14":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"abea3779e1614fbea31a43672a2642c1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e312dc7e92d24bcdb7785958f64c06a7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4a9d01eb197245c4ba945b550d6a5215":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_baffd0c4287d4524928bf5ba3b8f2125","IPY_MODEL_cac31a0a69584141982e3383de8c58da","IPY_MODEL_3d0d7c3495764f9c81de2e92494014da"],"layout":"IPY_MODEL_66b504d828cd44d7a63ef2878b3f912d"}},"baffd0c4287d4524928bf5ba3b8f2125":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d9fcf5f43a684f4d921a219bf7b2497e","placeholder":"​","style":"IPY_MODEL_fd5ab3bd98384e7580d1eb254c9a9597","value":"Batches: 100%"}},"cac31a0a69584141982e3383de8c58da":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_13988aa7c4b54cdbb00a1031a585743f","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_11d82efa63c741ae9c51fa0231307ca3","value":16}},"3d0d7c3495764f9c81de2e92494014da":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e8e1fa67e5ef4c3c806fa15b111329b6","placeholder":"​","style":"IPY_MODEL_6aab40b9158f4b87826313614f9ec6f8","value":" 16/16 [00:02&lt;00:00,  9.76it/s]"}},"66b504d828cd44d7a63ef2878b3f912d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d9fcf5f43a684f4d921a219bf7b2497e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fd5ab3bd98384e7580d1eb254c9a9597":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"13988aa7c4b54cdbb00a1031a585743f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"11d82efa63c741ae9c51fa0231307ca3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e8e1fa67e5ef4c3c806fa15b111329b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6aab40b9158f4b87826313614f9ec6f8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eca8c7a4ab42422e8bba95396cd20a4b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c6f94894c6474d92b5c80c13a3d8ad76","IPY_MODEL_d19104fd72bc4b1b836a9bdbcbf933a5","IPY_MODEL_06aedd776c444d678ff0c47317737fe7"],"layout":"IPY_MODEL_bb9098a3bdef49939cbacb9d1f77a0f8"}},"c6f94894c6474d92b5c80c13a3d8ad76":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b11ff33c37fe44a1b6224e0ba9b18a0a","placeholder":"​","style":"IPY_MODEL_4357131716564244836d9237423b11f7","value":"Batches: 100%"}},"d19104fd72bc4b1b836a9bdbcbf933a5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5638d4fa7af046d39b77aac325d4043c","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_75035ea676ef4768bfb91418c4a672ed","value":16}},"06aedd776c444d678ff0c47317737fe7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_086810ca2ccc4ae4a4dba9e81e4fc260","placeholder":"​","style":"IPY_MODEL_a4d4eb0a5d09435398d286c1e13a54ae","value":" 16/16 [00:02&lt;00:00,  7.87it/s]"}},"bb9098a3bdef49939cbacb9d1f77a0f8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b11ff33c37fe44a1b6224e0ba9b18a0a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4357131716564244836d9237423b11f7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5638d4fa7af046d39b77aac325d4043c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"75035ea676ef4768bfb91418c4a672ed":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"086810ca2ccc4ae4a4dba9e81e4fc260":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a4d4eb0a5d09435398d286c1e13a54ae":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bd007561f2a14cc9a3c3878fe7e8cb90":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_33abf3e0696b43c391fa4c9715b9be7f","IPY_MODEL_585e29a70ff347049fd13b71d4e94d64","IPY_MODEL_c8af6be7f5c3489684a964dc7a12e65f"],"layout":"IPY_MODEL_a29f6d038a824036be03539cdb6fd4b7"}},"33abf3e0696b43c391fa4c9715b9be7f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_961ccf26438144cf96955ab924e09cfb","placeholder":"​","style":"IPY_MODEL_5d41419ec78d416394904755ba937638","value":"Batches: 100%"}},"585e29a70ff347049fd13b71d4e94d64":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_49eec10a0eec438b9a4bceebad81fd24","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5fe74db12a1440ecb8abd1f860fd59a6","value":63}},"c8af6be7f5c3489684a964dc7a12e65f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_111208ab1dfd42b68b65a871f1dd6f0d","placeholder":"​","style":"IPY_MODEL_886f10f8f3eb4a06b82deb5554c9be41","value":" 63/63 [00:14&lt;00:00,  8.98it/s]"}},"a29f6d038a824036be03539cdb6fd4b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"961ccf26438144cf96955ab924e09cfb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5d41419ec78d416394904755ba937638":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"49eec10a0eec438b9a4bceebad81fd24":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5fe74db12a1440ecb8abd1f860fd59a6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"111208ab1dfd42b68b65a871f1dd6f0d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"886f10f8f3eb4a06b82deb5554c9be41":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4fd047c8cb6d41d2af870a2779d5ee40":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8f770e38b0e142c5a3eeb5ae23ab880a","IPY_MODEL_eb8ed990732c4f7f84c09058f9ec20f5","IPY_MODEL_cfe87f90294f4bbe84f9a21eb95f933a"],"layout":"IPY_MODEL_c51c7457e01d4be092f73cb6bb550176"}},"8f770e38b0e142c5a3eeb5ae23ab880a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4c4c23621a13466286ceb9bb932a8562","placeholder":"​","style":"IPY_MODEL_6d0f268c40d84a83a03aa96d8d0f67ef","value":"Batches: 100%"}},"eb8ed990732c4f7f84c09058f9ec20f5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_31067bbdd22148f5aad0a9bb2d938ccd","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5829e062cd3f4f449756265dbe8da00b","value":16}},"cfe87f90294f4bbe84f9a21eb95f933a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_38a48bc99fdb44fda213f301d7eeff81","placeholder":"​","style":"IPY_MODEL_553c9e41ef2045e6932ef51effd2d618","value":" 16/16 [00:03&lt;00:00,  6.28it/s]"}},"c51c7457e01d4be092f73cb6bb550176":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4c4c23621a13466286ceb9bb932a8562":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6d0f268c40d84a83a03aa96d8d0f67ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"31067bbdd22148f5aad0a9bb2d938ccd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5829e062cd3f4f449756265dbe8da00b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"38a48bc99fdb44fda213f301d7eeff81":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"553c9e41ef2045e6932ef51effd2d618":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c2d7ab1211b24616bf5007a7c33a5aa0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b1a2c678f6aa4a5793fb55cec8ecc236","IPY_MODEL_5727d7e3beec4c2b97eebb9cb160fa90","IPY_MODEL_5952db59fe9d43829897ad796aeaa329"],"layout":"IPY_MODEL_21bdf6288fbe40de95c6503e1d2bcf26"}},"b1a2c678f6aa4a5793fb55cec8ecc236":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6796e4c020344e5fa9336238cda646b5","placeholder":"​","style":"IPY_MODEL_08a659e4237645d18c0a1a736beb7fea","value":"Batches: 100%"}},"5727d7e3beec4c2b97eebb9cb160fa90":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9f13f9981bf24035aae340e01d7fedb7","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_83b6fd88a8c046eab72edcd67569745d","value":16}},"5952db59fe9d43829897ad796aeaa329":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_18d1d6910e16476a862e196205534c23","placeholder":"​","style":"IPY_MODEL_0a7d05eae4594ebc9ee4f40655035675","value":" 16/16 [00:02&lt;00:00,  7.32it/s]"}},"21bdf6288fbe40de95c6503e1d2bcf26":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6796e4c020344e5fa9336238cda646b5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"08a659e4237645d18c0a1a736beb7fea":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9f13f9981bf24035aae340e01d7fedb7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"83b6fd88a8c046eab72edcd67569745d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"18d1d6910e16476a862e196205534c23":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0a7d05eae4594ebc9ee4f40655035675":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2837737cae1a4bdeb075a4016408b660":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_43c24782ccc04a58a4eabd9449e7639b","IPY_MODEL_82452b347a1f4d0e95153a109ec12b73","IPY_MODEL_023c63c28fb04f8486e7dad25465fb2a"],"layout":"IPY_MODEL_3ec5413736934e8f9402d8cf1ada47b7"}},"43c24782ccc04a58a4eabd9449e7639b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_912dbef01f854801b0d785ae5b58cfd4","placeholder":"​","style":"IPY_MODEL_9bd45d950bd1446086a245b455dd8075","value":"Batches: 100%"}},"82452b347a1f4d0e95153a109ec12b73":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_27537a4f69344a1ead85814e59201e18","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8e1d055be26f4619ae2a7db76522c049","value":16}},"023c63c28fb04f8486e7dad25465fb2a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_de0aa802db4d41ecb8e030c7eed7def6","placeholder":"​","style":"IPY_MODEL_5cedc3a2c1324f6bb1e423d46e7c7f20","value":" 16/16 [00:03&lt;00:00,  9.39it/s]"}},"3ec5413736934e8f9402d8cf1ada47b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"912dbef01f854801b0d785ae5b58cfd4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9bd45d950bd1446086a245b455dd8075":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"27537a4f69344a1ead85814e59201e18":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8e1d055be26f4619ae2a7db76522c049":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"de0aa802db4d41ecb8e030c7eed7def6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5cedc3a2c1324f6bb1e423d46e7c7f20":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e3345a885d874d03ba3721fafe7d2fcb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_277ca8baf1d841ea86750a8c82716e31","IPY_MODEL_ee76360280d444798ad58b7d343648c7","IPY_MODEL_eb17462592204d738246d1e73a0ef9a9"],"layout":"IPY_MODEL_273bb34378364c8ba8ed6ae109649d08"}},"277ca8baf1d841ea86750a8c82716e31":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_68f6c3c8cf994b10805568ed465e6ae2","placeholder":"​","style":"IPY_MODEL_128857abd6304ffe8734eacdf6a3dc36","value":"Batches: 100%"}},"ee76360280d444798ad58b7d343648c7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_51e9df3cec924370a317845d72bb82e8","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_84354a12b0fc4078ab348c8131aed2d4","value":16}},"eb17462592204d738246d1e73a0ef9a9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1bec108d3a1d461895978949c0b62ba5","placeholder":"​","style":"IPY_MODEL_b2e2a5e0dd5d46a083bdb97f937ab6bc","value":" 16/16 [00:02&lt;00:00,  7.70it/s]"}},"273bb34378364c8ba8ed6ae109649d08":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68f6c3c8cf994b10805568ed465e6ae2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"128857abd6304ffe8734eacdf6a3dc36":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"51e9df3cec924370a317845d72bb82e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"84354a12b0fc4078ab348c8131aed2d4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1bec108d3a1d461895978949c0b62ba5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b2e2a5e0dd5d46a083bdb97f937ab6bc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6ee1b200df6d479dbc15204d0afb8620":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_978c307cf47c4060a39a84693fd5f798","IPY_MODEL_8ca058e44d5f4b5e96471e14999e4cec","IPY_MODEL_3a91147707a848cdb2fde31636ab46fc"],"layout":"IPY_MODEL_9891879d2c354f43a1310090d08564be"}},"978c307cf47c4060a39a84693fd5f798":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_dd5d6b1cae744209aa4927ca4cf88834","placeholder":"​","style":"IPY_MODEL_8b5441dcc24944cd870e8b2ab50f7883","value":"Batches: 100%"}},"8ca058e44d5f4b5e96471e14999e4cec":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cf86f4971a1f4cb09d83f5b074ff3459","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_04fa6711caa9403685f31042cb36598c","value":63}},"3a91147707a848cdb2fde31636ab46fc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3d42c50f13d04c2db410e8ddde18319e","placeholder":"​","style":"IPY_MODEL_df2da3e50aea4275b741624ae70e632a","value":" 63/63 [00:15&lt;00:00,  9.05it/s]"}},"9891879d2c354f43a1310090d08564be":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dd5d6b1cae744209aa4927ca4cf88834":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8b5441dcc24944cd870e8b2ab50f7883":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cf86f4971a1f4cb09d83f5b074ff3459":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"04fa6711caa9403685f31042cb36598c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3d42c50f13d04c2db410e8ddde18319e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"df2da3e50aea4275b741624ae70e632a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"639f9a32510245f499069ec62c10f49a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a1fea2b9a9f24c3fa915355122de07a3","IPY_MODEL_6ae5dd2e9586422996870ed70be2f418","IPY_MODEL_115f15505dcd447092d37de6aeb1b8f3"],"layout":"IPY_MODEL_ec3563461f4b4277ba98ac437d1ef2d1"}},"a1fea2b9a9f24c3fa915355122de07a3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca1b95b9823b4f18835727ed1029ee6d","placeholder":"​","style":"IPY_MODEL_a7f28c5e4c7040458bd9e77c9b8e8bd2","value":"Batches: 100%"}},"6ae5dd2e9586422996870ed70be2f418":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_324b2ca58867454e9ca52000ff94d5dd","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f2c9863c633f468c9b7f4b8e140996b1","value":16}},"115f15505dcd447092d37de6aeb1b8f3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_306b289161094358a20b9fdf88eae59e","placeholder":"​","style":"IPY_MODEL_438747b121d3489e87cb6b70d4563fd3","value":" 16/16 [00:03&lt;00:00,  6.41it/s]"}},"ec3563461f4b4277ba98ac437d1ef2d1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca1b95b9823b4f18835727ed1029ee6d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a7f28c5e4c7040458bd9e77c9b8e8bd2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"324b2ca58867454e9ca52000ff94d5dd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f2c9863c633f468c9b7f4b8e140996b1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"306b289161094358a20b9fdf88eae59e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"438747b121d3489e87cb6b70d4563fd3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8487e579d7014a8da6c162913fa12c50":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ee34abce0a384b1f84e8d20e0cb88caa","IPY_MODEL_279fbc9fdd9c4f6198926de8896aa907","IPY_MODEL_4e73691b609e49cf8b7d5f34571bf111"],"layout":"IPY_MODEL_be6b8f255be6443ca6f5e60f7aa5f4d2"}},"ee34abce0a384b1f84e8d20e0cb88caa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6e420889a12647ae918d502caae124da","placeholder":"​","style":"IPY_MODEL_2038fbbe2cf84559b0efe8a50f382eae","value":"Batches: 100%"}},"279fbc9fdd9c4f6198926de8896aa907":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3df2a12ea59e47d7adb51f24abaa7f70","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_da60584c1e4a4caab2bb4b884bee92c8","value":16}},"4e73691b609e49cf8b7d5f34571bf111":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_690103799e484948aff9c3257501795d","placeholder":"​","style":"IPY_MODEL_724f42e8cba047eb94d9e8a254211ec5","value":" 16/16 [00:03&lt;00:00,  6.80it/s]"}},"be6b8f255be6443ca6f5e60f7aa5f4d2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6e420889a12647ae918d502caae124da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2038fbbe2cf84559b0efe8a50f382eae":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3df2a12ea59e47d7adb51f24abaa7f70":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"da60584c1e4a4caab2bb4b884bee92c8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"690103799e484948aff9c3257501795d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"724f42e8cba047eb94d9e8a254211ec5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"439dacc46e6049778864850db63ee9d6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_33bfebca55234328bc73ab0611075012","IPY_MODEL_9e07ecafb6f34d8a930343448cc82f5f","IPY_MODEL_31c7d8e18c5a4e0ca0464b5d4c16ee7d"],"layout":"IPY_MODEL_eea111bdbede4100a721efb320655e6d"}},"33bfebca55234328bc73ab0611075012":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89ac01bce1dc4e31a521f1775fea32dc","placeholder":"​","style":"IPY_MODEL_7aa3482a60f44737bf7f95b3fc29eeb5","value":"Batches: 100%"}},"9e07ecafb6f34d8a930343448cc82f5f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_bcb35583ec234dc78866b80f6e8dc030","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_46adad9b04eb4ebea84888074a1bca3f","value":16}},"31c7d8e18c5a4e0ca0464b5d4c16ee7d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_40c53b5760cc406ca4f1c15468ca889a","placeholder":"​","style":"IPY_MODEL_8ee2847e0a7b47f6b70aa6e270ca0c62","value":" 16/16 [00:02&lt;00:00,  9.67it/s]"}},"eea111bdbede4100a721efb320655e6d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89ac01bce1dc4e31a521f1775fea32dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7aa3482a60f44737bf7f95b3fc29eeb5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bcb35583ec234dc78866b80f6e8dc030":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46adad9b04eb4ebea84888074a1bca3f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"40c53b5760cc406ca4f1c15468ca889a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ee2847e0a7b47f6b70aa6e270ca0c62":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ee4287a01ea546bdb74dce79886170b1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d08c629fb2344d7e9acf98e0e656fade","IPY_MODEL_3f01608d50f6458c9798440ba191d104","IPY_MODEL_72155517e5fd4d6cb545e9bdb8c31b17"],"layout":"IPY_MODEL_30be3c6ee04e498a828b8df63a5b5b49"}},"d08c629fb2344d7e9acf98e0e656fade":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ba874a3af4c642ccb32a444cd7a83745","placeholder":"​","style":"IPY_MODEL_dec493b6947846208de0edf116dd5929","value":"Batches: 100%"}},"3f01608d50f6458c9798440ba191d104":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_1713bb448e264a72a6dcbe8afcff8c98","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_561b9c39227d4ae890775b9fcdbcbf4f","value":16}},"72155517e5fd4d6cb545e9bdb8c31b17":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0d613a785c544c76a927b2705b3eed95","placeholder":"​","style":"IPY_MODEL_70a5da9a36bc4de5926ffbc60accd6b7","value":" 16/16 [00:03&lt;00:00,  7.35it/s]"}},"30be3c6ee04e498a828b8df63a5b5b49":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ba874a3af4c642ccb32a444cd7a83745":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dec493b6947846208de0edf116dd5929":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1713bb448e264a72a6dcbe8afcff8c98":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"561b9c39227d4ae890775b9fcdbcbf4f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0d613a785c544c76a927b2705b3eed95":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"70a5da9a36bc4de5926ffbc60accd6b7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6a012c640a1f4004b35e24d1beda500b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fcb6ee92593e44c3a7a4dfc1c72ddd41","IPY_MODEL_7c7b6886705c4d52aac9b2496ff2209c","IPY_MODEL_17cbe83d2d53465998026b505033df2f"],"layout":"IPY_MODEL_d2a932c1f9344221833d526a42c4ab71"}},"fcb6ee92593e44c3a7a4dfc1c72ddd41":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c549fd91b3984d6394f89da49070017f","placeholder":"​","style":"IPY_MODEL_63496aafd95b4d3686197f6f5010eaec","value":"Batches: 100%"}},"7c7b6886705c4d52aac9b2496ff2209c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_35ee157c31a14549a20b9d1883e348c5","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_845dbc5cfd664154a7a1b5c889cdbe80","value":63}},"17cbe83d2d53465998026b505033df2f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7ff6c5c22b47478bb8e264ae22b3fa67","placeholder":"​","style":"IPY_MODEL_f9a6ad9a4d754d37b1c8a769ad12fd8c","value":" 63/63 [00:14&lt;00:00,  9.49it/s]"}},"d2a932c1f9344221833d526a42c4ab71":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c549fd91b3984d6394f89da49070017f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63496aafd95b4d3686197f6f5010eaec":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"35ee157c31a14549a20b9d1883e348c5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"845dbc5cfd664154a7a1b5c889cdbe80":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7ff6c5c22b47478bb8e264ae22b3fa67":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f9a6ad9a4d754d37b1c8a769ad12fd8c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"786e7957ab074b76b1cf316a4eb45b81":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_373c0e59229b4202a02ec21dd71aaf67","IPY_MODEL_15f1ecfb66fc4804b3d865d41cc0ba23","IPY_MODEL_e52168e09ee24653b3b5e9adf43f4d1f"],"layout":"IPY_MODEL_a7380c7278ca49299d2093786f72548e"}},"373c0e59229b4202a02ec21dd71aaf67":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8d82740e200e420ab3aba298320919b1","placeholder":"​","style":"IPY_MODEL_d9e07bd543f64f57bbb99820d2246c64","value":"Batches: 100%"}},"15f1ecfb66fc4804b3d865d41cc0ba23":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e2636f3c9a294641be3708b10bfdf4e0","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3e75e5a6a3814f76bde2c540a622399c","value":16}},"e52168e09ee24653b3b5e9adf43f4d1f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b7162433f88a49d8a36e0dfb6d230bcb","placeholder":"​","style":"IPY_MODEL_bd5bf59b7c7c4e0080e355120cb4ef34","value":" 16/16 [00:03&lt;00:00,  6.02it/s]"}},"a7380c7278ca49299d2093786f72548e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8d82740e200e420ab3aba298320919b1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d9e07bd543f64f57bbb99820d2246c64":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e2636f3c9a294641be3708b10bfdf4e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3e75e5a6a3814f76bde2c540a622399c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b7162433f88a49d8a36e0dfb6d230bcb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd5bf59b7c7c4e0080e355120cb4ef34":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e4e56001b0bc4515bad2abf4db1d81d3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_aadc59fd74f34ef0acc995f730bbc1fa","IPY_MODEL_20bc1af3f7ad479db9d8ad9e99d8d378","IPY_MODEL_e382e6f7b7864b90966f4b43df5f114a"],"layout":"IPY_MODEL_27b72157385f4c019c70a3397adcdf15"}},"aadc59fd74f34ef0acc995f730bbc1fa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f6968f24a40844ab81c144869c63b007","placeholder":"​","style":"IPY_MODEL_e06ace0f764445349a6fa37f4fff7b33","value":"Batches: 100%"}},"20bc1af3f7ad479db9d8ad9e99d8d378":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ab98f9d55e7942a89e5ed934354a1219","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c874def3a18347fab5996a9e1e5ca395","value":16}},"e382e6f7b7864b90966f4b43df5f114a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fc987f82dcfd490093af32017657dec7","placeholder":"​","style":"IPY_MODEL_1032058297c94539a72c7ef59dc724d0","value":" 16/16 [00:03&lt;00:00,  7.00it/s]"}},"27b72157385f4c019c70a3397adcdf15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f6968f24a40844ab81c144869c63b007":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e06ace0f764445349a6fa37f4fff7b33":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ab98f9d55e7942a89e5ed934354a1219":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c874def3a18347fab5996a9e1e5ca395":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fc987f82dcfd490093af32017657dec7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1032058297c94539a72c7ef59dc724d0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d2103df4423448b68e5b4e26594379d4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dde7530c4b7e431993dcc0fdd9063aa4","IPY_MODEL_68832e0db03e43e7b7effd8bc50b2a14","IPY_MODEL_20a32eceb61248fe96018fba25dea6b7"],"layout":"IPY_MODEL_16669593dab04a998065e8a856a5327d"}},"dde7530c4b7e431993dcc0fdd9063aa4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0f88fb623c804749a4e9c699d98c374e","placeholder":"​","style":"IPY_MODEL_2e5ed4267bed4e5c8c29b74efaec8c0e","value":"Batches: 100%"}},"68832e0db03e43e7b7effd8bc50b2a14":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_86f3f04477824143b306c6d608625f29","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_80c9b39645cf4a8cac8e5341996a57d7","value":16}},"20a32eceb61248fe96018fba25dea6b7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_354000d38420492cb99499f672963431","placeholder":"​","style":"IPY_MODEL_17026905b4fc4d4fbbd2f74b4198aede","value":" 16/16 [00:02&lt;00:00,  9.06it/s]"}},"16669593dab04a998065e8a856a5327d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0f88fb623c804749a4e9c699d98c374e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e5ed4267bed4e5c8c29b74efaec8c0e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"86f3f04477824143b306c6d608625f29":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80c9b39645cf4a8cac8e5341996a57d7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"354000d38420492cb99499f672963431":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"17026905b4fc4d4fbbd2f74b4198aede":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e12e5761d994490cb00aa062ef24895f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d7f1dce295e5490c802071644e4965af","IPY_MODEL_0f9c12043e244d2aa13234d39f83e07a","IPY_MODEL_c628b45e341646eaaa84660c04781b86"],"layout":"IPY_MODEL_25b679e648194c00b1185914868874d6"}},"d7f1dce295e5490c802071644e4965af":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_32edf5f4cd3547d5b97f16af8f150952","placeholder":"​","style":"IPY_MODEL_9c291c1a88254f838621e1fc676c7332","value":"Batches: 100%"}},"0f9c12043e244d2aa13234d39f83e07a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d6b8b4940b9e431dbe2e44146ff77f23","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_132d99fad78e49d3889f3e926bed5d2e","value":16}},"c628b45e341646eaaa84660c04781b86":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_10606033b79941818df8018827fe6c96","placeholder":"​","style":"IPY_MODEL_f7044992b60247d4a736a8daf4381c5b","value":" 16/16 [00:03&lt;00:00,  7.39it/s]"}},"25b679e648194c00b1185914868874d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"32edf5f4cd3547d5b97f16af8f150952":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9c291c1a88254f838621e1fc676c7332":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d6b8b4940b9e431dbe2e44146ff77f23":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"132d99fad78e49d3889f3e926bed5d2e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"10606033b79941818df8018827fe6c96":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f7044992b60247d4a736a8daf4381c5b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1e77f2769bd44d9088651e34cbfec2ee":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a37cfcfad783434bb8b12edf74c2dd9a","IPY_MODEL_25575fcf043c471ca540018a256187b0","IPY_MODEL_8ed30a4921b54c4882a510ee8cd63374"],"layout":"IPY_MODEL_967c4e04f5b142519c14e4425b0f65ac"}},"a37cfcfad783434bb8b12edf74c2dd9a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6bf3eb6ae0dc4737ac175790fc10cb32","placeholder":"​","style":"IPY_MODEL_22d1bd3fe3c541fd9e28b211b03b64f7","value":"Batches: 100%"}},"25575fcf043c471ca540018a256187b0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_15889d0032a64c44bd2a66a4d61c166f","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4a97ffe3a2f34da898c8bf497def5593","value":63}},"8ed30a4921b54c4882a510ee8cd63374":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2ecc6f2904ce4aaaab2be16f8951e9fe","placeholder":"​","style":"IPY_MODEL_96513eb020834e9d9329a52a9d695b30","value":" 63/63 [00:15&lt;00:00,  9.05it/s]"}},"967c4e04f5b142519c14e4425b0f65ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6bf3eb6ae0dc4737ac175790fc10cb32":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"22d1bd3fe3c541fd9e28b211b03b64f7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"15889d0032a64c44bd2a66a4d61c166f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4a97ffe3a2f34da898c8bf497def5593":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2ecc6f2904ce4aaaab2be16f8951e9fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"96513eb020834e9d9329a52a9d695b30":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b3aeb840015047b68ca360a530b15872":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_26d0b27308fd4696b5418ee956b0cade","IPY_MODEL_0739cc3f22ad4aa3a613d9b7c0bb5569","IPY_MODEL_02071a5e8dc544a19e8621fbb6389ebf"],"layout":"IPY_MODEL_a3918599621141409d672a91d542bce1"}},"26d0b27308fd4696b5418ee956b0cade":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e9d4c46f4b0541b8a80a699aa5df4918","placeholder":"​","style":"IPY_MODEL_47b20ff8512c42338926fd52ea3c7104","value":"Batches: 100%"}},"0739cc3f22ad4aa3a613d9b7c0bb5569":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d7a974e68e774fab92785054d07a5970","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5e3f8a64a96a479491e4a6ee92ff745d","value":16}},"02071a5e8dc544a19e8621fbb6389ebf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6f7716ef89fd46bb813ed1971944bc52","placeholder":"​","style":"IPY_MODEL_693b78aba510450b84b90fe751d7ca44","value":" 16/16 [00:03&lt;00:00,  6.21it/s]"}},"a3918599621141409d672a91d542bce1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e9d4c46f4b0541b8a80a699aa5df4918":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"47b20ff8512c42338926fd52ea3c7104":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d7a974e68e774fab92785054d07a5970":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e3f8a64a96a479491e4a6ee92ff745d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6f7716ef89fd46bb813ed1971944bc52":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"693b78aba510450b84b90fe751d7ca44":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cef630c522f64663a4e3be6ae1404065":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b462d642f44543eb91e9000f75ceed0f","IPY_MODEL_9ad7ac032c39420fb74aae3ed528fd6c","IPY_MODEL_4f6c1ad34d6b4db9aadd7d8cac68a3f0"],"layout":"IPY_MODEL_019d4cc084f04bad94c0ee0de92fcabf"}},"b462d642f44543eb91e9000f75ceed0f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_de04052588be4f7bad5669ce7a433fe9","placeholder":"​","style":"IPY_MODEL_186cbd1fdb994f36937cb0e3d90e2777","value":"Batches: 100%"}},"9ad7ac032c39420fb74aae3ed528fd6c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_266ee2d7f77642ca91a9d318bd68e7ea","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2815b0feb1354c56ade0fae4bf5a723e","value":16}},"4f6c1ad34d6b4db9aadd7d8cac68a3f0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cd87b45019224cc0b8fd63e51c819a40","placeholder":"​","style":"IPY_MODEL_6f4c2fb5a2704c9b9a99415e97704be5","value":" 16/16 [00:03&lt;00:00,  7.01it/s]"}},"019d4cc084f04bad94c0ee0de92fcabf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"de04052588be4f7bad5669ce7a433fe9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"186cbd1fdb994f36937cb0e3d90e2777":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"266ee2d7f77642ca91a9d318bd68e7ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2815b0feb1354c56ade0fae4bf5a723e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cd87b45019224cc0b8fd63e51c819a40":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6f4c2fb5a2704c9b9a99415e97704be5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a8bd6c0949374e4ea7327c47d010330d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d7f74378271c423d91071d868f0115d0","IPY_MODEL_a23e3a22b2d549858d980209d17031c7","IPY_MODEL_0dcdf460f5c94209bef469104a823a1f"],"layout":"IPY_MODEL_fe333b49551b4406a74489d95992dd6a"}},"d7f74378271c423d91071d868f0115d0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1881651d087f434e98bd8cf26a7c9a37","placeholder":"​","style":"IPY_MODEL_5728d4875bd748e19e5735658625be68","value":"Batches: 100%"}},"a23e3a22b2d549858d980209d17031c7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eebfbfc388f5458aaabef1eb254bafd1","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_bb5cc7f20824462ca8c07708cab44c85","value":16}},"0dcdf460f5c94209bef469104a823a1f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_acabf30866b9409682626196e164adb0","placeholder":"​","style":"IPY_MODEL_2b566451d77a407fab45c92957fc07a5","value":" 16/16 [00:02&lt;00:00,  9.45it/s]"}},"fe333b49551b4406a74489d95992dd6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1881651d087f434e98bd8cf26a7c9a37":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5728d4875bd748e19e5735658625be68":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eebfbfc388f5458aaabef1eb254bafd1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bb5cc7f20824462ca8c07708cab44c85":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"acabf30866b9409682626196e164adb0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2b566451d77a407fab45c92957fc07a5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e80a6eeef6954b9e9cf151442067d7ee":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_41bc6eee06324226985e1aecfe0fbe63","IPY_MODEL_04cf5378450444379145da5b034fdbf8","IPY_MODEL_8ea8d44f04594fbeb8c17a4e769603ed"],"layout":"IPY_MODEL_15643ee779114b21ab193b25be8dd1fd"}},"41bc6eee06324226985e1aecfe0fbe63":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_46a7cf94d57547beb65b5c477148f2f3","placeholder":"​","style":"IPY_MODEL_562b5cadf300447ca41cb1e7a1b49454","value":"Batches: 100%"}},"04cf5378450444379145da5b034fdbf8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e6ef6474678b455c987e733a29ef2adb","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_fb21a44c0dee46d1b5af534695644f68","value":16}},"8ea8d44f04594fbeb8c17a4e769603ed":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_649e3d42fc9b40a899c5af9b0d487827","placeholder":"​","style":"IPY_MODEL_a44bb95d69e341c38b147e83454dd0d5","value":" 16/16 [00:03&lt;00:00,  7.37it/s]"}},"15643ee779114b21ab193b25be8dd1fd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46a7cf94d57547beb65b5c477148f2f3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"562b5cadf300447ca41cb1e7a1b49454":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e6ef6474678b455c987e733a29ef2adb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb21a44c0dee46d1b5af534695644f68":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"649e3d42fc9b40a899c5af9b0d487827":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a44bb95d69e341c38b147e83454dd0d5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1b7454e5c8404bc8a36d7e26d18e4a21":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_02af636da7cb4aac9a6c950a760fb9ea","IPY_MODEL_2aca817347d840a8814ee31ace5f2b89","IPY_MODEL_7b91b0bdb68c4519a0b911852200e926"],"layout":"IPY_MODEL_e75c75debce642c8932759b96707547f"}},"02af636da7cb4aac9a6c950a760fb9ea":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb2a5dde65ea49fb9b4f7501b44549df","placeholder":"​","style":"IPY_MODEL_a57a195db2d64c739c6821762ad7cb34","value":"Batches: 100%"}},"2aca817347d840a8814ee31ace5f2b89":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_12081dbe84d54ac4a9153d8545559341","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cc53c45411f24c96a9a6485e251a765b","value":63}},"7b91b0bdb68c4519a0b911852200e926":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3a9bfa0aa0d9425f8372c7ba42b992b2","placeholder":"​","style":"IPY_MODEL_91e3e03d36b047f387efc809af371f94","value":" 63/63 [00:14&lt;00:00,  9.35it/s]"}},"e75c75debce642c8932759b96707547f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cb2a5dde65ea49fb9b4f7501b44549df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a57a195db2d64c739c6821762ad7cb34":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"12081dbe84d54ac4a9153d8545559341":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cc53c45411f24c96a9a6485e251a765b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3a9bfa0aa0d9425f8372c7ba42b992b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"91e3e03d36b047f387efc809af371f94":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"979f6848b5e34ce6aecd752ed8176f92":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ef79033cf44c41bea55e8f0791719e7c","IPY_MODEL_e819a980652d40769f89fb3589322f07","IPY_MODEL_d54b0ce010154efd8b996f4149b9c234"],"layout":"IPY_MODEL_be35cfebfd27419ca04a24dd7299ad93"}},"ef79033cf44c41bea55e8f0791719e7c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ad12603607a247e59827a00367259cdc","placeholder":"​","style":"IPY_MODEL_5040ae0c960349b391a7ccf08051a360","value":"Batches: 100%"}},"e819a980652d40769f89fb3589322f07":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c3cc67f02a6c4810843c54c31234fa77","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_01ee64ed183647acaebe3bedc2d18d02","value":16}},"d54b0ce010154efd8b996f4149b9c234":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b4a95735624f4b1abd4103852dd235e1","placeholder":"​","style":"IPY_MODEL_39ebfa04aa614861ade2ba92a5116490","value":" 16/16 [00:03&lt;00:00,  6.17it/s]"}},"be35cfebfd27419ca04a24dd7299ad93":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad12603607a247e59827a00367259cdc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5040ae0c960349b391a7ccf08051a360":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c3cc67f02a6c4810843c54c31234fa77":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"01ee64ed183647acaebe3bedc2d18d02":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b4a95735624f4b1abd4103852dd235e1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"39ebfa04aa614861ade2ba92a5116490":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e5b98b6c1d1c4b3697d35d5a464df4fd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_755d60029eae4d9aa74bed566c008780","IPY_MODEL_731d28e24fb848a5ab30b451092743ff","IPY_MODEL_c4e2e09ab7694886944ae2063373bc30"],"layout":"IPY_MODEL_f8988912289e4a228a80f35ec4b30b5c"}},"755d60029eae4d9aa74bed566c008780":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a4e0e76d6b2d4941b657a7db9d0c3ccc","placeholder":"​","style":"IPY_MODEL_23514f66c9f1481cab58e9b0626b4015","value":"Batches: 100%"}},"731d28e24fb848a5ab30b451092743ff":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d441175084c645128c5fd1e5a5d63a01","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_957ff93a208c462f9123611385cbd9da","value":16}},"c4e2e09ab7694886944ae2063373bc30":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_743e8be767c64a7baa01c57199bf57b6","placeholder":"​","style":"IPY_MODEL_0c262869c5a54ef2a2bee7b458228092","value":" 16/16 [00:03&lt;00:00,  6.98it/s]"}},"f8988912289e4a228a80f35ec4b30b5c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a4e0e76d6b2d4941b657a7db9d0c3ccc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23514f66c9f1481cab58e9b0626b4015":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d441175084c645128c5fd1e5a5d63a01":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"957ff93a208c462f9123611385cbd9da":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"743e8be767c64a7baa01c57199bf57b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0c262869c5a54ef2a2bee7b458228092":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4fdc8d75993a42d3868b27745ea600ce":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a783c30c7a0949e6b01f0e872a7acec8","IPY_MODEL_7eb85b9361c94d71acd33d5ef2a8c484","IPY_MODEL_84c5e25b29d44db0ae645ef8a2e3b6c3"],"layout":"IPY_MODEL_cbaf1be8a1a94088b69b710859b54009"}},"a783c30c7a0949e6b01f0e872a7acec8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d139bd84938543ab8d88edd35608db01","placeholder":"​","style":"IPY_MODEL_5ab5684b0c214a50ae197ba98e788ed4","value":"Batches: 100%"}},"7eb85b9361c94d71acd33d5ef2a8c484":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d3f914fe3f6242b682fd99027c5da881","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_670e7bde18e04048b59ae3e69ab96be1","value":16}},"84c5e25b29d44db0ae645ef8a2e3b6c3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f9bfa8a85f0b426f9e1c9da8c421c977","placeholder":"​","style":"IPY_MODEL_68b2e8e018b54d5e92ee8f91a776da71","value":" 16/16 [00:02&lt;00:00,  9.10it/s]"}},"cbaf1be8a1a94088b69b710859b54009":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d139bd84938543ab8d88edd35608db01":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5ab5684b0c214a50ae197ba98e788ed4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d3f914fe3f6242b682fd99027c5da881":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"670e7bde18e04048b59ae3e69ab96be1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f9bfa8a85f0b426f9e1c9da8c421c977":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68b2e8e018b54d5e92ee8f91a776da71":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f641bfd161a440c59b9909a14520ba44":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d996e27dc53a4189bd884cceac23db70","IPY_MODEL_6f674ba03a8a40408567602e2768d23a","IPY_MODEL_edcf84d7d60b4b90865c52dc2206198a"],"layout":"IPY_MODEL_50d66880503d4186b534d2f81ae217ac"}},"d996e27dc53a4189bd884cceac23db70":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_83e3234b4f0449d9a25c99c78737b89c","placeholder":"​","style":"IPY_MODEL_7232c49537794a378508d24a5295ba80","value":"Batches: 100%"}},"6f674ba03a8a40408567602e2768d23a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_1c8c503400a24b63a634f9c2c6361c1b","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aef591c683cf4fabab95bbe8d6e8e3d6","value":16}},"edcf84d7d60b4b90865c52dc2206198a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_326043f71c1d4684845eabe71ff03daa","placeholder":"​","style":"IPY_MODEL_b67823e82e7c4d2eb28b5e244f97ce7d","value":" 16/16 [00:03&lt;00:00,  7.36it/s]"}},"50d66880503d4186b534d2f81ae217ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"83e3234b4f0449d9a25c99c78737b89c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7232c49537794a378508d24a5295ba80":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1c8c503400a24b63a634f9c2c6361c1b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aef591c683cf4fabab95bbe8d6e8e3d6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"326043f71c1d4684845eabe71ff03daa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b67823e82e7c4d2eb28b5e244f97ce7d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8797c3f1e2914343bfff1f8f36fa84bf":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2538dfb61c96469d9ec2b6392601c6f9","IPY_MODEL_095d44f63e144ea2a75ebab061421664","IPY_MODEL_3fd5edfacfbf4273baa35ea770453e1a"],"layout":"IPY_MODEL_f7d80b2d43ba447086332fa55885cabe"}},"2538dfb61c96469d9ec2b6392601c6f9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_115b69cfc89b4b9489d8c9592134aaec","placeholder":"​","style":"IPY_MODEL_4be7dbbad8404869b97f3aecaaaee3f1","value":"Batches: 100%"}},"095d44f63e144ea2a75ebab061421664":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c05d17cd29b84d78ab6eedc34c764b9e","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8ed895a7ef46421983c6ee9213225967","value":63}},"3fd5edfacfbf4273baa35ea770453e1a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3d93e9eba3db42b38507e8c37c3d9ad1","placeholder":"​","style":"IPY_MODEL_05f89e4e5ddd46f88685a79f15bc0d80","value":" 63/63 [00:14&lt;00:00,  9.30it/s]"}},"f7d80b2d43ba447086332fa55885cabe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"115b69cfc89b4b9489d8c9592134aaec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4be7dbbad8404869b97f3aecaaaee3f1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c05d17cd29b84d78ab6eedc34c764b9e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ed895a7ef46421983c6ee9213225967":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3d93e9eba3db42b38507e8c37c3d9ad1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"05f89e4e5ddd46f88685a79f15bc0d80":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"96bddc833d1843eeafdddc1b636b346f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3c1211b35f1a4287bf57c125f59238df","IPY_MODEL_a6ba65e1491647a79316f6094705802f","IPY_MODEL_8e6a587621cc40e1a3fd8e873e7c000a"],"layout":"IPY_MODEL_b02025d0bec543618aa104b5a16efe0c"}},"3c1211b35f1a4287bf57c125f59238df":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0e9fbbefb89248d6a3a94613d6c85c3b","placeholder":"​","style":"IPY_MODEL_0b120be325a74d639aeac594eab49a45","value":"Batches: 100%"}},"a6ba65e1491647a79316f6094705802f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9f7c6ea23f8a474aa180ecfd43425216","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0147bd9cdc0e4a8099f2a68cbdbd0625","value":16}},"8e6a587621cc40e1a3fd8e873e7c000a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c1aee148bf2742ae92b7013e56bf211c","placeholder":"​","style":"IPY_MODEL_ae39f6f657034d5aa95c9bd5a0b95532","value":" 16/16 [00:03&lt;00:00,  6.20it/s]"}},"b02025d0bec543618aa104b5a16efe0c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0e9fbbefb89248d6a3a94613d6c85c3b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0b120be325a74d639aeac594eab49a45":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9f7c6ea23f8a474aa180ecfd43425216":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0147bd9cdc0e4a8099f2a68cbdbd0625":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c1aee148bf2742ae92b7013e56bf211c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ae39f6f657034d5aa95c9bd5a0b95532":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d37d306d3aa1449b852e4ff70569c2d6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_596ce6772e6b43a986d6223a06f11834","IPY_MODEL_d9ec00f2eabf4408998434465b28a9a1","IPY_MODEL_f74a40ea1ed04e1e9768a74ff375b4cd"],"layout":"IPY_MODEL_8cfd9fbf13ea4eea9f11e8ac0d8f266b"}},"596ce6772e6b43a986d6223a06f11834":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b1e27d1110a74fe4bf370b46e9ee083d","placeholder":"​","style":"IPY_MODEL_68160eea217e4309b9b5c523787bacfd","value":"Batches: 100%"}},"d9ec00f2eabf4408998434465b28a9a1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f288e8d2db96440d934099a49bacb586","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_55531a1968784c449691455587837f6d","value":16}},"f74a40ea1ed04e1e9768a74ff375b4cd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7d5ef61fb48f44068af4d8f6d5682f8c","placeholder":"​","style":"IPY_MODEL_157017d724a243f5ae9cf25489238f70","value":" 16/16 [00:03&lt;00:00,  6.66it/s]"}},"8cfd9fbf13ea4eea9f11e8ac0d8f266b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b1e27d1110a74fe4bf370b46e9ee083d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68160eea217e4309b9b5c523787bacfd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f288e8d2db96440d934099a49bacb586":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55531a1968784c449691455587837f6d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7d5ef61fb48f44068af4d8f6d5682f8c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"157017d724a243f5ae9cf25489238f70":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fdb86b7e95df4d13b8048063536f31c6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_050305fbfe724017a28cf5973313f34e","IPY_MODEL_f2c6d484fbf846818c8ab721ae2966e5","IPY_MODEL_418845c1be7d4858b06509d8b4aeb7cf"],"layout":"IPY_MODEL_865838f76b4b4ab0a911d046d986c8a6"}},"050305fbfe724017a28cf5973313f34e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_afdd02ceb5334408a79a4e8428fb7443","placeholder":"​","style":"IPY_MODEL_3c7c6daaa9f7432f853fd028de616fd5","value":"Batches: 100%"}},"f2c6d484fbf846818c8ab721ae2966e5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5c9ef567d93d4c13b1309b0dcf1ea6df","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cf928f2f62d642f98f93eed6b0ac4838","value":16}},"418845c1be7d4858b06509d8b4aeb7cf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_990275f073ac4c349a849aab037bdcfd","placeholder":"​","style":"IPY_MODEL_65bf683cd62a4b0a8e9e7629a05836c4","value":" 16/16 [00:02&lt;00:00,  9.30it/s]"}},"865838f76b4b4ab0a911d046d986c8a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"afdd02ceb5334408a79a4e8428fb7443":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3c7c6daaa9f7432f853fd028de616fd5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5c9ef567d93d4c13b1309b0dcf1ea6df":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cf928f2f62d642f98f93eed6b0ac4838":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"990275f073ac4c349a849aab037bdcfd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"65bf683cd62a4b0a8e9e7629a05836c4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bbd1166f4fce4f308890778aa87aa268":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4e3f8f56b162426997951b503a5cc2b9","IPY_MODEL_17ce4f7579814ad49fca7d392413eadf","IPY_MODEL_fdfdc7aef69b4abcb204502e317158b8"],"layout":"IPY_MODEL_47587a6acf30498f9788f6144cdad676"}},"4e3f8f56b162426997951b503a5cc2b9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_952c5f8a493a4d2a9cf7015bd5e67a96","placeholder":"​","style":"IPY_MODEL_918f8e41d2b546bb9bc67f7512beedd2","value":"Batches: 100%"}},"17ce4f7579814ad49fca7d392413eadf":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ea04ef906e1b44bf98cab034b4d421ed","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c55da8d0a6fd4040849816c0b7115a05","value":16}},"fdfdc7aef69b4abcb204502e317158b8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5a7ab91057f34d669b9c227f9d6c2af6","placeholder":"​","style":"IPY_MODEL_89275614c88c4e3bb7b811ad628fe817","value":" 16/16 [00:03&lt;00:00,  7.14it/s]"}},"47587a6acf30498f9788f6144cdad676":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"952c5f8a493a4d2a9cf7015bd5e67a96":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"918f8e41d2b546bb9bc67f7512beedd2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ea04ef906e1b44bf98cab034b4d421ed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c55da8d0a6fd4040849816c0b7115a05":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5a7ab91057f34d669b9c227f9d6c2af6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89275614c88c4e3bb7b811ad628fe817":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6c844f00a9914981a5c114085ab6a7ca":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_24a8e81f6fb64821b759ee876bfcfccc","IPY_MODEL_4d6dfc2c7c064d2595b2007804df81cd","IPY_MODEL_5bafa857edce43b69d502ddfbbdfaa45"],"layout":"IPY_MODEL_03a1c009c35845e39707123e61c22496"}},"24a8e81f6fb64821b759ee876bfcfccc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e08d2b2ebed841f09d5dbaf7bcf8a8fe","placeholder":"​","style":"IPY_MODEL_993ce358094742a6b4a2d6bc12c82b6b","value":"Batches: 100%"}},"4d6dfc2c7c064d2595b2007804df81cd":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_62ca9555489c41cf8d4a11e6a8bac43a","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7ac1a85d4dcd4d648b238b943b64980f","value":63}},"5bafa857edce43b69d502ddfbbdfaa45":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_45bcda51a8cb4281bbde856d976bebe8","placeholder":"​","style":"IPY_MODEL_16ae7baca23d4d35b361011345e55799","value":" 63/63 [00:14&lt;00:00,  9.42it/s]"}},"03a1c009c35845e39707123e61c22496":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e08d2b2ebed841f09d5dbaf7bcf8a8fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"993ce358094742a6b4a2d6bc12c82b6b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"62ca9555489c41cf8d4a11e6a8bac43a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7ac1a85d4dcd4d648b238b943b64980f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"45bcda51a8cb4281bbde856d976bebe8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"16ae7baca23d4d35b361011345e55799":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"71c5f2c0b3fc4c7a841568b678697959":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6399e69e84424151abf24c413401c1cd","IPY_MODEL_dabcb26a3c034ec9a23921993daae193","IPY_MODEL_4e877fc9f4604ddf80563bc2d38f6773"],"layout":"IPY_MODEL_0583ce6755344fa8b5aead1f61a9ec50"}},"6399e69e84424151abf24c413401c1cd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fb99440ebd7b49c1a4a4173b0c2bd769","placeholder":"​","style":"IPY_MODEL_485ec014bb7d4524ae2177956c1e3899","value":"Batches: 100%"}},"dabcb26a3c034ec9a23921993daae193":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_3c0927f1f21f4281a9a4887656c415e7","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0de7862e1bba44d9a7351223f6624784","value":16}},"4e877fc9f4604ddf80563bc2d38f6773":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d0d2bdd912ea493fbdbb04c173a0d058","placeholder":"​","style":"IPY_MODEL_38a14aa08cc64efeb124f6ddd06e0ab5","value":" 16/16 [00:03&lt;00:00,  6.23it/s]"}},"0583ce6755344fa8b5aead1f61a9ec50":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb99440ebd7b49c1a4a4173b0c2bd769":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"485ec014bb7d4524ae2177956c1e3899":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3c0927f1f21f4281a9a4887656c415e7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0de7862e1bba44d9a7351223f6624784":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d0d2bdd912ea493fbdbb04c173a0d058":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38a14aa08cc64efeb124f6ddd06e0ab5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d97beecf85ae4a579001b5207cebf2f3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dbd64cef258e471f87f907aed4b19718","IPY_MODEL_6e6b2d1d50ca4fcebf5b8e6e4efc4ffe","IPY_MODEL_3d0a0042802e4f10b6aed98922a30262"],"layout":"IPY_MODEL_113a7c2b63fb4866a3a28eda080138eb"}},"dbd64cef258e471f87f907aed4b19718":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2d8390897a544e498e654341e7c2a48f","placeholder":"​","style":"IPY_MODEL_29d34a57969f489ebf8a970a7029f30a","value":"Batches: 100%"}},"6e6b2d1d50ca4fcebf5b8e6e4efc4ffe":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4222d6abc66b426bad5a2abeea205022","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_664f9cf945654f6d9ba29fc7829cadf1","value":16}},"3d0a0042802e4f10b6aed98922a30262":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3f558a72bd6346eeb829f8118d855baf","placeholder":"​","style":"IPY_MODEL_5e6b324d8b9b4c2984699c14979025db","value":" 16/16 [00:03&lt;00:00,  6.75it/s]"}},"113a7c2b63fb4866a3a28eda080138eb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2d8390897a544e498e654341e7c2a48f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"29d34a57969f489ebf8a970a7029f30a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4222d6abc66b426bad5a2abeea205022":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"664f9cf945654f6d9ba29fc7829cadf1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3f558a72bd6346eeb829f8118d855baf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e6b324d8b9b4c2984699c14979025db":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"81baa61e35934c2d8efb209388191a6d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a24679342bdd45fb986b86b6a00891f5","IPY_MODEL_fde683fcade14b4890ad9e949620bf22","IPY_MODEL_0b40f46a53654df18c6c10838239a38f"],"layout":"IPY_MODEL_6d20fe4ecdf543c5a51ad0fc51687306"}},"a24679342bdd45fb986b86b6a00891f5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_45bae07a56bf4d69be4a1374c1a936e3","placeholder":"​","style":"IPY_MODEL_4b382c3e01f54df2aa4dc098fbab5df3","value":"Batches: 100%"}},"fde683fcade14b4890ad9e949620bf22":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0f2219d80b314474b5cefacaf2c568fb","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2e79a65be5cd45c2b0aaf46aeb5e2317","value":16}},"0b40f46a53654df18c6c10838239a38f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2a5ae7803fba48c78f141351bc72a625","placeholder":"​","style":"IPY_MODEL_e5984c40e13b490991aa9c0d9c6cf3b3","value":" 16/16 [00:02&lt;00:00,  9.30it/s]"}},"6d20fe4ecdf543c5a51ad0fc51687306":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"45bae07a56bf4d69be4a1374c1a936e3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4b382c3e01f54df2aa4dc098fbab5df3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0f2219d80b314474b5cefacaf2c568fb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e79a65be5cd45c2b0aaf46aeb5e2317":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2a5ae7803fba48c78f141351bc72a625":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e5984c40e13b490991aa9c0d9c6cf3b3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"02b05e7f21634613bd256325ab53bf69":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bc130a1ff2144f81a36fb3f6c15b4f0c","IPY_MODEL_61e0449ff6c7488e97433f7eb9664994","IPY_MODEL_7245704d05994cefbfb4d72750cf803c"],"layout":"IPY_MODEL_142c6951f9f24c91b2fbad7f0f25071c"}},"bc130a1ff2144f81a36fb3f6c15b4f0c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9b5048cd32db4abc8223511f355ee238","placeholder":"​","style":"IPY_MODEL_dbc9b25040524be6be4dae42bfe91491","value":"Batches: 100%"}},"61e0449ff6c7488e97433f7eb9664994":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_055ea4cf6e384b11811130fcac665f69","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a5e8988f408c466cbc8d8d1d6dc4e61c","value":16}},"7245704d05994cefbfb4d72750cf803c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8eef806f7c1945019783f63f54830e3d","placeholder":"​","style":"IPY_MODEL_744429d2de4243cb892f31a4a47705ef","value":" 16/16 [00:03&lt;00:00,  7.37it/s]"}},"142c6951f9f24c91b2fbad7f0f25071c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9b5048cd32db4abc8223511f355ee238":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dbc9b25040524be6be4dae42bfe91491":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"055ea4cf6e384b11811130fcac665f69":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a5e8988f408c466cbc8d8d1d6dc4e61c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8eef806f7c1945019783f63f54830e3d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"744429d2de4243cb892f31a4a47705ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"571bd8458e0949039f9f0e698ec006df":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bed08164093b418386a2a3deb64a081f","IPY_MODEL_0091328000a345f49aeea9715d4ff646","IPY_MODEL_a6c222618c914f12b106d6adf82f3ae1"],"layout":"IPY_MODEL_8ff121a5e12c43e996b324352e9ee6ac"}},"bed08164093b418386a2a3deb64a081f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_876031bde29741df9033f47a3eb50260","placeholder":"​","style":"IPY_MODEL_653511748d86499689814afe952f69b0","value":"Batches: 100%"}},"0091328000a345f49aeea9715d4ff646":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1a97b8ca46344d4bb900193fc99824c","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e71b0d23f6114c9ea2f298b9e54b3168","value":63}},"a6c222618c914f12b106d6adf82f3ae1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e8587c14029243fb844f1446b3c19b94","placeholder":"​","style":"IPY_MODEL_d4a01af24973410dbe60b5ba4b2204b2","value":" 63/63 [00:12&lt;00:00, 10.60it/s]"}},"8ff121a5e12c43e996b324352e9ee6ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"876031bde29741df9033f47a3eb50260":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"653511748d86499689814afe952f69b0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d1a97b8ca46344d4bb900193fc99824c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e71b0d23f6114c9ea2f298b9e54b3168":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e8587c14029243fb844f1446b3c19b94":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d4a01af24973410dbe60b5ba4b2204b2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dc050e71e240472780dd61c34d66b051":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6ba79323a294443a84ea07dcfc9d417a","IPY_MODEL_a3bee79b29744c35bf51a13e2968a7d0","IPY_MODEL_35085dc7c81f4b63be410f7220a8d77c"],"layout":"IPY_MODEL_0e7925f9bb4e472fb342bb5df251fd76"}},"6ba79323a294443a84ea07dcfc9d417a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_14eb9b22bb914c27adda23a60238a625","placeholder":"​","style":"IPY_MODEL_7c9d928c98784732ba5a535a38a87656","value":"Batches: 100%"}},"a3bee79b29744c35bf51a13e2968a7d0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0805dd517086460fb2eed351b1da12d6","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aa38f0f67d9c467db0c775dc99c5ae9c","value":16}},"35085dc7c81f4b63be410f7220a8d77c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8814eb41b301406ebd74458f3d805dd1","placeholder":"​","style":"IPY_MODEL_aa0e41c57e454ea18a925c42a0bcccdb","value":" 16/16 [00:03&lt;00:00,  6.31it/s]"}},"0e7925f9bb4e472fb342bb5df251fd76":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14eb9b22bb914c27adda23a60238a625":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7c9d928c98784732ba5a535a38a87656":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0805dd517086460fb2eed351b1da12d6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aa38f0f67d9c467db0c775dc99c5ae9c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8814eb41b301406ebd74458f3d805dd1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aa0e41c57e454ea18a925c42a0bcccdb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f3aa399773084008891be45095a5ad4c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e36b134664ff4cceb6aca3418a3339c4","IPY_MODEL_9454fb7d14044beeabffddd2d49db154","IPY_MODEL_93e95f40643e4b39b09632fdfa0bf5cc"],"layout":"IPY_MODEL_774f2c3de8d742b8a510f9a47a3123f0"}},"e36b134664ff4cceb6aca3418a3339c4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89e011ef2e6e4edc902a5458ebe5eb9d","placeholder":"​","style":"IPY_MODEL_247d426a40a64610aa0774a49d9ab6e7","value":"Batches: 100%"}},"9454fb7d14044beeabffddd2d49db154":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0476e9c8e6034cf98c5e735397245a6a","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_22107f467feb493cbd25a0ca49d6cb9e","value":16}},"93e95f40643e4b39b09632fdfa0bf5cc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_22edf2023eb44e7f96c799c5195bcb1c","placeholder":"​","style":"IPY_MODEL_0e2be9c41f244274b0a0e84c9a5e879d","value":" 16/16 [00:03&lt;00:00,  6.76it/s]"}},"774f2c3de8d742b8a510f9a47a3123f0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"89e011ef2e6e4edc902a5458ebe5eb9d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"247d426a40a64610aa0774a49d9ab6e7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0476e9c8e6034cf98c5e735397245a6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"22107f467feb493cbd25a0ca49d6cb9e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"22edf2023eb44e7f96c799c5195bcb1c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0e2be9c41f244274b0a0e84c9a5e879d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"af566b0cf3c842f38c6a711fe4eed8ef":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d8fcdb65755f4ef9b3f94e2e0fcb9cbb","IPY_MODEL_1de8ed79dfd246a695069ddda21fc361","IPY_MODEL_f3d01dcba0964372a0f45c1a2435bade"],"layout":"IPY_MODEL_ea0a58302df94ea3be7f3c4fdef55051"}},"d8fcdb65755f4ef9b3f94e2e0fcb9cbb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_350d08b18ab644a884c59b0491c7141d","placeholder":"​","style":"IPY_MODEL_acedd703da3c49a8aa2476d48d54c725","value":"Batches: 100%"}},"1de8ed79dfd246a695069ddda21fc361":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_dad44ebb0bee4dbab25d556bc3226b36","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f60a28afd24646688987046cc9826242","value":16}},"f3d01dcba0964372a0f45c1a2435bade":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_56c4f6ae07b8442bad6a9fc7023715fa","placeholder":"​","style":"IPY_MODEL_b71f3c01ed2640ebae2d9543d360262d","value":" 16/16 [00:02&lt;00:00,  9.33it/s]"}},"ea0a58302df94ea3be7f3c4fdef55051":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"350d08b18ab644a884c59b0491c7141d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"acedd703da3c49a8aa2476d48d54c725":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dad44ebb0bee4dbab25d556bc3226b36":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f60a28afd24646688987046cc9826242":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"56c4f6ae07b8442bad6a9fc7023715fa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b71f3c01ed2640ebae2d9543d360262d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a9df3b3e78e44a12b2afeda7471f5be1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_89a24e1e64354f3994aa2174e921c8df","IPY_MODEL_be02c450400247ea84e90cc92d4654ea","IPY_MODEL_b6b702341aa642c883c7334afc0575a4"],"layout":"IPY_MODEL_53fc14824955422a889b3ad496e70d2e"}},"89a24e1e64354f3994aa2174e921c8df":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8b0f62ec91094885b4275533df8e007d","placeholder":"​","style":"IPY_MODEL_30fa9f482305416980b5a2db5fc9c8f3","value":"Batches: 100%"}},"be02c450400247ea84e90cc92d4654ea":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f7d31f80302b44298a70313ab2b13b95","max":16,"min":0,"orientation":"horizontal","style":"IPY_MODEL_77131b797e884d6b9e6017085ca1baf3","value":16}},"b6b702341aa642c883c7334afc0575a4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_19f4893d2037403393e5c7489e2a3033","placeholder":"​","style":"IPY_MODEL_1727dc17ddf5400b94cb3386a4c73c13","value":" 16/16 [00:03&lt;00:00,  6.97it/s]"}},"53fc14824955422a889b3ad496e70d2e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8b0f62ec91094885b4275533df8e007d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"30fa9f482305416980b5a2db5fc9c8f3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f7d31f80302b44298a70313ab2b13b95":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"77131b797e884d6b9e6017085ca1baf3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"19f4893d2037403393e5c7489e2a3033":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1727dc17ddf5400b94cb3386a4c73c13":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ce1407e2343e4599a7232c895cf04095":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_24339df8681e4a938836b3630c0409f4","IPY_MODEL_dafd41cff25c41be93ade1d2f5b52cf4","IPY_MODEL_38419404a39b4fdabd4eb2e43ba984bb"],"layout":"IPY_MODEL_6615d640761045098f89ec6f9d638c46"}},"24339df8681e4a938836b3630c0409f4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e52ae0b013cd4d02b8a234656a3d2a44","placeholder":"​","style":"IPY_MODEL_7fbc9a3925f2470aa1011f85c47dfe09","value":"Batches: 100%"}},"dafd41cff25c41be93ade1d2f5b52cf4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8034f20a6fc44ceea30ec14207735c11","max":63,"min":0,"orientation":"horizontal","style":"IPY_MODEL_da37e1e3658c4bda9910998ec0657777","value":63}},"38419404a39b4fdabd4eb2e43ba984bb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_75b21426f3ad47a2bde7d4513f31ac1d","placeholder":"​","style":"IPY_MODEL_ad9bfd3ff79f4b339c0b2b78ccc17e54","value":" 63/63 [00:12&lt;00:00, 10.41it/s]"}},"6615d640761045098f89ec6f9d638c46":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e52ae0b013cd4d02b8a234656a3d2a44":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7fbc9a3925f2470aa1011f85c47dfe09":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8034f20a6fc44ceea30ec14207735c11":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"da37e1e3658c4bda9910998ec0657777":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"75b21426f3ad47a2bde7d4513f31ac1d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad9bfd3ff79f4b339c0b2b78ccc17e54":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}